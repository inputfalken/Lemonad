### YamlMime:XRefMap
sorted: true
references:
- uid: Lemonad.Async.Extensions
  name: Lemonad.Async.Extensions
  href: api/Lemonad.Async.Extensions.html
  commentId: N:Lemonad.Async.Extensions
  fullName: Lemonad.Async.Extensions
  nameWithType: Lemonad.Async.Extensions
- uid: Lemonad.Async.Extensions.TaskExtensions
  name: TaskExtensions
  href: api/Lemonad.Async.Extensions.TaskExtensions.html
  commentId: T:Lemonad.Async.Extensions.TaskExtensions
  fullName: Lemonad.Async.Extensions.TaskExtensions
  nameWithType: TaskExtensions
- uid: Lemonad.Async.Extensions.TaskExtensions.Do(System.Threading.Tasks.Task,System.Action)
  name: Do(Task, Action)
  href: api/Lemonad.Async.Extensions.TaskExtensions.html#Lemonad_Async_Extensions_TaskExtensions_Do_System_Threading_Tasks_Task_System_Action_
  commentId: M:Lemonad.Async.Extensions.TaskExtensions.Do(System.Threading.Tasks.Task,System.Action)
  fullName: Lemonad.Async.Extensions.TaskExtensions.Do(System.Threading.Tasks.Task, System.Action)
  nameWithType: TaskExtensions.Do(Task, Action)
- uid: Lemonad.Async.Extensions.TaskExtensions.Do*
  name: Do
  href: api/Lemonad.Async.Extensions.TaskExtensions.html#Lemonad_Async_Extensions_TaskExtensions_Do_
  commentId: Overload:Lemonad.Async.Extensions.TaskExtensions.Do
  isSpec: "True"
  fullName: Lemonad.Async.Extensions.TaskExtensions.Do
  nameWithType: TaskExtensions.Do
- uid: Lemonad.Async.Extensions.TaskExtensions.Do``1(System.Threading.Tasks.Task{``0},System.Action{``0})
  name: Do<T>(Task<T>, Action<T>)
  href: api/Lemonad.Async.Extensions.TaskExtensions.html#Lemonad_Async_Extensions_TaskExtensions_Do__1_System_Threading_Tasks_Task___0__System_Action___0__
  commentId: M:Lemonad.Async.Extensions.TaskExtensions.Do``1(System.Threading.Tasks.Task{``0},System.Action{``0})
  name.vb: Do(Of T)(Task(Of T), Action(Of T))
  fullName: Lemonad.Async.Extensions.TaskExtensions.Do<T>(System.Threading.Tasks.Task<T>, System.Action<T>)
  fullName.vb: Lemonad.Async.Extensions.TaskExtensions.Do(Of T)(System.Threading.Tasks.Task(Of T), System.Action(Of T))
  nameWithType: TaskExtensions.Do<T>(Task<T>, Action<T>)
  nameWithType.vb: TaskExtensions.Do(Of T)(Task(Of T), Action(Of T))
- uid: Lemonad.Async.Extensions.TaskExtensions.FlatMap(System.Threading.Tasks.Task,System.Func{System.Threading.Tasks.Task})
  name: FlatMap(Task, Func<Task>)
  href: api/Lemonad.Async.Extensions.TaskExtensions.html#Lemonad_Async_Extensions_TaskExtensions_FlatMap_System_Threading_Tasks_Task_System_Func_System_Threading_Tasks_Task__
  commentId: M:Lemonad.Async.Extensions.TaskExtensions.FlatMap(System.Threading.Tasks.Task,System.Func{System.Threading.Tasks.Task})
  name.vb: FlatMap(Task, Func(Of Task))
  fullName: Lemonad.Async.Extensions.TaskExtensions.FlatMap(System.Threading.Tasks.Task, System.Func<System.Threading.Tasks.Task>)
  fullName.vb: Lemonad.Async.Extensions.TaskExtensions.FlatMap(System.Threading.Tasks.Task, System.Func(Of System.Threading.Tasks.Task))
  nameWithType: TaskExtensions.FlatMap(Task, Func<Task>)
  nameWithType.vb: TaskExtensions.FlatMap(Task, Func(Of Task))
- uid: Lemonad.Async.Extensions.TaskExtensions.FlatMap*
  name: FlatMap
  href: api/Lemonad.Async.Extensions.TaskExtensions.html#Lemonad_Async_Extensions_TaskExtensions_FlatMap_
  commentId: Overload:Lemonad.Async.Extensions.TaskExtensions.FlatMap
  isSpec: "True"
  fullName: Lemonad.Async.Extensions.TaskExtensions.FlatMap
  nameWithType: TaskExtensions.FlatMap
- uid: Lemonad.Async.Extensions.TaskExtensions.FlatMap``1(System.Threading.Tasks.Task,System.Func{System.Threading.Tasks.Task{``0}})
  name: FlatMap<TResult>(Task, Func<Task<TResult>>)
  href: api/Lemonad.Async.Extensions.TaskExtensions.html#Lemonad_Async_Extensions_TaskExtensions_FlatMap__1_System_Threading_Tasks_Task_System_Func_System_Threading_Tasks_Task___0___
  commentId: M:Lemonad.Async.Extensions.TaskExtensions.FlatMap``1(System.Threading.Tasks.Task,System.Func{System.Threading.Tasks.Task{``0}})
  name.vb: FlatMap(Of TResult)(Task, Func(Of Task(Of TResult)))
  fullName: Lemonad.Async.Extensions.TaskExtensions.FlatMap<TResult>(System.Threading.Tasks.Task, System.Func<System.Threading.Tasks.Task<TResult>>)
  fullName.vb: Lemonad.Async.Extensions.TaskExtensions.FlatMap(Of TResult)(System.Threading.Tasks.Task, System.Func(Of System.Threading.Tasks.Task(Of TResult)))
  nameWithType: TaskExtensions.FlatMap<TResult>(Task, Func<Task<TResult>>)
  nameWithType.vb: TaskExtensions.FlatMap(Of TResult)(Task, Func(Of Task(Of TResult)))
- uid: Lemonad.Async.Extensions.TaskExtensions.FlatMap``1(System.Threading.Tasks.Task,System.Func{System.Threading.Tasks.Task},System.Func{``0})
  name: FlatMap<TSource>(Task, Func<Task>, Func<TSource>)
  href: api/Lemonad.Async.Extensions.TaskExtensions.html#Lemonad_Async_Extensions_TaskExtensions_FlatMap__1_System_Threading_Tasks_Task_System_Func_System_Threading_Tasks_Task__System_Func___0__
  commentId: M:Lemonad.Async.Extensions.TaskExtensions.FlatMap``1(System.Threading.Tasks.Task,System.Func{System.Threading.Tasks.Task},System.Func{``0})
  name.vb: FlatMap(Of TSource)(Task, Func(Of Task), Func(Of TSource))
  fullName: Lemonad.Async.Extensions.TaskExtensions.FlatMap<TSource>(System.Threading.Tasks.Task, System.Func<System.Threading.Tasks.Task>, System.Func<TSource>)
  fullName.vb: Lemonad.Async.Extensions.TaskExtensions.FlatMap(Of TSource)(System.Threading.Tasks.Task, System.Func(Of System.Threading.Tasks.Task), System.Func(Of TSource))
  nameWithType: TaskExtensions.FlatMap<TSource>(Task, Func<Task>, Func<TSource>)
  nameWithType.vb: TaskExtensions.FlatMap(Of TSource)(Task, Func(Of Task), Func(Of TSource))
- uid: Lemonad.Async.Extensions.TaskExtensions.FlatMap``1(System.Threading.Tasks.Task{``0},System.Func{``0,System.Threading.Tasks.Task})
  name: FlatMap<TSource>(Task<TSource>, Func<TSource, Task>)
  href: api/Lemonad.Async.Extensions.TaskExtensions.html#Lemonad_Async_Extensions_TaskExtensions_FlatMap__1_System_Threading_Tasks_Task___0__System_Func___0_System_Threading_Tasks_Task__
  commentId: M:Lemonad.Async.Extensions.TaskExtensions.FlatMap``1(System.Threading.Tasks.Task{``0},System.Func{``0,System.Threading.Tasks.Task})
  name.vb: FlatMap(Of TSource)(Task(Of TSource), Func(Of TSource, Task))
  fullName: Lemonad.Async.Extensions.TaskExtensions.FlatMap<TSource>(System.Threading.Tasks.Task<TSource>, System.Func<TSource, System.Threading.Tasks.Task>)
  fullName.vb: Lemonad.Async.Extensions.TaskExtensions.FlatMap(Of TSource)(System.Threading.Tasks.Task(Of TSource), System.Func(Of TSource, System.Threading.Tasks.Task))
  nameWithType: TaskExtensions.FlatMap<TSource>(Task<TSource>, Func<TSource, Task>)
  nameWithType.vb: TaskExtensions.FlatMap(Of TSource)(Task(Of TSource), Func(Of TSource, Task))
- uid: Lemonad.Async.Extensions.TaskExtensions.FlatMap``2(System.Threading.Tasks.Task,System.Func{System.Threading.Tasks.Task{``0}},System.Func{``0,``1})
  name: FlatMap<TTask, TResult>(Task, Func<Task<TTask>>, Func<TTask, TResult>)
  href: api/Lemonad.Async.Extensions.TaskExtensions.html#Lemonad_Async_Extensions_TaskExtensions_FlatMap__2_System_Threading_Tasks_Task_System_Func_System_Threading_Tasks_Task___0___System_Func___0___1__
  commentId: M:Lemonad.Async.Extensions.TaskExtensions.FlatMap``2(System.Threading.Tasks.Task,System.Func{System.Threading.Tasks.Task{``0}},System.Func{``0,``1})
  name.vb: FlatMap(Of TTask, TResult)(Task, Func(Of Task(Of TTask)), Func(Of TTask, TResult))
  fullName: Lemonad.Async.Extensions.TaskExtensions.FlatMap<TTask, TResult>(System.Threading.Tasks.Task, System.Func<System.Threading.Tasks.Task<TTask>>, System.Func<TTask, TResult>)
  fullName.vb: Lemonad.Async.Extensions.TaskExtensions.FlatMap(Of TTask, TResult)(System.Threading.Tasks.Task, System.Func(Of System.Threading.Tasks.Task(Of TTask)), System.Func(Of TTask, TResult))
  nameWithType: TaskExtensions.FlatMap<TTask, TResult>(Task, Func<Task<TTask>>, Func<TTask, TResult>)
  nameWithType.vb: TaskExtensions.FlatMap(Of TTask, TResult)(Task, Func(Of Task(Of TTask)), Func(Of TTask, TResult))
- uid: Lemonad.Async.Extensions.TaskExtensions.FlatMap``2(System.Threading.Tasks.Task{``0},System.Func{``0,System.Threading.Tasks.Task{``1}})
  name: FlatMap<TSource, TResult>(Task<TSource>, Func<TSource, Task<TResult>>)
  href: api/Lemonad.Async.Extensions.TaskExtensions.html#Lemonad_Async_Extensions_TaskExtensions_FlatMap__2_System_Threading_Tasks_Task___0__System_Func___0_System_Threading_Tasks_Task___1___
  commentId: M:Lemonad.Async.Extensions.TaskExtensions.FlatMap``2(System.Threading.Tasks.Task{``0},System.Func{``0,System.Threading.Tasks.Task{``1}})
  name.vb: FlatMap(Of TSource, TResult)(Task(Of TSource), Func(Of TSource, Task(Of TResult)))
  fullName: Lemonad.Async.Extensions.TaskExtensions.FlatMap<TSource, TResult>(System.Threading.Tasks.Task<TSource>, System.Func<TSource, System.Threading.Tasks.Task<TResult>>)
  fullName.vb: Lemonad.Async.Extensions.TaskExtensions.FlatMap(Of TSource, TResult)(System.Threading.Tasks.Task(Of TSource), System.Func(Of TSource, System.Threading.Tasks.Task(Of TResult)))
  nameWithType: TaskExtensions.FlatMap<TSource, TResult>(Task<TSource>, Func<TSource, Task<TResult>>)
  nameWithType.vb: TaskExtensions.FlatMap(Of TSource, TResult)(Task(Of TSource), Func(Of TSource, Task(Of TResult)))
- uid: Lemonad.Async.Extensions.TaskExtensions.FlatMap``2(System.Threading.Tasks.Task{``0},System.Func{``0,System.Threading.Tasks.Task},System.Func{``0,``1})
  name: FlatMap<TSource, TResult>(Task<TSource>, Func<TSource, Task>, Func<TSource, TResult>)
  href: api/Lemonad.Async.Extensions.TaskExtensions.html#Lemonad_Async_Extensions_TaskExtensions_FlatMap__2_System_Threading_Tasks_Task___0__System_Func___0_System_Threading_Tasks_Task__System_Func___0___1__
  commentId: M:Lemonad.Async.Extensions.TaskExtensions.FlatMap``2(System.Threading.Tasks.Task{``0},System.Func{``0,System.Threading.Tasks.Task},System.Func{``0,``1})
  name.vb: FlatMap(Of TSource, TResult)(Task(Of TSource), Func(Of TSource, Task), Func(Of TSource, TResult))
  fullName: Lemonad.Async.Extensions.TaskExtensions.FlatMap<TSource, TResult>(System.Threading.Tasks.Task<TSource>, System.Func<TSource, System.Threading.Tasks.Task>, System.Func<TSource, TResult>)
  fullName.vb: Lemonad.Async.Extensions.TaskExtensions.FlatMap(Of TSource, TResult)(System.Threading.Tasks.Task(Of TSource), System.Func(Of TSource, System.Threading.Tasks.Task), System.Func(Of TSource, TResult))
  nameWithType: TaskExtensions.FlatMap<TSource, TResult>(Task<TSource>, Func<TSource, Task>, Func<TSource, TResult>)
  nameWithType.vb: TaskExtensions.FlatMap(Of TSource, TResult)(Task(Of TSource), Func(Of TSource, Task), Func(Of TSource, TResult))
- uid: Lemonad.Async.Extensions.TaskExtensions.FlatMap``3(System.Threading.Tasks.Task{``0},System.Func{``0,System.Threading.Tasks.Task{``1}},System.Func{``0,``1,``2})
  name: FlatMap<TSource, TTask, TResult>(Task<TSource>, Func<TSource, Task<TTask>>, Func<TSource, TTask, TResult>)
  href: api/Lemonad.Async.Extensions.TaskExtensions.html#Lemonad_Async_Extensions_TaskExtensions_FlatMap__3_System_Threading_Tasks_Task___0__System_Func___0_System_Threading_Tasks_Task___1___System_Func___0___1___2__
  commentId: M:Lemonad.Async.Extensions.TaskExtensions.FlatMap``3(System.Threading.Tasks.Task{``0},System.Func{``0,System.Threading.Tasks.Task{``1}},System.Func{``0,``1,``2})
  name.vb: FlatMap(Of TSource, TTask, TResult)(Task(Of TSource), Func(Of TSource, Task(Of TTask)), Func(Of TSource, TTask, TResult))
  fullName: Lemonad.Async.Extensions.TaskExtensions.FlatMap<TSource, TTask, TResult>(System.Threading.Tasks.Task<TSource>, System.Func<TSource, System.Threading.Tasks.Task<TTask>>, System.Func<TSource, TTask, TResult>)
  fullName.vb: Lemonad.Async.Extensions.TaskExtensions.FlatMap(Of TSource, TTask, TResult)(System.Threading.Tasks.Task(Of TSource), System.Func(Of TSource, System.Threading.Tasks.Task(Of TTask)), System.Func(Of TSource, TTask, TResult))
  nameWithType: TaskExtensions.FlatMap<TSource, TTask, TResult>(Task<TSource>, Func<TSource, Task<TTask>>, Func<TSource, TTask, TResult>)
  nameWithType.vb: TaskExtensions.FlatMap(Of TSource, TTask, TResult)(Task(Of TSource), Func(Of TSource, Task(Of TTask)), Func(Of TSource, TTask, TResult))
- uid: Lemonad.Async.Extensions.TaskExtensions.Map*
  name: Map
  href: api/Lemonad.Async.Extensions.TaskExtensions.html#Lemonad_Async_Extensions_TaskExtensions_Map_
  commentId: Overload:Lemonad.Async.Extensions.TaskExtensions.Map
  isSpec: "True"
  fullName: Lemonad.Async.Extensions.TaskExtensions.Map
  nameWithType: TaskExtensions.Map
- uid: Lemonad.Async.Extensions.TaskExtensions.Map``1(System.Threading.Tasks.Task,System.Func{``0})
  name: Map<TResult>(Task, Func<TResult>)
  href: api/Lemonad.Async.Extensions.TaskExtensions.html#Lemonad_Async_Extensions_TaskExtensions_Map__1_System_Threading_Tasks_Task_System_Func___0__
  commentId: M:Lemonad.Async.Extensions.TaskExtensions.Map``1(System.Threading.Tasks.Task,System.Func{``0})
  name.vb: Map(Of TResult)(Task, Func(Of TResult))
  fullName: Lemonad.Async.Extensions.TaskExtensions.Map<TResult>(System.Threading.Tasks.Task, System.Func<TResult>)
  fullName.vb: Lemonad.Async.Extensions.TaskExtensions.Map(Of TResult)(System.Threading.Tasks.Task, System.Func(Of TResult))
  nameWithType: TaskExtensions.Map<TResult>(Task, Func<TResult>)
  nameWithType.vb: TaskExtensions.Map(Of TResult)(Task, Func(Of TResult))
- uid: Lemonad.Async.Extensions.TaskExtensions.Map``2(System.Threading.Tasks.Task{``0},System.Func{``0,``1})
  name: Map<TSource, TResult>(Task<TSource>, Func<TSource, TResult>)
  href: api/Lemonad.Async.Extensions.TaskExtensions.html#Lemonad_Async_Extensions_TaskExtensions_Map__2_System_Threading_Tasks_Task___0__System_Func___0___1__
  commentId: M:Lemonad.Async.Extensions.TaskExtensions.Map``2(System.Threading.Tasks.Task{``0},System.Func{``0,``1})
  name.vb: Map(Of TSource, TResult)(Task(Of TSource), Func(Of TSource, TResult))
  fullName: Lemonad.Async.Extensions.TaskExtensions.Map<TSource, TResult>(System.Threading.Tasks.Task<TSource>, System.Func<TSource, TResult>)
  fullName.vb: Lemonad.Async.Extensions.TaskExtensions.Map(Of TSource, TResult)(System.Threading.Tasks.Task(Of TSource), System.Func(Of TSource, TResult))
  nameWithType: TaskExtensions.Map<TSource, TResult>(Task<TSource>, Func<TSource, TResult>)
  nameWithType.vb: TaskExtensions.Map(Of TSource, TResult)(Task(Of TSource), Func(Of TSource, TResult))
- uid: Lemonad.Async.Extensions.TaskExtensions.Zip*
  name: Zip
  href: api/Lemonad.Async.Extensions.TaskExtensions.html#Lemonad_Async_Extensions_TaskExtensions_Zip_
  commentId: Overload:Lemonad.Async.Extensions.TaskExtensions.Zip
  isSpec: "True"
  fullName: Lemonad.Async.Extensions.TaskExtensions.Zip
  nameWithType: TaskExtensions.Zip
- uid: Lemonad.Async.Extensions.TaskExtensions.Zip``1(System.Threading.Tasks.Task,System.Threading.Tasks.Task,System.Func{``0})
  name: Zip<T>(Task, Task, Func<T>)
  href: api/Lemonad.Async.Extensions.TaskExtensions.html#Lemonad_Async_Extensions_TaskExtensions_Zip__1_System_Threading_Tasks_Task_System_Threading_Tasks_Task_System_Func___0__
  commentId: M:Lemonad.Async.Extensions.TaskExtensions.Zip``1(System.Threading.Tasks.Task,System.Threading.Tasks.Task,System.Func{``0})
  name.vb: Zip(Of T)(Task, Task, Func(Of T))
  fullName: Lemonad.Async.Extensions.TaskExtensions.Zip<T>(System.Threading.Tasks.Task, System.Threading.Tasks.Task, System.Func<T>)
  fullName.vb: Lemonad.Async.Extensions.TaskExtensions.Zip(Of T)(System.Threading.Tasks.Task, System.Threading.Tasks.Task, System.Func(Of T))
  nameWithType: TaskExtensions.Zip<T>(Task, Task, Func<T>)
  nameWithType.vb: TaskExtensions.Zip(Of T)(Task, Task, Func(Of T))
- uid: Lemonad.Async.Extensions.TaskExtensions.Zip``2(System.Threading.Tasks.Task,System.Threading.Tasks.Task{``1},System.Func{``1,``0})
  name: Zip<T, T2>(Task, Task<T2>, Func<T2, T>)
  href: api/Lemonad.Async.Extensions.TaskExtensions.html#Lemonad_Async_Extensions_TaskExtensions_Zip__2_System_Threading_Tasks_Task_System_Threading_Tasks_Task___1__System_Func___1___0__
  commentId: M:Lemonad.Async.Extensions.TaskExtensions.Zip``2(System.Threading.Tasks.Task,System.Threading.Tasks.Task{``1},System.Func{``1,``0})
  name.vb: Zip(Of T, T2)(Task, Task(Of T2), Func(Of T2, T))
  fullName: Lemonad.Async.Extensions.TaskExtensions.Zip<T, T2>(System.Threading.Tasks.Task, System.Threading.Tasks.Task<T2>, System.Func<T2, T>)
  fullName.vb: Lemonad.Async.Extensions.TaskExtensions.Zip(Of T, T2)(System.Threading.Tasks.Task, System.Threading.Tasks.Task(Of T2), System.Func(Of T2, T))
  nameWithType: TaskExtensions.Zip<T, T2>(Task, Task<T2>, Func<T2, T>)
  nameWithType.vb: TaskExtensions.Zip(Of T, T2)(Task, Task(Of T2), Func(Of T2, T))
- uid: Lemonad.Async.Extensions.TaskExtensions.Zip``3(System.Threading.Tasks.Task{``0},System.Threading.Tasks.Task{``1},System.Func{``0,``1,``2})
  name: Zip<T, T2, T3>(Task<T>, Task<T2>, Func<T, T2, T3>)
  href: api/Lemonad.Async.Extensions.TaskExtensions.html#Lemonad_Async_Extensions_TaskExtensions_Zip__3_System_Threading_Tasks_Task___0__System_Threading_Tasks_Task___1__System_Func___0___1___2__
  commentId: M:Lemonad.Async.Extensions.TaskExtensions.Zip``3(System.Threading.Tasks.Task{``0},System.Threading.Tasks.Task{``1},System.Func{``0,``1,``2})
  name.vb: Zip(Of T, T2, T3)(Task(Of T), Task(Of T2), Func(Of T, T2, T3))
  fullName: Lemonad.Async.Extensions.TaskExtensions.Zip<T, T2, T3>(System.Threading.Tasks.Task<T>, System.Threading.Tasks.Task<T2>, System.Func<T, T2, T3>)
  fullName.vb: Lemonad.Async.Extensions.TaskExtensions.Zip(Of T, T2, T3)(System.Threading.Tasks.Task(Of T), System.Threading.Tasks.Task(Of T2), System.Func(Of T, T2, T3))
  nameWithType: TaskExtensions.Zip<T, T2, T3>(Task<T>, Task<T2>, Func<T, T2, T3>)
  nameWithType.vb: TaskExtensions.Zip(Of T, T2, T3)(Task(Of T), Task(Of T2), Func(Of T, T2, T3))
- uid: Lemonad.ErrorHandling
  name: Lemonad.ErrorHandling
  href: api/Lemonad.ErrorHandling.html
  commentId: N:Lemonad.ErrorHandling
  fullName: Lemonad.ErrorHandling
  nameWithType: Lemonad.ErrorHandling
- uid: Lemonad.ErrorHandling.Extensions
  name: Lemonad.ErrorHandling.Extensions
  href: api/Lemonad.ErrorHandling.Extensions.html
  commentId: N:Lemonad.ErrorHandling.Extensions
  fullName: Lemonad.ErrorHandling.Extensions
  nameWithType: Lemonad.ErrorHandling.Extensions
- uid: Lemonad.ErrorHandling.Extensions.MaybeExtensions
  name: MaybeExtensions
  href: api/Lemonad.ErrorHandling.Extensions.MaybeExtensions.html
  commentId: T:Lemonad.ErrorHandling.Extensions.MaybeExtensions
  fullName: Lemonad.ErrorHandling.Extensions.MaybeExtensions
  nameWithType: MaybeExtensions
- uid: Lemonad.ErrorHandling.Extensions.MaybeExtensions.FirstMaybe*
  name: FirstMaybe
  href: api/Lemonad.ErrorHandling.Extensions.MaybeExtensions.html#Lemonad_ErrorHandling_Extensions_MaybeExtensions_FirstMaybe_
  commentId: Overload:Lemonad.ErrorHandling.Extensions.MaybeExtensions.FirstMaybe
  isSpec: "True"
  fullName: Lemonad.ErrorHandling.Extensions.MaybeExtensions.FirstMaybe
  nameWithType: MaybeExtensions.FirstMaybe
- uid: Lemonad.ErrorHandling.Extensions.MaybeExtensions.FirstMaybe``1(System.Collections.Generic.IEnumerable{``0})
  name: FirstMaybe<TSource>(IEnumerable<TSource>)
  href: api/Lemonad.ErrorHandling.Extensions.MaybeExtensions.html#Lemonad_ErrorHandling_Extensions_MaybeExtensions_FirstMaybe__1_System_Collections_Generic_IEnumerable___0__
  commentId: M:Lemonad.ErrorHandling.Extensions.MaybeExtensions.FirstMaybe``1(System.Collections.Generic.IEnumerable{``0})
  name.vb: FirstMaybe(Of TSource)(IEnumerable(Of TSource))
  fullName: Lemonad.ErrorHandling.Extensions.MaybeExtensions.FirstMaybe<TSource>(System.Collections.Generic.IEnumerable<TSource>)
  fullName.vb: Lemonad.ErrorHandling.Extensions.MaybeExtensions.FirstMaybe(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))
  nameWithType: MaybeExtensions.FirstMaybe<TSource>(IEnumerable<TSource>)
  nameWithType.vb: MaybeExtensions.FirstMaybe(Of TSource)(IEnumerable(Of TSource))
- uid: Lemonad.ErrorHandling.Extensions.MaybeExtensions.FirstMaybe``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  name: FirstMaybe<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)
  href: api/Lemonad.ErrorHandling.Extensions.MaybeExtensions.html#Lemonad_ErrorHandling_Extensions_MaybeExtensions_FirstMaybe__1_System_Collections_Generic_IEnumerable___0__System_Func___0_System_Boolean__
  commentId: M:Lemonad.ErrorHandling.Extensions.MaybeExtensions.FirstMaybe``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  name.vb: FirstMaybe(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))
  fullName: Lemonad.ErrorHandling.Extensions.MaybeExtensions.FirstMaybe<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Boolean>)
  fullName.vb: Lemonad.ErrorHandling.Extensions.MaybeExtensions.FirstMaybe(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Boolean))
  nameWithType: MaybeExtensions.FirstMaybe<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)
  nameWithType.vb: MaybeExtensions.FirstMaybe(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))
- uid: Lemonad.ErrorHandling.Extensions.MaybeExtensions.Match*
  name: Match
  href: api/Lemonad.ErrorHandling.Extensions.MaybeExtensions.html#Lemonad_ErrorHandling_Extensions_MaybeExtensions_Match_
  commentId: Overload:Lemonad.ErrorHandling.Extensions.MaybeExtensions.Match
  isSpec: "True"
  fullName: Lemonad.ErrorHandling.Extensions.MaybeExtensions.Match
  nameWithType: MaybeExtensions.Match
- uid: Lemonad.ErrorHandling.Extensions.MaybeExtensions.Match``2(System.Collections.Generic.IEnumerable{Lemonad.ErrorHandling.Maybe{``0}},System.Func{``0,``1},System.Func{``1})
  name: Match<TSource, TResult>(IEnumerable<Maybe<TSource>>, Func<TSource, TResult>, Func<TResult>)
  href: api/Lemonad.ErrorHandling.Extensions.MaybeExtensions.html#Lemonad_ErrorHandling_Extensions_MaybeExtensions_Match__2_System_Collections_Generic_IEnumerable_Lemonad_ErrorHandling_Maybe___0___System_Func___0___1__System_Func___1__
  commentId: M:Lemonad.ErrorHandling.Extensions.MaybeExtensions.Match``2(System.Collections.Generic.IEnumerable{Lemonad.ErrorHandling.Maybe{``0}},System.Func{``0,``1},System.Func{``1})
  name.vb: Match(Of TSource, TResult)(IEnumerable(Of Maybe(Of TSource)), Func(Of TSource, TResult), Func(Of TResult))
  fullName: Lemonad.ErrorHandling.Extensions.MaybeExtensions.Match<TSource, TResult>(System.Collections.Generic.IEnumerable<Lemonad.ErrorHandling.Maybe<TSource>>, System.Func<TSource, TResult>, System.Func<TResult>)
  fullName.vb: Lemonad.ErrorHandling.Extensions.MaybeExtensions.Match(Of TSource, TResult)(System.Collections.Generic.IEnumerable(Of Lemonad.ErrorHandling.Maybe(Of TSource)), System.Func(Of TSource, TResult), System.Func(Of TResult))
  nameWithType: MaybeExtensions.Match<TSource, TResult>(IEnumerable<Maybe<TSource>>, Func<TSource, TResult>, Func<TResult>)
  nameWithType.vb: MaybeExtensions.Match(Of TSource, TResult)(IEnumerable(Of Maybe(Of TSource)), Func(Of TSource, TResult), Func(Of TResult))
- uid: Lemonad.ErrorHandling.Extensions.MaybeExtensions.NoValues*
  name: NoValues
  href: api/Lemonad.ErrorHandling.Extensions.MaybeExtensions.html#Lemonad_ErrorHandling_Extensions_MaybeExtensions_NoValues_
  commentId: Overload:Lemonad.ErrorHandling.Extensions.MaybeExtensions.NoValues
  isSpec: "True"
  fullName: Lemonad.ErrorHandling.Extensions.MaybeExtensions.NoValues
  nameWithType: MaybeExtensions.NoValues
- uid: Lemonad.ErrorHandling.Extensions.MaybeExtensions.NoValues``2(System.Collections.Generic.IEnumerable{Lemonad.ErrorHandling.Maybe{``0}},System.Func{``1})
  name: NoValues<TSource, TResult>(IEnumerable<Maybe<TSource>>, Func<TResult>)
  href: api/Lemonad.ErrorHandling.Extensions.MaybeExtensions.html#Lemonad_ErrorHandling_Extensions_MaybeExtensions_NoValues__2_System_Collections_Generic_IEnumerable_Lemonad_ErrorHandling_Maybe___0___System_Func___1__
  commentId: M:Lemonad.ErrorHandling.Extensions.MaybeExtensions.NoValues``2(System.Collections.Generic.IEnumerable{Lemonad.ErrorHandling.Maybe{``0}},System.Func{``1})
  name.vb: NoValues(Of TSource, TResult)(IEnumerable(Of Maybe(Of TSource)), Func(Of TResult))
  fullName: Lemonad.ErrorHandling.Extensions.MaybeExtensions.NoValues<TSource, TResult>(System.Collections.Generic.IEnumerable<Lemonad.ErrorHandling.Maybe<TSource>>, System.Func<TResult>)
  fullName.vb: Lemonad.ErrorHandling.Extensions.MaybeExtensions.NoValues(Of TSource, TResult)(System.Collections.Generic.IEnumerable(Of Lemonad.ErrorHandling.Maybe(Of TSource)), System.Func(Of TResult))
  nameWithType: MaybeExtensions.NoValues<TSource, TResult>(IEnumerable<Maybe<TSource>>, Func<TResult>)
  nameWithType.vb: MaybeExtensions.NoValues(Of TSource, TResult)(IEnumerable(Of Maybe(Of TSource)), Func(Of TResult))
- uid: Lemonad.ErrorHandling.Extensions.MaybeExtensions.ToMaybe*
  name: ToMaybe
  href: api/Lemonad.ErrorHandling.Extensions.MaybeExtensions.html#Lemonad_ErrorHandling_Extensions_MaybeExtensions_ToMaybe_
  commentId: Overload:Lemonad.ErrorHandling.Extensions.MaybeExtensions.ToMaybe
  isSpec: "True"
  fullName: Lemonad.ErrorHandling.Extensions.MaybeExtensions.ToMaybe
  nameWithType: MaybeExtensions.ToMaybe
- uid: Lemonad.ErrorHandling.Extensions.MaybeExtensions.ToMaybe``1(``0)
  name: ToMaybe<TSource>(TSource)
  href: api/Lemonad.ErrorHandling.Extensions.MaybeExtensions.html#Lemonad_ErrorHandling_Extensions_MaybeExtensions_ToMaybe__1___0_
  commentId: M:Lemonad.ErrorHandling.Extensions.MaybeExtensions.ToMaybe``1(``0)
  name.vb: ToMaybe(Of TSource)(TSource)
  fullName: Lemonad.ErrorHandling.Extensions.MaybeExtensions.ToMaybe<TSource>(TSource)
  fullName.vb: Lemonad.ErrorHandling.Extensions.MaybeExtensions.ToMaybe(Of TSource)(TSource)
  nameWithType: MaybeExtensions.ToMaybe<TSource>(TSource)
  nameWithType.vb: MaybeExtensions.ToMaybe(Of TSource)(TSource)
- uid: Lemonad.ErrorHandling.Extensions.MaybeExtensions.ToMaybe``1(``0,System.Func{``0,System.Boolean})
  name: ToMaybe<TSource>(TSource, Func<TSource, Boolean>)
  href: api/Lemonad.ErrorHandling.Extensions.MaybeExtensions.html#Lemonad_ErrorHandling_Extensions_MaybeExtensions_ToMaybe__1___0_System_Func___0_System_Boolean__
  commentId: M:Lemonad.ErrorHandling.Extensions.MaybeExtensions.ToMaybe``1(``0,System.Func{``0,System.Boolean})
  name.vb: ToMaybe(Of TSource)(TSource, Func(Of TSource, Boolean))
  fullName: Lemonad.ErrorHandling.Extensions.MaybeExtensions.ToMaybe<TSource>(TSource, System.Func<TSource, System.Boolean>)
  fullName.vb: Lemonad.ErrorHandling.Extensions.MaybeExtensions.ToMaybe(Of TSource)(TSource, System.Func(Of TSource, System.Boolean))
  nameWithType: MaybeExtensions.ToMaybe<TSource>(TSource, Func<TSource, Boolean>)
  nameWithType.vb: MaybeExtensions.ToMaybe(Of TSource)(TSource, Func(Of TSource, Boolean))
- uid: Lemonad.ErrorHandling.Extensions.MaybeExtensions.ToMaybe``1(System.Nullable{``0})
  name: ToMaybe<TSource>(Nullable<TSource>)
  href: api/Lemonad.ErrorHandling.Extensions.MaybeExtensions.html#Lemonad_ErrorHandling_Extensions_MaybeExtensions_ToMaybe__1_System_Nullable___0__
  commentId: M:Lemonad.ErrorHandling.Extensions.MaybeExtensions.ToMaybe``1(System.Nullable{``0})
  name.vb: ToMaybe(Of TSource)(Nullable(Of TSource))
  fullName: Lemonad.ErrorHandling.Extensions.MaybeExtensions.ToMaybe<TSource>(System.Nullable<TSource>)
  fullName.vb: Lemonad.ErrorHandling.Extensions.MaybeExtensions.ToMaybe(Of TSource)(System.Nullable(Of TSource))
  nameWithType: MaybeExtensions.ToMaybe<TSource>(Nullable<TSource>)
  nameWithType.vb: MaybeExtensions.ToMaybe(Of TSource)(Nullable(Of TSource))
- uid: Lemonad.ErrorHandling.Extensions.MaybeExtensions.ToMaybeNone*
  name: ToMaybeNone
  href: api/Lemonad.ErrorHandling.Extensions.MaybeExtensions.html#Lemonad_ErrorHandling_Extensions_MaybeExtensions_ToMaybeNone_
  commentId: Overload:Lemonad.ErrorHandling.Extensions.MaybeExtensions.ToMaybeNone
  isSpec: "True"
  fullName: Lemonad.ErrorHandling.Extensions.MaybeExtensions.ToMaybeNone
  nameWithType: MaybeExtensions.ToMaybeNone
- uid: Lemonad.ErrorHandling.Extensions.MaybeExtensions.ToMaybeNone``1
  name: ToMaybeNone<TSource>()
  href: api/Lemonad.ErrorHandling.Extensions.MaybeExtensions.html#Lemonad_ErrorHandling_Extensions_MaybeExtensions_ToMaybeNone__1
  commentId: M:Lemonad.ErrorHandling.Extensions.MaybeExtensions.ToMaybeNone``1
  name.vb: ToMaybeNone(Of TSource)()
  fullName: Lemonad.ErrorHandling.Extensions.MaybeExtensions.ToMaybeNone<TSource>()
  fullName.vb: Lemonad.ErrorHandling.Extensions.MaybeExtensions.ToMaybeNone(Of TSource)()
  nameWithType: MaybeExtensions.ToMaybeNone<TSource>()
  nameWithType.vb: MaybeExtensions.ToMaybeNone(Of TSource)()
- uid: Lemonad.ErrorHandling.Extensions.MaybeExtensions.ToMaybeNone``1(``0)
  name: ToMaybeNone<TSource>(TSource)
  href: api/Lemonad.ErrorHandling.Extensions.MaybeExtensions.html#Lemonad_ErrorHandling_Extensions_MaybeExtensions_ToMaybeNone__1___0_
  commentId: M:Lemonad.ErrorHandling.Extensions.MaybeExtensions.ToMaybeNone``1(``0)
  name.vb: ToMaybeNone(Of TSource)(TSource)
  fullName: Lemonad.ErrorHandling.Extensions.MaybeExtensions.ToMaybeNone<TSource>(TSource)
  fullName.vb: Lemonad.ErrorHandling.Extensions.MaybeExtensions.ToMaybeNone(Of TSource)(TSource)
  nameWithType: MaybeExtensions.ToMaybeNone<TSource>(TSource)
  nameWithType.vb: MaybeExtensions.ToMaybeNone(Of TSource)(TSource)
- uid: Lemonad.ErrorHandling.Extensions.MaybeExtensions.ToMaybeNone``1(``0,System.Func{``0,System.Boolean})
  name: ToMaybeNone<TSource>(TSource, Func<TSource, Boolean>)
  href: api/Lemonad.ErrorHandling.Extensions.MaybeExtensions.html#Lemonad_ErrorHandling_Extensions_MaybeExtensions_ToMaybeNone__1___0_System_Func___0_System_Boolean__
  commentId: M:Lemonad.ErrorHandling.Extensions.MaybeExtensions.ToMaybeNone``1(``0,System.Func{``0,System.Boolean})
  name.vb: ToMaybeNone(Of TSource)(TSource, Func(Of TSource, Boolean))
  fullName: Lemonad.ErrorHandling.Extensions.MaybeExtensions.ToMaybeNone<TSource>(TSource, System.Func<TSource, System.Boolean>)
  fullName.vb: Lemonad.ErrorHandling.Extensions.MaybeExtensions.ToMaybeNone(Of TSource)(TSource, System.Func(Of TSource, System.Boolean))
  nameWithType: MaybeExtensions.ToMaybeNone<TSource>(TSource, Func<TSource, Boolean>)
  nameWithType.vb: MaybeExtensions.ToMaybeNone(Of TSource)(TSource, Func(Of TSource, Boolean))
- uid: Lemonad.ErrorHandling.Extensions.MaybeExtensions.ToResult*
  name: ToResult
  href: api/Lemonad.ErrorHandling.Extensions.MaybeExtensions.html#Lemonad_ErrorHandling_Extensions_MaybeExtensions_ToResult_
  commentId: Overload:Lemonad.ErrorHandling.Extensions.MaybeExtensions.ToResult
  isSpec: "True"
  fullName: Lemonad.ErrorHandling.Extensions.MaybeExtensions.ToResult
  nameWithType: MaybeExtensions.ToResult
- uid: Lemonad.ErrorHandling.Extensions.MaybeExtensions.ToResult``2(Lemonad.ErrorHandling.Maybe{``0},System.Func{``1})
  name: ToResult<T, TError>(Maybe<T>, Func<TError>)
  href: api/Lemonad.ErrorHandling.Extensions.MaybeExtensions.html#Lemonad_ErrorHandling_Extensions_MaybeExtensions_ToResult__2_Lemonad_ErrorHandling_Maybe___0__System_Func___1__
  commentId: M:Lemonad.ErrorHandling.Extensions.MaybeExtensions.ToResult``2(Lemonad.ErrorHandling.Maybe{``0},System.Func{``1})
  name.vb: ToResult(Of T, TError)(Maybe(Of T), Func(Of TError))
  fullName: Lemonad.ErrorHandling.Extensions.MaybeExtensions.ToResult<T, TError>(Lemonad.ErrorHandling.Maybe<T>, System.Func<TError>)
  fullName.vb: Lemonad.ErrorHandling.Extensions.MaybeExtensions.ToResult(Of T, TError)(Lemonad.ErrorHandling.Maybe(Of T), System.Func(Of TError))
  nameWithType: MaybeExtensions.ToResult<T, TError>(Maybe<T>, Func<TError>)
  nameWithType.vb: MaybeExtensions.ToResult(Of T, TError)(Maybe(Of T), Func(Of TError))
- uid: Lemonad.ErrorHandling.Extensions.MaybeExtensions.Values*
  name: Values
  href: api/Lemonad.ErrorHandling.Extensions.MaybeExtensions.html#Lemonad_ErrorHandling_Extensions_MaybeExtensions_Values_
  commentId: Overload:Lemonad.ErrorHandling.Extensions.MaybeExtensions.Values
  isSpec: "True"
  fullName: Lemonad.ErrorHandling.Extensions.MaybeExtensions.Values
  nameWithType: MaybeExtensions.Values
- uid: Lemonad.ErrorHandling.Extensions.MaybeExtensions.Values``1(System.Collections.Generic.IEnumerable{Lemonad.ErrorHandling.Maybe{``0}})
  name: Values<TSource>(IEnumerable<Maybe<TSource>>)
  href: api/Lemonad.ErrorHandling.Extensions.MaybeExtensions.html#Lemonad_ErrorHandling_Extensions_MaybeExtensions_Values__1_System_Collections_Generic_IEnumerable_Lemonad_ErrorHandling_Maybe___0___
  commentId: M:Lemonad.ErrorHandling.Extensions.MaybeExtensions.Values``1(System.Collections.Generic.IEnumerable{Lemonad.ErrorHandling.Maybe{``0}})
  name.vb: Values(Of TSource)(IEnumerable(Of Maybe(Of TSource)))
  fullName: Lemonad.ErrorHandling.Extensions.MaybeExtensions.Values<TSource>(System.Collections.Generic.IEnumerable<Lemonad.ErrorHandling.Maybe<TSource>>)
  fullName.vb: Lemonad.ErrorHandling.Extensions.MaybeExtensions.Values(Of TSource)(System.Collections.Generic.IEnumerable(Of Lemonad.ErrorHandling.Maybe(Of TSource)))
  nameWithType: MaybeExtensions.Values<TSource>(IEnumerable<Maybe<TSource>>)
  nameWithType.vb: MaybeExtensions.Values(Of TSource)(IEnumerable(Of Maybe(Of TSource)))
- uid: Lemonad.ErrorHandling.Extensions.OutcomeExtensions
  name: OutcomeExtensions
  href: api/Lemonad.ErrorHandling.Extensions.OutcomeExtensions.html
  commentId: T:Lemonad.ErrorHandling.Extensions.OutcomeExtensions
  fullName: Lemonad.ErrorHandling.Extensions.OutcomeExtensions
  nameWithType: OutcomeExtensions
- uid: Lemonad.ErrorHandling.Extensions.OutcomeExtensions.AsOutcome*
  name: AsOutcome
  href: api/Lemonad.ErrorHandling.Extensions.OutcomeExtensions.html#Lemonad_ErrorHandling_Extensions_OutcomeExtensions_AsOutcome_
  commentId: Overload:Lemonad.ErrorHandling.Extensions.OutcomeExtensions.AsOutcome
  isSpec: "True"
  fullName: Lemonad.ErrorHandling.Extensions.OutcomeExtensions.AsOutcome
  nameWithType: OutcomeExtensions.AsOutcome
- uid: Lemonad.ErrorHandling.Extensions.OutcomeExtensions.AsOutcome``2(System.Threading.Tasks.Task{Lemonad.ErrorHandling.Result{``0,``1}})
  name: AsOutcome<T, TError>(Task<Result<T, TError>>)
  href: api/Lemonad.ErrorHandling.Extensions.OutcomeExtensions.html#Lemonad_ErrorHandling_Extensions_OutcomeExtensions_AsOutcome__2_System_Threading_Tasks_Task_Lemonad_ErrorHandling_Result___0___1___
  commentId: M:Lemonad.ErrorHandling.Extensions.OutcomeExtensions.AsOutcome``2(System.Threading.Tasks.Task{Lemonad.ErrorHandling.Result{``0,``1}})
  name.vb: AsOutcome(Of T, TError)(Task(Of Result(Of T, TError)))
  fullName: Lemonad.ErrorHandling.Extensions.OutcomeExtensions.AsOutcome<T, TError>(System.Threading.Tasks.Task<Lemonad.ErrorHandling.Result<T, TError>>)
  fullName.vb: Lemonad.ErrorHandling.Extensions.OutcomeExtensions.AsOutcome(Of T, TError)(System.Threading.Tasks.Task(Of Lemonad.ErrorHandling.Result(Of T, TError)))
  nameWithType: OutcomeExtensions.AsOutcome<T, TError>(Task<Result<T, TError>>)
  nameWithType.vb: OutcomeExtensions.AsOutcome(Of T, TError)(Task(Of Result(Of T, TError)))
- uid: Lemonad.ErrorHandling.Extensions.OutcomeExtensions.Match*
  name: Match
  href: api/Lemonad.ErrorHandling.Extensions.OutcomeExtensions.html#Lemonad_ErrorHandling_Extensions_OutcomeExtensions_Match_
  commentId: Overload:Lemonad.ErrorHandling.Extensions.OutcomeExtensions.Match
  isSpec: "True"
  fullName: Lemonad.ErrorHandling.Extensions.OutcomeExtensions.Match
  nameWithType: OutcomeExtensions.Match
- uid: Lemonad.ErrorHandling.Extensions.OutcomeExtensions.Match``2(Lemonad.ErrorHandling.Outcome{``0,``1})
  name: Match<T, TError>(Outcome<T, TError>)
  href: api/Lemonad.ErrorHandling.Extensions.OutcomeExtensions.html#Lemonad_ErrorHandling_Extensions_OutcomeExtensions_Match__2_Lemonad_ErrorHandling_Outcome___0___1__
  commentId: M:Lemonad.ErrorHandling.Extensions.OutcomeExtensions.Match``2(Lemonad.ErrorHandling.Outcome{``0,``1})
  name.vb: Match(Of T, TError)(Outcome(Of T, TError))
  fullName: Lemonad.ErrorHandling.Extensions.OutcomeExtensions.Match<T, TError>(Lemonad.ErrorHandling.Outcome<T, TError>)
  fullName.vb: Lemonad.ErrorHandling.Extensions.OutcomeExtensions.Match(Of T, TError)(Lemonad.ErrorHandling.Outcome(Of T, TError))
  nameWithType: OutcomeExtensions.Match<T, TError>(Outcome<T, TError>)
  nameWithType.vb: OutcomeExtensions.Match(Of T, TError)(Outcome(Of T, TError))
- uid: Lemonad.ErrorHandling.Extensions.OutcomeExtensions.Match``3(Lemonad.ErrorHandling.Outcome{``0,``2},System.Func{``0,``1})
  name: Match<T, TResult, TError>(Outcome<T, TError>, Func<T, TResult>)
  href: api/Lemonad.ErrorHandling.Extensions.OutcomeExtensions.html#Lemonad_ErrorHandling_Extensions_OutcomeExtensions_Match__3_Lemonad_ErrorHandling_Outcome___0___2__System_Func___0___1__
  commentId: M:Lemonad.ErrorHandling.Extensions.OutcomeExtensions.Match``3(Lemonad.ErrorHandling.Outcome{``0,``2},System.Func{``0,``1})
  name.vb: Match(Of T, TResult, TError)(Outcome(Of T, TError), Func(Of T, TResult))
  fullName: Lemonad.ErrorHandling.Extensions.OutcomeExtensions.Match<T, TResult, TError>(Lemonad.ErrorHandling.Outcome<T, TError>, System.Func<T, TResult>)
  fullName.vb: Lemonad.ErrorHandling.Extensions.OutcomeExtensions.Match(Of T, TResult, TError)(Lemonad.ErrorHandling.Outcome(Of T, TError), System.Func(Of T, TResult))
  nameWithType: OutcomeExtensions.Match<T, TResult, TError>(Outcome<T, TError>, Func<T, TResult>)
  nameWithType.vb: OutcomeExtensions.Match(Of T, TResult, TError)(Outcome(Of T, TError), Func(Of T, TResult))
- uid: Lemonad.ErrorHandling.Extensions.OutcomeExtensions.ToOutcome*
  name: ToOutcome
  href: api/Lemonad.ErrorHandling.Extensions.OutcomeExtensions.html#Lemonad_ErrorHandling_Extensions_OutcomeExtensions_ToOutcome_
  commentId: Overload:Lemonad.ErrorHandling.Extensions.OutcomeExtensions.ToOutcome
  isSpec: "True"
  fullName: Lemonad.ErrorHandling.Extensions.OutcomeExtensions.ToOutcome
  nameWithType: OutcomeExtensions.ToOutcome
- uid: Lemonad.ErrorHandling.Extensions.OutcomeExtensions.ToOutcome``2(System.Threading.Tasks.Task{``0})
  name: ToOutcome<T, TError>(Task<T>)
  href: api/Lemonad.ErrorHandling.Extensions.OutcomeExtensions.html#Lemonad_ErrorHandling_Extensions_OutcomeExtensions_ToOutcome__2_System_Threading_Tasks_Task___0__
  commentId: M:Lemonad.ErrorHandling.Extensions.OutcomeExtensions.ToOutcome``2(System.Threading.Tasks.Task{``0})
  name.vb: ToOutcome(Of T, TError)(Task(Of T))
  fullName: Lemonad.ErrorHandling.Extensions.OutcomeExtensions.ToOutcome<T, TError>(System.Threading.Tasks.Task<T>)
  fullName.vb: Lemonad.ErrorHandling.Extensions.OutcomeExtensions.ToOutcome(Of T, TError)(System.Threading.Tasks.Task(Of T))
  nameWithType: OutcomeExtensions.ToOutcome<T, TError>(Task<T>)
  nameWithType.vb: OutcomeExtensions.ToOutcome(Of T, TError)(Task(Of T))
- uid: Lemonad.ErrorHandling.Extensions.OutcomeExtensions.ToOutcome``2(System.Threading.Tasks.Task{``0},System.Func{``0,System.Boolean},System.Func{``1})
  name: ToOutcome<T, TError>(Task<T>, Func<T, Boolean>, Func<TError>)
  href: api/Lemonad.ErrorHandling.Extensions.OutcomeExtensions.html#Lemonad_ErrorHandling_Extensions_OutcomeExtensions_ToOutcome__2_System_Threading_Tasks_Task___0__System_Func___0_System_Boolean__System_Func___1__
  commentId: M:Lemonad.ErrorHandling.Extensions.OutcomeExtensions.ToOutcome``2(System.Threading.Tasks.Task{``0},System.Func{``0,System.Boolean},System.Func{``1})
  name.vb: ToOutcome(Of T, TError)(Task(Of T), Func(Of T, Boolean), Func(Of TError))
  fullName: Lemonad.ErrorHandling.Extensions.OutcomeExtensions.ToOutcome<T, TError>(System.Threading.Tasks.Task<T>, System.Func<T, System.Boolean>, System.Func<TError>)
  fullName.vb: Lemonad.ErrorHandling.Extensions.OutcomeExtensions.ToOutcome(Of T, TError)(System.Threading.Tasks.Task(Of T), System.Func(Of T, System.Boolean), System.Func(Of TError))
  nameWithType: OutcomeExtensions.ToOutcome<T, TError>(Task<T>, Func<T, Boolean>, Func<TError>)
  nameWithType.vb: OutcomeExtensions.ToOutcome(Of T, TError)(Task(Of T), Func(Of T, Boolean), Func(Of TError))
- uid: Lemonad.ErrorHandling.Extensions.OutcomeExtensions.ToOutcome``2(System.Threading.Tasks.Task{System.Nullable{``0}},System.Func{``1})
  name: ToOutcome<T, TError>(Task<Nullable<T>>, Func<TError>)
  href: api/Lemonad.ErrorHandling.Extensions.OutcomeExtensions.html#Lemonad_ErrorHandling_Extensions_OutcomeExtensions_ToOutcome__2_System_Threading_Tasks_Task_System_Nullable___0___System_Func___1__
  commentId: M:Lemonad.ErrorHandling.Extensions.OutcomeExtensions.ToOutcome``2(System.Threading.Tasks.Task{System.Nullable{``0}},System.Func{``1})
  name.vb: ToOutcome(Of T, TError)(Task(Of Nullable(Of T)), Func(Of TError))
  fullName: Lemonad.ErrorHandling.Extensions.OutcomeExtensions.ToOutcome<T, TError>(System.Threading.Tasks.Task<System.Nullable<T>>, System.Func<TError>)
  fullName.vb: Lemonad.ErrorHandling.Extensions.OutcomeExtensions.ToOutcome(Of T, TError)(System.Threading.Tasks.Task(Of System.Nullable(Of T)), System.Func(Of TError))
  nameWithType: OutcomeExtensions.ToOutcome<T, TError>(Task<Nullable<T>>, Func<TError>)
  nameWithType.vb: OutcomeExtensions.ToOutcome(Of T, TError)(Task(Of Nullable(Of T)), Func(Of TError))
- uid: Lemonad.ErrorHandling.Extensions.OutcomeExtensions.ToOutcomeError*
  name: ToOutcomeError
  href: api/Lemonad.ErrorHandling.Extensions.OutcomeExtensions.html#Lemonad_ErrorHandling_Extensions_OutcomeExtensions_ToOutcomeError_
  commentId: Overload:Lemonad.ErrorHandling.Extensions.OutcomeExtensions.ToOutcomeError
  isSpec: "True"
  fullName: Lemonad.ErrorHandling.Extensions.OutcomeExtensions.ToOutcomeError
  nameWithType: OutcomeExtensions.ToOutcomeError
- uid: Lemonad.ErrorHandling.Extensions.OutcomeExtensions.ToOutcomeError``2(System.Threading.Tasks.Task{``1})
  name: ToOutcomeError<T, TError>(Task<TError>)
  href: api/Lemonad.ErrorHandling.Extensions.OutcomeExtensions.html#Lemonad_ErrorHandling_Extensions_OutcomeExtensions_ToOutcomeError__2_System_Threading_Tasks_Task___1__
  commentId: M:Lemonad.ErrorHandling.Extensions.OutcomeExtensions.ToOutcomeError``2(System.Threading.Tasks.Task{``1})
  name.vb: ToOutcomeError(Of T, TError)(Task(Of TError))
  fullName: Lemonad.ErrorHandling.Extensions.OutcomeExtensions.ToOutcomeError<T, TError>(System.Threading.Tasks.Task<TError>)
  fullName.vb: Lemonad.ErrorHandling.Extensions.OutcomeExtensions.ToOutcomeError(Of T, TError)(System.Threading.Tasks.Task(Of TError))
  nameWithType: OutcomeExtensions.ToOutcomeError<T, TError>(Task<TError>)
  nameWithType.vb: OutcomeExtensions.ToOutcomeError(Of T, TError)(Task(Of TError))
- uid: Lemonad.ErrorHandling.Extensions.ResultExtensions
  name: ResultExtensions
  href: api/Lemonad.ErrorHandling.Extensions.ResultExtensions.html
  commentId: T:Lemonad.ErrorHandling.Extensions.ResultExtensions
  fullName: Lemonad.ErrorHandling.Extensions.ResultExtensions
  nameWithType: ResultExtensions
- uid: Lemonad.ErrorHandling.Extensions.ResultExtensions.Error*
  name: Error
  href: api/Lemonad.ErrorHandling.Extensions.ResultExtensions.html#Lemonad_ErrorHandling_Extensions_ResultExtensions_Error_
  commentId: Overload:Lemonad.ErrorHandling.Extensions.ResultExtensions.Error
  isSpec: "True"
  fullName: Lemonad.ErrorHandling.Extensions.ResultExtensions.Error
  nameWithType: ResultExtensions.Error
- uid: Lemonad.ErrorHandling.Extensions.ResultExtensions.Error``2(``1)
  name: Error<T, TError>(TError)
  href: api/Lemonad.ErrorHandling.Extensions.ResultExtensions.html#Lemonad_ErrorHandling_Extensions_ResultExtensions_Error__2___1_
  commentId: M:Lemonad.ErrorHandling.Extensions.ResultExtensions.Error``2(``1)
  name.vb: Error(Of T, TError)(TError)
  fullName: Lemonad.ErrorHandling.Extensions.ResultExtensions.Error<T, TError>(TError)
  fullName.vb: Lemonad.ErrorHandling.Extensions.ResultExtensions.Error(Of T, TError)(TError)
  nameWithType: ResultExtensions.Error<T, TError>(TError)
  nameWithType.vb: ResultExtensions.Error(Of T, TError)(TError)
- uid: Lemonad.ErrorHandling.Extensions.ResultExtensions.Errors*
  name: Errors
  href: api/Lemonad.ErrorHandling.Extensions.ResultExtensions.html#Lemonad_ErrorHandling_Extensions_ResultExtensions_Errors_
  commentId: Overload:Lemonad.ErrorHandling.Extensions.ResultExtensions.Errors
  isSpec: "True"
  fullName: Lemonad.ErrorHandling.Extensions.ResultExtensions.Errors
  nameWithType: ResultExtensions.Errors
- uid: Lemonad.ErrorHandling.Extensions.ResultExtensions.Errors``2(System.Collections.Generic.IEnumerable{Lemonad.ErrorHandling.Result{``0,``1}})
  name: Errors<T, TError>(IEnumerable<Result<T, TError>>)
  href: api/Lemonad.ErrorHandling.Extensions.ResultExtensions.html#Lemonad_ErrorHandling_Extensions_ResultExtensions_Errors__2_System_Collections_Generic_IEnumerable_Lemonad_ErrorHandling_Result___0___1___
  commentId: M:Lemonad.ErrorHandling.Extensions.ResultExtensions.Errors``2(System.Collections.Generic.IEnumerable{Lemonad.ErrorHandling.Result{``0,``1}})
  name.vb: Errors(Of T, TError)(IEnumerable(Of Result(Of T, TError)))
  fullName: Lemonad.ErrorHandling.Extensions.ResultExtensions.Errors<T, TError>(System.Collections.Generic.IEnumerable<Lemonad.ErrorHandling.Result<T, TError>>)
  fullName.vb: Lemonad.ErrorHandling.Extensions.ResultExtensions.Errors(Of T, TError)(System.Collections.Generic.IEnumerable(Of Lemonad.ErrorHandling.Result(Of T, TError)))
  nameWithType: ResultExtensions.Errors<T, TError>(IEnumerable<Result<T, TError>>)
  nameWithType.vb: ResultExtensions.Errors(Of T, TError)(IEnumerable(Of Result(Of T, TError)))
- uid: Lemonad.ErrorHandling.Extensions.ResultExtensions.Match*
  name: Match
  href: api/Lemonad.ErrorHandling.Extensions.ResultExtensions.html#Lemonad_ErrorHandling_Extensions_ResultExtensions_Match_
  commentId: Overload:Lemonad.ErrorHandling.Extensions.ResultExtensions.Match
  isSpec: "True"
  fullName: Lemonad.ErrorHandling.Extensions.ResultExtensions.Match
  nameWithType: ResultExtensions.Match
- uid: Lemonad.ErrorHandling.Extensions.ResultExtensions.Match``2(Lemonad.ErrorHandling.Result{``0,``1})
  name: Match<T, TError>(Result<T, TError>)
  href: api/Lemonad.ErrorHandling.Extensions.ResultExtensions.html#Lemonad_ErrorHandling_Extensions_ResultExtensions_Match__2_Lemonad_ErrorHandling_Result___0___1__
  commentId: M:Lemonad.ErrorHandling.Extensions.ResultExtensions.Match``2(Lemonad.ErrorHandling.Result{``0,``1})
  name.vb: Match(Of T, TError)(Result(Of T, TError))
  fullName: Lemonad.ErrorHandling.Extensions.ResultExtensions.Match<T, TError>(Lemonad.ErrorHandling.Result<T, TError>)
  fullName.vb: Lemonad.ErrorHandling.Extensions.ResultExtensions.Match(Of T, TError)(Lemonad.ErrorHandling.Result(Of T, TError))
  nameWithType: ResultExtensions.Match<T, TError>(Result<T, TError>)
  nameWithType.vb: ResultExtensions.Match(Of T, TError)(Result(Of T, TError))
- uid: Lemonad.ErrorHandling.Extensions.ResultExtensions.Match``3(Lemonad.ErrorHandling.Result{``0,``2},System.Func{``0,``1})
  name: Match<T, TResult, TError>(Result<T, TError>, Func<T, TResult>)
  href: api/Lemonad.ErrorHandling.Extensions.ResultExtensions.html#Lemonad_ErrorHandling_Extensions_ResultExtensions_Match__3_Lemonad_ErrorHandling_Result___0___2__System_Func___0___1__
  commentId: M:Lemonad.ErrorHandling.Extensions.ResultExtensions.Match``3(Lemonad.ErrorHandling.Result{``0,``2},System.Func{``0,``1})
  name.vb: Match(Of T, TResult, TError)(Result(Of T, TError), Func(Of T, TResult))
  fullName: Lemonad.ErrorHandling.Extensions.ResultExtensions.Match<T, TResult, TError>(Lemonad.ErrorHandling.Result<T, TError>, System.Func<T, TResult>)
  fullName.vb: Lemonad.ErrorHandling.Extensions.ResultExtensions.Match(Of T, TResult, TError)(Lemonad.ErrorHandling.Result(Of T, TError), System.Func(Of T, TResult))
  nameWithType: ResultExtensions.Match<T, TResult, TError>(Result<T, TError>, Func<T, TResult>)
  nameWithType.vb: ResultExtensions.Match(Of T, TResult, TError)(Result(Of T, TError), Func(Of T, TResult))
- uid: Lemonad.ErrorHandling.Extensions.ResultExtensions.Ok*
  name: Ok
  href: api/Lemonad.ErrorHandling.Extensions.ResultExtensions.html#Lemonad_ErrorHandling_Extensions_ResultExtensions_Ok_
  commentId: Overload:Lemonad.ErrorHandling.Extensions.ResultExtensions.Ok
  isSpec: "True"
  fullName: Lemonad.ErrorHandling.Extensions.ResultExtensions.Ok
  nameWithType: ResultExtensions.Ok
- uid: Lemonad.ErrorHandling.Extensions.ResultExtensions.Ok``2(``0)
  name: Ok<T, TError>(T)
  href: api/Lemonad.ErrorHandling.Extensions.ResultExtensions.html#Lemonad_ErrorHandling_Extensions_ResultExtensions_Ok__2___0_
  commentId: M:Lemonad.ErrorHandling.Extensions.ResultExtensions.Ok``2(``0)
  name.vb: Ok(Of T, TError)(T)
  fullName: Lemonad.ErrorHandling.Extensions.ResultExtensions.Ok<T, TError>(T)
  fullName.vb: Lemonad.ErrorHandling.Extensions.ResultExtensions.Ok(Of T, TError)(T)
  nameWithType: ResultExtensions.Ok<T, TError>(T)
  nameWithType.vb: ResultExtensions.Ok(Of T, TError)(T)
- uid: Lemonad.ErrorHandling.Extensions.ResultExtensions.ToMaybe*
  name: ToMaybe
  href: api/Lemonad.ErrorHandling.Extensions.ResultExtensions.html#Lemonad_ErrorHandling_Extensions_ResultExtensions_ToMaybe_
  commentId: Overload:Lemonad.ErrorHandling.Extensions.ResultExtensions.ToMaybe
  isSpec: "True"
  fullName: Lemonad.ErrorHandling.Extensions.ResultExtensions.ToMaybe
  nameWithType: ResultExtensions.ToMaybe
- uid: Lemonad.ErrorHandling.Extensions.ResultExtensions.ToMaybe``2(Lemonad.ErrorHandling.Result{``0,``1})
  name: ToMaybe<T, TError>(Result<T, TError>)
  href: api/Lemonad.ErrorHandling.Extensions.ResultExtensions.html#Lemonad_ErrorHandling_Extensions_ResultExtensions_ToMaybe__2_Lemonad_ErrorHandling_Result___0___1__
  commentId: M:Lemonad.ErrorHandling.Extensions.ResultExtensions.ToMaybe``2(Lemonad.ErrorHandling.Result{``0,``1})
  name.vb: ToMaybe(Of T, TError)(Result(Of T, TError))
  fullName: Lemonad.ErrorHandling.Extensions.ResultExtensions.ToMaybe<T, TError>(Lemonad.ErrorHandling.Result<T, TError>)
  fullName.vb: Lemonad.ErrorHandling.Extensions.ResultExtensions.ToMaybe(Of T, TError)(Lemonad.ErrorHandling.Result(Of T, TError))
  nameWithType: ResultExtensions.ToMaybe<T, TError>(Result<T, TError>)
  nameWithType.vb: ResultExtensions.ToMaybe(Of T, TError)(Result(Of T, TError))
- uid: Lemonad.ErrorHandling.Extensions.ResultExtensions.ToResult*
  name: ToResult
  href: api/Lemonad.ErrorHandling.Extensions.ResultExtensions.html#Lemonad_ErrorHandling_Extensions_ResultExtensions_ToResult_
  commentId: Overload:Lemonad.ErrorHandling.Extensions.ResultExtensions.ToResult
  isSpec: "True"
  fullName: Lemonad.ErrorHandling.Extensions.ResultExtensions.ToResult
  nameWithType: ResultExtensions.ToResult
- uid: Lemonad.ErrorHandling.Extensions.ResultExtensions.ToResult``2(``0)
  name: ToResult<T, TError>(T)
  href: api/Lemonad.ErrorHandling.Extensions.ResultExtensions.html#Lemonad_ErrorHandling_Extensions_ResultExtensions_ToResult__2___0_
  commentId: M:Lemonad.ErrorHandling.Extensions.ResultExtensions.ToResult``2(``0)
  name.vb: ToResult(Of T, TError)(T)
  fullName: Lemonad.ErrorHandling.Extensions.ResultExtensions.ToResult<T, TError>(T)
  fullName.vb: Lemonad.ErrorHandling.Extensions.ResultExtensions.ToResult(Of T, TError)(T)
  nameWithType: ResultExtensions.ToResult<T, TError>(T)
  nameWithType.vb: ResultExtensions.ToResult(Of T, TError)(T)
- uid: Lemonad.ErrorHandling.Extensions.ResultExtensions.ToResult``2(``0,System.Func{``0,System.Boolean},System.Func{``1})
  name: ToResult<T, TError>(T, Func<T, Boolean>, Func<TError>)
  href: api/Lemonad.ErrorHandling.Extensions.ResultExtensions.html#Lemonad_ErrorHandling_Extensions_ResultExtensions_ToResult__2___0_System_Func___0_System_Boolean__System_Func___1__
  commentId: M:Lemonad.ErrorHandling.Extensions.ResultExtensions.ToResult``2(``0,System.Func{``0,System.Boolean},System.Func{``1})
  name.vb: ToResult(Of T, TError)(T, Func(Of T, Boolean), Func(Of TError))
  fullName: Lemonad.ErrorHandling.Extensions.ResultExtensions.ToResult<T, TError>(T, System.Func<T, System.Boolean>, System.Func<TError>)
  fullName.vb: Lemonad.ErrorHandling.Extensions.ResultExtensions.ToResult(Of T, TError)(T, System.Func(Of T, System.Boolean), System.Func(Of TError))
  nameWithType: ResultExtensions.ToResult<T, TError>(T, Func<T, Boolean>, Func<TError>)
  nameWithType.vb: ResultExtensions.ToResult(Of T, TError)(T, Func(Of T, Boolean), Func(Of TError))
- uid: Lemonad.ErrorHandling.Extensions.ResultExtensions.ToResult``2(System.Nullable{``0},System.Func{``1})
  name: ToResult<T, TError>(Nullable<T>, Func<TError>)
  href: api/Lemonad.ErrorHandling.Extensions.ResultExtensions.html#Lemonad_ErrorHandling_Extensions_ResultExtensions_ToResult__2_System_Nullable___0__System_Func___1__
  commentId: M:Lemonad.ErrorHandling.Extensions.ResultExtensions.ToResult``2(System.Nullable{``0},System.Func{``1})
  name.vb: ToResult(Of T, TError)(Nullable(Of T), Func(Of TError))
  fullName: Lemonad.ErrorHandling.Extensions.ResultExtensions.ToResult<T, TError>(System.Nullable<T>, System.Func<TError>)
  fullName.vb: Lemonad.ErrorHandling.Extensions.ResultExtensions.ToResult(Of T, TError)(System.Nullable(Of T), System.Func(Of TError))
  nameWithType: ResultExtensions.ToResult<T, TError>(Nullable<T>, Func<TError>)
  nameWithType.vb: ResultExtensions.ToResult(Of T, TError)(Nullable(Of T), Func(Of TError))
- uid: Lemonad.ErrorHandling.Extensions.ResultExtensions.ToResultError*
  name: ToResultError
  href: api/Lemonad.ErrorHandling.Extensions.ResultExtensions.html#Lemonad_ErrorHandling_Extensions_ResultExtensions_ToResultError_
  commentId: Overload:Lemonad.ErrorHandling.Extensions.ResultExtensions.ToResultError
  isSpec: "True"
  fullName: Lemonad.ErrorHandling.Extensions.ResultExtensions.ToResultError
  nameWithType: ResultExtensions.ToResultError
- uid: Lemonad.ErrorHandling.Extensions.ResultExtensions.ToResultError``2(``1)
  name: ToResultError<T, TError>(TError)
  href: api/Lemonad.ErrorHandling.Extensions.ResultExtensions.html#Lemonad_ErrorHandling_Extensions_ResultExtensions_ToResultError__2___1_
  commentId: M:Lemonad.ErrorHandling.Extensions.ResultExtensions.ToResultError``2(``1)
  name.vb: ToResultError(Of T, TError)(TError)
  fullName: Lemonad.ErrorHandling.Extensions.ResultExtensions.ToResultError<T, TError>(TError)
  fullName.vb: Lemonad.ErrorHandling.Extensions.ResultExtensions.ToResultError(Of T, TError)(TError)
  nameWithType: ResultExtensions.ToResultError<T, TError>(TError)
  nameWithType.vb: ResultExtensions.ToResultError(Of T, TError)(TError)
- uid: Lemonad.ErrorHandling.Extensions.ResultExtensions.Values*
  name: Values
  href: api/Lemonad.ErrorHandling.Extensions.ResultExtensions.html#Lemonad_ErrorHandling_Extensions_ResultExtensions_Values_
  commentId: Overload:Lemonad.ErrorHandling.Extensions.ResultExtensions.Values
  isSpec: "True"
  fullName: Lemonad.ErrorHandling.Extensions.ResultExtensions.Values
  nameWithType: ResultExtensions.Values
- uid: Lemonad.ErrorHandling.Extensions.ResultExtensions.Values``2(System.Collections.Generic.IEnumerable{Lemonad.ErrorHandling.Result{``0,``1}})
  name: Values<T, TError>(IEnumerable<Result<T, TError>>)
  href: api/Lemonad.ErrorHandling.Extensions.ResultExtensions.html#Lemonad_ErrorHandling_Extensions_ResultExtensions_Values__2_System_Collections_Generic_IEnumerable_Lemonad_ErrorHandling_Result___0___1___
  commentId: M:Lemonad.ErrorHandling.Extensions.ResultExtensions.Values``2(System.Collections.Generic.IEnumerable{Lemonad.ErrorHandling.Result{``0,``1}})
  name.vb: Values(Of T, TError)(IEnumerable(Of Result(Of T, TError)))
  fullName: Lemonad.ErrorHandling.Extensions.ResultExtensions.Values<T, TError>(System.Collections.Generic.IEnumerable<Lemonad.ErrorHandling.Result<T, TError>>)
  fullName.vb: Lemonad.ErrorHandling.Extensions.ResultExtensions.Values(Of T, TError)(System.Collections.Generic.IEnumerable(Of Lemonad.ErrorHandling.Result(Of T, TError)))
  nameWithType: ResultExtensions.Values<T, TError>(IEnumerable<Result<T, TError>>)
  nameWithType.vb: ResultExtensions.Values(Of T, TError)(IEnumerable(Of Result(Of T, TError)))
- uid: Lemonad.ErrorHandling.Maybe`1
  name: Maybe<T>
  href: api/Lemonad.ErrorHandling.Maybe-1.html
  commentId: T:Lemonad.ErrorHandling.Maybe`1
  name.vb: Maybe(Of T)
  fullName: Lemonad.ErrorHandling.Maybe<T>
  fullName.vb: Lemonad.ErrorHandling.Maybe(Of T)
  nameWithType: Maybe<T>
  nameWithType.vb: Maybe(Of T)
- uid: Lemonad.ErrorHandling.Maybe`1.AsEnumerable
  name: AsEnumerable
  href: api/Lemonad.ErrorHandling.Maybe-1.html#Lemonad_ErrorHandling_Maybe_1_AsEnumerable
  commentId: P:Lemonad.ErrorHandling.Maybe`1.AsEnumerable
  fullName: Lemonad.ErrorHandling.Maybe<T>.AsEnumerable
  fullName.vb: Lemonad.ErrorHandling.Maybe(Of T).AsEnumerable
  nameWithType: Maybe<T>.AsEnumerable
  nameWithType.vb: Maybe(Of T).AsEnumerable
- uid: Lemonad.ErrorHandling.Maybe`1.AsEnumerable*
  name: AsEnumerable
  href: api/Lemonad.ErrorHandling.Maybe-1.html#Lemonad_ErrorHandling_Maybe_1_AsEnumerable_
  commentId: Overload:Lemonad.ErrorHandling.Maybe`1.AsEnumerable
  isSpec: "True"
  fullName: Lemonad.ErrorHandling.Maybe<T>.AsEnumerable
  fullName.vb: Lemonad.ErrorHandling.Maybe(Of T).AsEnumerable
  nameWithType: Maybe<T>.AsEnumerable
  nameWithType.vb: Maybe(Of T).AsEnumerable
- uid: Lemonad.ErrorHandling.Maybe`1.CompareTo(Lemonad.ErrorHandling.Maybe{`0})
  name: CompareTo(Maybe<T>)
  href: api/Lemonad.ErrorHandling.Maybe-1.html#Lemonad_ErrorHandling_Maybe_1_CompareTo_Lemonad_ErrorHandling_Maybe__0__
  commentId: M:Lemonad.ErrorHandling.Maybe`1.CompareTo(Lemonad.ErrorHandling.Maybe{`0})
  name.vb: CompareTo(Maybe(Of T))
  fullName: Lemonad.ErrorHandling.Maybe<T>.CompareTo(Lemonad.ErrorHandling.Maybe<T>)
  fullName.vb: Lemonad.ErrorHandling.Maybe(Of T).CompareTo(Lemonad.ErrorHandling.Maybe(Of T))
  nameWithType: Maybe<T>.CompareTo(Maybe<T>)
  nameWithType.vb: Maybe(Of T).CompareTo(Maybe(Of T))
- uid: Lemonad.ErrorHandling.Maybe`1.CompareTo*
  name: CompareTo
  href: api/Lemonad.ErrorHandling.Maybe-1.html#Lemonad_ErrorHandling_Maybe_1_CompareTo_
  commentId: Overload:Lemonad.ErrorHandling.Maybe`1.CompareTo
  isSpec: "True"
  fullName: Lemonad.ErrorHandling.Maybe<T>.CompareTo
  fullName.vb: Lemonad.ErrorHandling.Maybe(Of T).CompareTo
  nameWithType: Maybe<T>.CompareTo
  nameWithType.vb: Maybe(Of T).CompareTo
- uid: Lemonad.ErrorHandling.Maybe`1.Do(System.Action)
  name: Do(Action)
  href: api/Lemonad.ErrorHandling.Maybe-1.html#Lemonad_ErrorHandling_Maybe_1_Do_System_Action_
  commentId: M:Lemonad.ErrorHandling.Maybe`1.Do(System.Action)
  fullName: Lemonad.ErrorHandling.Maybe<T>.Do(System.Action)
  fullName.vb: Lemonad.ErrorHandling.Maybe(Of T).Do(System.Action)
  nameWithType: Maybe<T>.Do(Action)
  nameWithType.vb: Maybe(Of T).Do(Action)
- uid: Lemonad.ErrorHandling.Maybe`1.Do*
  name: Do
  href: api/Lemonad.ErrorHandling.Maybe-1.html#Lemonad_ErrorHandling_Maybe_1_Do_
  commentId: Overload:Lemonad.ErrorHandling.Maybe`1.Do
  isSpec: "True"
  fullName: Lemonad.ErrorHandling.Maybe<T>.Do
  fullName.vb: Lemonad.ErrorHandling.Maybe(Of T).Do
  nameWithType: Maybe<T>.Do
  nameWithType.vb: Maybe(Of T).Do
- uid: Lemonad.ErrorHandling.Maybe`1.DoWith(System.Action{`0})
  name: DoWith(Action<T>)
  href: api/Lemonad.ErrorHandling.Maybe-1.html#Lemonad_ErrorHandling_Maybe_1_DoWith_System_Action__0__
  commentId: M:Lemonad.ErrorHandling.Maybe`1.DoWith(System.Action{`0})
  name.vb: DoWith(Action(Of T))
  fullName: Lemonad.ErrorHandling.Maybe<T>.DoWith(System.Action<T>)
  fullName.vb: Lemonad.ErrorHandling.Maybe(Of T).DoWith(System.Action(Of T))
  nameWithType: Maybe<T>.DoWith(Action<T>)
  nameWithType.vb: Maybe(Of T).DoWith(Action(Of T))
- uid: Lemonad.ErrorHandling.Maybe`1.DoWith*
  name: DoWith
  href: api/Lemonad.ErrorHandling.Maybe-1.html#Lemonad_ErrorHandling_Maybe_1_DoWith_
  commentId: Overload:Lemonad.ErrorHandling.Maybe`1.DoWith
  isSpec: "True"
  fullName: Lemonad.ErrorHandling.Maybe<T>.DoWith
  fullName.vb: Lemonad.ErrorHandling.Maybe(Of T).DoWith
  nameWithType: Maybe<T>.DoWith
  nameWithType.vb: Maybe(Of T).DoWith
- uid: Lemonad.ErrorHandling.Maybe`1.Equals(Lemonad.ErrorHandling.Maybe{`0})
  name: Equals(Maybe<T>)
  href: api/Lemonad.ErrorHandling.Maybe-1.html#Lemonad_ErrorHandling_Maybe_1_Equals_Lemonad_ErrorHandling_Maybe__0__
  commentId: M:Lemonad.ErrorHandling.Maybe`1.Equals(Lemonad.ErrorHandling.Maybe{`0})
  name.vb: Equals(Maybe(Of T))
  fullName: Lemonad.ErrorHandling.Maybe<T>.Equals(Lemonad.ErrorHandling.Maybe<T>)
  fullName.vb: Lemonad.ErrorHandling.Maybe(Of T).Equals(Lemonad.ErrorHandling.Maybe(Of T))
  nameWithType: Maybe<T>.Equals(Maybe<T>)
  nameWithType.vb: Maybe(Of T).Equals(Maybe(Of T))
- uid: Lemonad.ErrorHandling.Maybe`1.Equals(System.Object)
  name: Equals(Object)
  href: api/Lemonad.ErrorHandling.Maybe-1.html#Lemonad_ErrorHandling_Maybe_1_Equals_System_Object_
  commentId: M:Lemonad.ErrorHandling.Maybe`1.Equals(System.Object)
  fullName: Lemonad.ErrorHandling.Maybe<T>.Equals(System.Object)
  fullName.vb: Lemonad.ErrorHandling.Maybe(Of T).Equals(System.Object)
  nameWithType: Maybe<T>.Equals(Object)
  nameWithType.vb: Maybe(Of T).Equals(Object)
- uid: Lemonad.ErrorHandling.Maybe`1.Equals*
  name: Equals
  href: api/Lemonad.ErrorHandling.Maybe-1.html#Lemonad_ErrorHandling_Maybe_1_Equals_
  commentId: Overload:Lemonad.ErrorHandling.Maybe`1.Equals
  isSpec: "True"
  fullName: Lemonad.ErrorHandling.Maybe<T>.Equals
  fullName.vb: Lemonad.ErrorHandling.Maybe(Of T).Equals
  nameWithType: Maybe<T>.Equals
  nameWithType.vb: Maybe(Of T).Equals
- uid: Lemonad.ErrorHandling.Maybe`1.Filter(System.Func{`0,System.Boolean})
  name: Filter(Func<T, Boolean>)
  href: api/Lemonad.ErrorHandling.Maybe-1.html#Lemonad_ErrorHandling_Maybe_1_Filter_System_Func__0_System_Boolean__
  commentId: M:Lemonad.ErrorHandling.Maybe`1.Filter(System.Func{`0,System.Boolean})
  name.vb: Filter(Func(Of T, Boolean))
  fullName: Lemonad.ErrorHandling.Maybe<T>.Filter(System.Func<T, System.Boolean>)
  fullName.vb: Lemonad.ErrorHandling.Maybe(Of T).Filter(System.Func(Of T, System.Boolean))
  nameWithType: Maybe<T>.Filter(Func<T, Boolean>)
  nameWithType.vb: Maybe(Of T).Filter(Func(Of T, Boolean))
- uid: Lemonad.ErrorHandling.Maybe`1.Filter*
  name: Filter
  href: api/Lemonad.ErrorHandling.Maybe-1.html#Lemonad_ErrorHandling_Maybe_1_Filter_
  commentId: Overload:Lemonad.ErrorHandling.Maybe`1.Filter
  isSpec: "True"
  fullName: Lemonad.ErrorHandling.Maybe<T>.Filter
  fullName.vb: Lemonad.ErrorHandling.Maybe(Of T).Filter
  nameWithType: Maybe<T>.Filter
  nameWithType.vb: Maybe(Of T).Filter
- uid: Lemonad.ErrorHandling.Maybe`1.FlatMap*
  name: FlatMap
  href: api/Lemonad.ErrorHandling.Maybe-1.html#Lemonad_ErrorHandling_Maybe_1_FlatMap_
  commentId: Overload:Lemonad.ErrorHandling.Maybe`1.FlatMap
  isSpec: "True"
  fullName: Lemonad.ErrorHandling.Maybe<T>.FlatMap
  fullName.vb: Lemonad.ErrorHandling.Maybe(Of T).FlatMap
  nameWithType: Maybe<T>.FlatMap
  nameWithType.vb: Maybe(Of T).FlatMap
- uid: Lemonad.ErrorHandling.Maybe`1.FlatMap``1(System.Func{`0,Lemonad.ErrorHandling.Maybe{``0}})
  name: FlatMap<TResult>(Func<T, Maybe<TResult>>)
  href: api/Lemonad.ErrorHandling.Maybe-1.html#Lemonad_ErrorHandling_Maybe_1_FlatMap__1_System_Func__0_Lemonad_ErrorHandling_Maybe___0___
  commentId: M:Lemonad.ErrorHandling.Maybe`1.FlatMap``1(System.Func{`0,Lemonad.ErrorHandling.Maybe{``0}})
  name.vb: FlatMap(Of TResult)(Func(Of T, Maybe(Of TResult)))
  fullName: Lemonad.ErrorHandling.Maybe<T>.FlatMap<TResult>(System.Func<T, Lemonad.ErrorHandling.Maybe<TResult>>)
  fullName.vb: Lemonad.ErrorHandling.Maybe(Of T).FlatMap(Of TResult)(System.Func(Of T, Lemonad.ErrorHandling.Maybe(Of TResult)))
  nameWithType: Maybe<T>.FlatMap<TResult>(Func<T, Maybe<TResult>>)
  nameWithType.vb: Maybe(Of T).FlatMap(Of TResult)(Func(Of T, Maybe(Of TResult)))
- uid: Lemonad.ErrorHandling.Maybe`1.FlatMap``1(System.Func{`0,System.Nullable{``0}})
  name: FlatMap<TResult>(Func<T, Nullable<TResult>>)
  href: api/Lemonad.ErrorHandling.Maybe-1.html#Lemonad_ErrorHandling_Maybe_1_FlatMap__1_System_Func__0_System_Nullable___0___
  commentId: M:Lemonad.ErrorHandling.Maybe`1.FlatMap``1(System.Func{`0,System.Nullable{``0}})
  name.vb: FlatMap(Of TResult)(Func(Of T, Nullable(Of TResult)))
  fullName: Lemonad.ErrorHandling.Maybe<T>.FlatMap<TResult>(System.Func<T, System.Nullable<TResult>>)
  fullName.vb: Lemonad.ErrorHandling.Maybe(Of T).FlatMap(Of TResult)(System.Func(Of T, System.Nullable(Of TResult)))
  nameWithType: Maybe<T>.FlatMap<TResult>(Func<T, Nullable<TResult>>)
  nameWithType.vb: Maybe(Of T).FlatMap(Of TResult)(Func(Of T, Nullable(Of TResult)))
- uid: Lemonad.ErrorHandling.Maybe`1.FlatMap``2(System.Func{`0,Lemonad.ErrorHandling.Maybe{``0}},System.Func{`0,``0,``1})
  name: FlatMap<TFlatMap, TResult>(Func<T, Maybe<TFlatMap>>, Func<T, TFlatMap, TResult>)
  href: api/Lemonad.ErrorHandling.Maybe-1.html#Lemonad_ErrorHandling_Maybe_1_FlatMap__2_System_Func__0_Lemonad_ErrorHandling_Maybe___0___System_Func__0___0___1__
  commentId: M:Lemonad.ErrorHandling.Maybe`1.FlatMap``2(System.Func{`0,Lemonad.ErrorHandling.Maybe{``0}},System.Func{`0,``0,``1})
  name.vb: FlatMap(Of TFlatMap, TResult)(Func(Of T, Maybe(Of TFlatMap)), Func(Of T, TFlatMap, TResult))
  fullName: Lemonad.ErrorHandling.Maybe<T>.FlatMap<TFlatMap, TResult>(System.Func<T, Lemonad.ErrorHandling.Maybe<TFlatMap>>, System.Func<T, TFlatMap, TResult>)
  fullName.vb: Lemonad.ErrorHandling.Maybe(Of T).FlatMap(Of TFlatMap, TResult)(System.Func(Of T, Lemonad.ErrorHandling.Maybe(Of TFlatMap)), System.Func(Of T, TFlatMap, TResult))
  nameWithType: Maybe<T>.FlatMap<TFlatMap, TResult>(Func<T, Maybe<TFlatMap>>, Func<T, TFlatMap, TResult>)
  nameWithType.vb: Maybe(Of T).FlatMap(Of TFlatMap, TResult)(Func(Of T, Maybe(Of TFlatMap)), Func(Of T, TFlatMap, TResult))
- uid: Lemonad.ErrorHandling.Maybe`1.FlatMap``2(System.Func{`0,System.Nullable{``0}},System.Func{`0,``0,``1})
  name: FlatMap<TFlatMap, TResult>(Func<T, Nullable<TFlatMap>>, Func<T, TFlatMap, TResult>)
  href: api/Lemonad.ErrorHandling.Maybe-1.html#Lemonad_ErrorHandling_Maybe_1_FlatMap__2_System_Func__0_System_Nullable___0___System_Func__0___0___1__
  commentId: M:Lemonad.ErrorHandling.Maybe`1.FlatMap``2(System.Func{`0,System.Nullable{``0}},System.Func{`0,``0,``1})
  name.vb: FlatMap(Of TFlatMap, TResult)(Func(Of T, Nullable(Of TFlatMap)), Func(Of T, TFlatMap, TResult))
  fullName: Lemonad.ErrorHandling.Maybe<T>.FlatMap<TFlatMap, TResult>(System.Func<T, System.Nullable<TFlatMap>>, System.Func<T, TFlatMap, TResult>)
  fullName.vb: Lemonad.ErrorHandling.Maybe(Of T).FlatMap(Of TFlatMap, TResult)(System.Func(Of T, System.Nullable(Of TFlatMap)), System.Func(Of T, TFlatMap, TResult))
  nameWithType: Maybe<T>.FlatMap<TFlatMap, TResult>(Func<T, Nullable<TFlatMap>>, Func<T, TFlatMap, TResult>)
  nameWithType.vb: Maybe(Of T).FlatMap(Of TFlatMap, TResult)(Func(Of T, Nullable(Of TFlatMap)), Func(Of T, TFlatMap, TResult))
- uid: Lemonad.ErrorHandling.Maybe`1.Flatten*
  name: Flatten
  href: api/Lemonad.ErrorHandling.Maybe-1.html#Lemonad_ErrorHandling_Maybe_1_Flatten_
  commentId: Overload:Lemonad.ErrorHandling.Maybe`1.Flatten
  isSpec: "True"
  fullName: Lemonad.ErrorHandling.Maybe<T>.Flatten
  fullName.vb: Lemonad.ErrorHandling.Maybe(Of T).Flatten
  nameWithType: Maybe<T>.Flatten
  nameWithType.vb: Maybe(Of T).Flatten
- uid: Lemonad.ErrorHandling.Maybe`1.Flatten``1(System.Func{`0,Lemonad.ErrorHandling.Maybe{``0}})
  name: Flatten<TResult>(Func<T, Maybe<TResult>>)
  href: api/Lemonad.ErrorHandling.Maybe-1.html#Lemonad_ErrorHandling_Maybe_1_Flatten__1_System_Func__0_Lemonad_ErrorHandling_Maybe___0___
  commentId: M:Lemonad.ErrorHandling.Maybe`1.Flatten``1(System.Func{`0,Lemonad.ErrorHandling.Maybe{``0}})
  name.vb: Flatten(Of TResult)(Func(Of T, Maybe(Of TResult)))
  fullName: Lemonad.ErrorHandling.Maybe<T>.Flatten<TResult>(System.Func<T, Lemonad.ErrorHandling.Maybe<TResult>>)
  fullName.vb: Lemonad.ErrorHandling.Maybe(Of T).Flatten(Of TResult)(System.Func(Of T, Lemonad.ErrorHandling.Maybe(Of TResult)))
  nameWithType: Maybe<T>.Flatten<TResult>(Func<T, Maybe<TResult>>)
  nameWithType.vb: Maybe(Of T).Flatten(Of TResult)(Func(Of T, Maybe(Of TResult)))
- uid: Lemonad.ErrorHandling.Maybe`1.GetHashCode
  name: GetHashCode()
  href: api/Lemonad.ErrorHandling.Maybe-1.html#Lemonad_ErrorHandling_Maybe_1_GetHashCode
  commentId: M:Lemonad.ErrorHandling.Maybe`1.GetHashCode
  fullName: Lemonad.ErrorHandling.Maybe<T>.GetHashCode()
  fullName.vb: Lemonad.ErrorHandling.Maybe(Of T).GetHashCode()
  nameWithType: Maybe<T>.GetHashCode()
  nameWithType.vb: Maybe(Of T).GetHashCode()
- uid: Lemonad.ErrorHandling.Maybe`1.GetHashCode*
  name: GetHashCode
  href: api/Lemonad.ErrorHandling.Maybe-1.html#Lemonad_ErrorHandling_Maybe_1_GetHashCode_
  commentId: Overload:Lemonad.ErrorHandling.Maybe`1.GetHashCode
  isSpec: "True"
  fullName: Lemonad.ErrorHandling.Maybe<T>.GetHashCode
  fullName.vb: Lemonad.ErrorHandling.Maybe(Of T).GetHashCode
  nameWithType: Maybe<T>.GetHashCode
  nameWithType.vb: Maybe(Of T).GetHashCode
- uid: Lemonad.ErrorHandling.Maybe`1.HasValue
  name: HasValue
  href: api/Lemonad.ErrorHandling.Maybe-1.html#Lemonad_ErrorHandling_Maybe_1_HasValue
  commentId: P:Lemonad.ErrorHandling.Maybe`1.HasValue
  fullName: Lemonad.ErrorHandling.Maybe<T>.HasValue
  fullName.vb: Lemonad.ErrorHandling.Maybe(Of T).HasValue
  nameWithType: Maybe<T>.HasValue
  nameWithType.vb: Maybe(Of T).HasValue
- uid: Lemonad.ErrorHandling.Maybe`1.HasValue*
  name: HasValue
  href: api/Lemonad.ErrorHandling.Maybe-1.html#Lemonad_ErrorHandling_Maybe_1_HasValue_
  commentId: Overload:Lemonad.ErrorHandling.Maybe`1.HasValue
  isSpec: "True"
  fullName: Lemonad.ErrorHandling.Maybe<T>.HasValue
  fullName.vb: Lemonad.ErrorHandling.Maybe(Of T).HasValue
  nameWithType: Maybe<T>.HasValue
  nameWithType.vb: Maybe(Of T).HasValue
- uid: Lemonad.ErrorHandling.Maybe`1.IsNoneWhen(System.Func{`0,System.Boolean})
  name: IsNoneWhen(Func<T, Boolean>)
  href: api/Lemonad.ErrorHandling.Maybe-1.html#Lemonad_ErrorHandling_Maybe_1_IsNoneWhen_System_Func__0_System_Boolean__
  commentId: M:Lemonad.ErrorHandling.Maybe`1.IsNoneWhen(System.Func{`0,System.Boolean})
  name.vb: IsNoneWhen(Func(Of T, Boolean))
  fullName: Lemonad.ErrorHandling.Maybe<T>.IsNoneWhen(System.Func<T, System.Boolean>)
  fullName.vb: Lemonad.ErrorHandling.Maybe(Of T).IsNoneWhen(System.Func(Of T, System.Boolean))
  nameWithType: Maybe<T>.IsNoneWhen(Func<T, Boolean>)
  nameWithType.vb: Maybe(Of T).IsNoneWhen(Func(Of T, Boolean))
- uid: Lemonad.ErrorHandling.Maybe`1.IsNoneWhen*
  name: IsNoneWhen
  href: api/Lemonad.ErrorHandling.Maybe-1.html#Lemonad_ErrorHandling_Maybe_1_IsNoneWhen_
  commentId: Overload:Lemonad.ErrorHandling.Maybe`1.IsNoneWhen
  isSpec: "True"
  fullName: Lemonad.ErrorHandling.Maybe<T>.IsNoneWhen
  fullName.vb: Lemonad.ErrorHandling.Maybe(Of T).IsNoneWhen
  nameWithType: Maybe<T>.IsNoneWhen
  nameWithType.vb: Maybe(Of T).IsNoneWhen
- uid: Lemonad.ErrorHandling.Maybe`1.IsNoneWhenNull
  name: IsNoneWhenNull()
  href: api/Lemonad.ErrorHandling.Maybe-1.html#Lemonad_ErrorHandling_Maybe_1_IsNoneWhenNull
  commentId: M:Lemonad.ErrorHandling.Maybe`1.IsNoneWhenNull
  fullName: Lemonad.ErrorHandling.Maybe<T>.IsNoneWhenNull()
  fullName.vb: Lemonad.ErrorHandling.Maybe(Of T).IsNoneWhenNull()
  nameWithType: Maybe<T>.IsNoneWhenNull()
  nameWithType.vb: Maybe(Of T).IsNoneWhenNull()
- uid: Lemonad.ErrorHandling.Maybe`1.IsNoneWhenNull*
  name: IsNoneWhenNull
  href: api/Lemonad.ErrorHandling.Maybe-1.html#Lemonad_ErrorHandling_Maybe_1_IsNoneWhenNull_
  commentId: Overload:Lemonad.ErrorHandling.Maybe`1.IsNoneWhenNull
  isSpec: "True"
  fullName: Lemonad.ErrorHandling.Maybe<T>.IsNoneWhenNull
  fullName.vb: Lemonad.ErrorHandling.Maybe(Of T).IsNoneWhenNull
  nameWithType: Maybe<T>.IsNoneWhenNull
  nameWithType.vb: Maybe(Of T).IsNoneWhenNull
- uid: Lemonad.ErrorHandling.Maybe`1.Map*
  name: Map
  href: api/Lemonad.ErrorHandling.Maybe-1.html#Lemonad_ErrorHandling_Maybe_1_Map_
  commentId: Overload:Lemonad.ErrorHandling.Maybe`1.Map
  isSpec: "True"
  fullName: Lemonad.ErrorHandling.Maybe<T>.Map
  fullName.vb: Lemonad.ErrorHandling.Maybe(Of T).Map
  nameWithType: Maybe<T>.Map
  nameWithType.vb: Maybe(Of T).Map
- uid: Lemonad.ErrorHandling.Maybe`1.Map``1(System.Func{`0,``0})
  name: Map<TResult>(Func<T, TResult>)
  href: api/Lemonad.ErrorHandling.Maybe-1.html#Lemonad_ErrorHandling_Maybe_1_Map__1_System_Func__0___0__
  commentId: M:Lemonad.ErrorHandling.Maybe`1.Map``1(System.Func{`0,``0})
  name.vb: Map(Of TResult)(Func(Of T, TResult))
  fullName: Lemonad.ErrorHandling.Maybe<T>.Map<TResult>(System.Func<T, TResult>)
  fullName.vb: Lemonad.ErrorHandling.Maybe(Of T).Map(Of TResult)(System.Func(Of T, TResult))
  nameWithType: Maybe<T>.Map<TResult>(Func<T, TResult>)
  nameWithType.vb: Maybe(Of T).Map(Of TResult)(Func(Of T, TResult))
- uid: Lemonad.ErrorHandling.Maybe`1.Match(System.Action{`0},System.Action)
  name: Match(Action<T>, Action)
  href: api/Lemonad.ErrorHandling.Maybe-1.html#Lemonad_ErrorHandling_Maybe_1_Match_System_Action__0__System_Action_
  commentId: M:Lemonad.ErrorHandling.Maybe`1.Match(System.Action{`0},System.Action)
  name.vb: Match(Action(Of T), Action)
  fullName: Lemonad.ErrorHandling.Maybe<T>.Match(System.Action<T>, System.Action)
  fullName.vb: Lemonad.ErrorHandling.Maybe(Of T).Match(System.Action(Of T), System.Action)
  nameWithType: Maybe<T>.Match(Action<T>, Action)
  nameWithType.vb: Maybe(Of T).Match(Action(Of T), Action)
- uid: Lemonad.ErrorHandling.Maybe`1.Match*
  name: Match
  href: api/Lemonad.ErrorHandling.Maybe-1.html#Lemonad_ErrorHandling_Maybe_1_Match_
  commentId: Overload:Lemonad.ErrorHandling.Maybe`1.Match
  isSpec: "True"
  fullName: Lemonad.ErrorHandling.Maybe<T>.Match
  fullName.vb: Lemonad.ErrorHandling.Maybe(Of T).Match
  nameWithType: Maybe<T>.Match
  nameWithType.vb: Maybe(Of T).Match
- uid: Lemonad.ErrorHandling.Maybe`1.Match``1(System.Func{`0,``0},System.Func{``0})
  name: Match<TResult>(Func<T, TResult>, Func<TResult>)
  href: api/Lemonad.ErrorHandling.Maybe-1.html#Lemonad_ErrorHandling_Maybe_1_Match__1_System_Func__0___0__System_Func___0__
  commentId: M:Lemonad.ErrorHandling.Maybe`1.Match``1(System.Func{`0,``0},System.Func{``0})
  name.vb: Match(Of TResult)(Func(Of T, TResult), Func(Of TResult))
  fullName: Lemonad.ErrorHandling.Maybe<T>.Match<TResult>(System.Func<T, TResult>, System.Func<TResult>)
  fullName.vb: Lemonad.ErrorHandling.Maybe(Of T).Match(Of TResult)(System.Func(Of T, TResult), System.Func(Of TResult))
  nameWithType: Maybe<T>.Match<TResult>(Func<T, TResult>, Func<TResult>)
  nameWithType.vb: Maybe(Of T).Match(Of TResult)(Func(Of T, TResult), Func(Of TResult))
- uid: Lemonad.ErrorHandling.Maybe`1.None
  name: None
  href: api/Lemonad.ErrorHandling.Maybe-1.html#Lemonad_ErrorHandling_Maybe_1_None
  commentId: P:Lemonad.ErrorHandling.Maybe`1.None
  fullName: Lemonad.ErrorHandling.Maybe<T>.None
  fullName.vb: Lemonad.ErrorHandling.Maybe(Of T).None
  nameWithType: Maybe<T>.None
  nameWithType.vb: Maybe(Of T).None
- uid: Lemonad.ErrorHandling.Maybe`1.None*
  name: None
  href: api/Lemonad.ErrorHandling.Maybe-1.html#Lemonad_ErrorHandling_Maybe_1_None_
  commentId: Overload:Lemonad.ErrorHandling.Maybe`1.None
  isSpec: "True"
  fullName: Lemonad.ErrorHandling.Maybe<T>.None
  fullName.vb: Lemonad.ErrorHandling.Maybe(Of T).None
  nameWithType: Maybe<T>.None
  nameWithType.vb: Maybe(Of T).None
- uid: Lemonad.ErrorHandling.Maybe`1.op_Equality(Lemonad.ErrorHandling.Maybe{`0},Lemonad.ErrorHandling.Maybe{`0})
  name: Equality(Maybe<T>, Maybe<T>)
  href: api/Lemonad.ErrorHandling.Maybe-1.html#Lemonad_ErrorHandling_Maybe_1_op_Equality_Lemonad_ErrorHandling_Maybe__0__Lemonad_ErrorHandling_Maybe__0__
  commentId: M:Lemonad.ErrorHandling.Maybe`1.op_Equality(Lemonad.ErrorHandling.Maybe{`0},Lemonad.ErrorHandling.Maybe{`0})
  name.vb: Equality(Maybe(Of T), Maybe(Of T))
  fullName: Lemonad.ErrorHandling.Maybe<T>.Equality(Lemonad.ErrorHandling.Maybe<T>, Lemonad.ErrorHandling.Maybe<T>)
  fullName.vb: Lemonad.ErrorHandling.Maybe(Of T).Equality(Lemonad.ErrorHandling.Maybe(Of T), Lemonad.ErrorHandling.Maybe(Of T))
  nameWithType: Maybe<T>.Equality(Maybe<T>, Maybe<T>)
  nameWithType.vb: Maybe(Of T).Equality(Maybe(Of T), Maybe(Of T))
- uid: Lemonad.ErrorHandling.Maybe`1.op_Equality*
  name: Equality
  href: api/Lemonad.ErrorHandling.Maybe-1.html#Lemonad_ErrorHandling_Maybe_1_op_Equality_
  commentId: Overload:Lemonad.ErrorHandling.Maybe`1.op_Equality
  isSpec: "True"
  fullName: Lemonad.ErrorHandling.Maybe<T>.Equality
  fullName.vb: Lemonad.ErrorHandling.Maybe(Of T).Equality
  nameWithType: Maybe<T>.Equality
  nameWithType.vb: Maybe(Of T).Equality
- uid: Lemonad.ErrorHandling.Maybe`1.op_GreaterThan(Lemonad.ErrorHandling.Maybe{`0},Lemonad.ErrorHandling.Maybe{`0})
  name: GreaterThan(Maybe<T>, Maybe<T>)
  href: api/Lemonad.ErrorHandling.Maybe-1.html#Lemonad_ErrorHandling_Maybe_1_op_GreaterThan_Lemonad_ErrorHandling_Maybe__0__Lemonad_ErrorHandling_Maybe__0__
  commentId: M:Lemonad.ErrorHandling.Maybe`1.op_GreaterThan(Lemonad.ErrorHandling.Maybe{`0},Lemonad.ErrorHandling.Maybe{`0})
  name.vb: GreaterThan(Maybe(Of T), Maybe(Of T))
  fullName: Lemonad.ErrorHandling.Maybe<T>.GreaterThan(Lemonad.ErrorHandling.Maybe<T>, Lemonad.ErrorHandling.Maybe<T>)
  fullName.vb: Lemonad.ErrorHandling.Maybe(Of T).GreaterThan(Lemonad.ErrorHandling.Maybe(Of T), Lemonad.ErrorHandling.Maybe(Of T))
  nameWithType: Maybe<T>.GreaterThan(Maybe<T>, Maybe<T>)
  nameWithType.vb: Maybe(Of T).GreaterThan(Maybe(Of T), Maybe(Of T))
- uid: Lemonad.ErrorHandling.Maybe`1.op_GreaterThan*
  name: GreaterThan
  href: api/Lemonad.ErrorHandling.Maybe-1.html#Lemonad_ErrorHandling_Maybe_1_op_GreaterThan_
  commentId: Overload:Lemonad.ErrorHandling.Maybe`1.op_GreaterThan
  isSpec: "True"
  fullName: Lemonad.ErrorHandling.Maybe<T>.GreaterThan
  fullName.vb: Lemonad.ErrorHandling.Maybe(Of T).GreaterThan
  nameWithType: Maybe<T>.GreaterThan
  nameWithType.vb: Maybe(Of T).GreaterThan
- uid: Lemonad.ErrorHandling.Maybe`1.op_GreaterThanOrEqual(Lemonad.ErrorHandling.Maybe{`0},Lemonad.ErrorHandling.Maybe{`0})
  name: GreaterThanOrEqual(Maybe<T>, Maybe<T>)
  href: api/Lemonad.ErrorHandling.Maybe-1.html#Lemonad_ErrorHandling_Maybe_1_op_GreaterThanOrEqual_Lemonad_ErrorHandling_Maybe__0__Lemonad_ErrorHandling_Maybe__0__
  commentId: M:Lemonad.ErrorHandling.Maybe`1.op_GreaterThanOrEqual(Lemonad.ErrorHandling.Maybe{`0},Lemonad.ErrorHandling.Maybe{`0})
  name.vb: GreaterThanOrEqual(Maybe(Of T), Maybe(Of T))
  fullName: Lemonad.ErrorHandling.Maybe<T>.GreaterThanOrEqual(Lemonad.ErrorHandling.Maybe<T>, Lemonad.ErrorHandling.Maybe<T>)
  fullName.vb: Lemonad.ErrorHandling.Maybe(Of T).GreaterThanOrEqual(Lemonad.ErrorHandling.Maybe(Of T), Lemonad.ErrorHandling.Maybe(Of T))
  nameWithType: Maybe<T>.GreaterThanOrEqual(Maybe<T>, Maybe<T>)
  nameWithType.vb: Maybe(Of T).GreaterThanOrEqual(Maybe(Of T), Maybe(Of T))
- uid: Lemonad.ErrorHandling.Maybe`1.op_GreaterThanOrEqual*
  name: GreaterThanOrEqual
  href: api/Lemonad.ErrorHandling.Maybe-1.html#Lemonad_ErrorHandling_Maybe_1_op_GreaterThanOrEqual_
  commentId: Overload:Lemonad.ErrorHandling.Maybe`1.op_GreaterThanOrEqual
  isSpec: "True"
  fullName: Lemonad.ErrorHandling.Maybe<T>.GreaterThanOrEqual
  fullName.vb: Lemonad.ErrorHandling.Maybe(Of T).GreaterThanOrEqual
  nameWithType: Maybe<T>.GreaterThanOrEqual
  nameWithType.vb: Maybe(Of T).GreaterThanOrEqual
- uid: Lemonad.ErrorHandling.Maybe`1.op_Implicit(`0)~Lemonad.ErrorHandling.Maybe{`0}
  name: Implicit(T to Maybe<T>)
  href: api/Lemonad.ErrorHandling.Maybe-1.html#Lemonad_ErrorHandling_Maybe_1_op_Implicit__0__Lemonad_ErrorHandling_Maybe__0_
  commentId: M:Lemonad.ErrorHandling.Maybe`1.op_Implicit(`0)~Lemonad.ErrorHandling.Maybe{`0}
  name.vb: Widening(T to Maybe(Of T))
  fullName: Lemonad.ErrorHandling.Maybe<T>.Implicit(T to Lemonad.ErrorHandling.Maybe<T>)
  fullName.vb: Lemonad.ErrorHandling.Maybe(Of T).Widening(T to Lemonad.ErrorHandling.Maybe(Of T))
  nameWithType: Maybe<T>.Implicit(T to Maybe<T>)
  nameWithType.vb: Maybe(Of T).Widening(T to Maybe(Of T))
- uid: Lemonad.ErrorHandling.Maybe`1.op_Implicit*
  name: Implicit
  href: api/Lemonad.ErrorHandling.Maybe-1.html#Lemonad_ErrorHandling_Maybe_1_op_Implicit_
  commentId: Overload:Lemonad.ErrorHandling.Maybe`1.op_Implicit
  isSpec: "True"
  name.vb: Widening
  fullName: Lemonad.ErrorHandling.Maybe<T>.Implicit
  fullName.vb: Lemonad.ErrorHandling.Maybe(Of T).Widening
  nameWithType: Maybe<T>.Implicit
  nameWithType.vb: Maybe(Of T).Widening
- uid: Lemonad.ErrorHandling.Maybe`1.op_Inequality(Lemonad.ErrorHandling.Maybe{`0},Lemonad.ErrorHandling.Maybe{`0})
  name: Inequality(Maybe<T>, Maybe<T>)
  href: api/Lemonad.ErrorHandling.Maybe-1.html#Lemonad_ErrorHandling_Maybe_1_op_Inequality_Lemonad_ErrorHandling_Maybe__0__Lemonad_ErrorHandling_Maybe__0__
  commentId: M:Lemonad.ErrorHandling.Maybe`1.op_Inequality(Lemonad.ErrorHandling.Maybe{`0},Lemonad.ErrorHandling.Maybe{`0})
  name.vb: Inequality(Maybe(Of T), Maybe(Of T))
  fullName: Lemonad.ErrorHandling.Maybe<T>.Inequality(Lemonad.ErrorHandling.Maybe<T>, Lemonad.ErrorHandling.Maybe<T>)
  fullName.vb: Lemonad.ErrorHandling.Maybe(Of T).Inequality(Lemonad.ErrorHandling.Maybe(Of T), Lemonad.ErrorHandling.Maybe(Of T))
  nameWithType: Maybe<T>.Inequality(Maybe<T>, Maybe<T>)
  nameWithType.vb: Maybe(Of T).Inequality(Maybe(Of T), Maybe(Of T))
- uid: Lemonad.ErrorHandling.Maybe`1.op_Inequality*
  name: Inequality
  href: api/Lemonad.ErrorHandling.Maybe-1.html#Lemonad_ErrorHandling_Maybe_1_op_Inequality_
  commentId: Overload:Lemonad.ErrorHandling.Maybe`1.op_Inequality
  isSpec: "True"
  fullName: Lemonad.ErrorHandling.Maybe<T>.Inequality
  fullName.vb: Lemonad.ErrorHandling.Maybe(Of T).Inequality
  nameWithType: Maybe<T>.Inequality
  nameWithType.vb: Maybe(Of T).Inequality
- uid: Lemonad.ErrorHandling.Maybe`1.op_LessThan(Lemonad.ErrorHandling.Maybe{`0},Lemonad.ErrorHandling.Maybe{`0})
  name: LessThan(Maybe<T>, Maybe<T>)
  href: api/Lemonad.ErrorHandling.Maybe-1.html#Lemonad_ErrorHandling_Maybe_1_op_LessThan_Lemonad_ErrorHandling_Maybe__0__Lemonad_ErrorHandling_Maybe__0__
  commentId: M:Lemonad.ErrorHandling.Maybe`1.op_LessThan(Lemonad.ErrorHandling.Maybe{`0},Lemonad.ErrorHandling.Maybe{`0})
  name.vb: LessThan(Maybe(Of T), Maybe(Of T))
  fullName: Lemonad.ErrorHandling.Maybe<T>.LessThan(Lemonad.ErrorHandling.Maybe<T>, Lemonad.ErrorHandling.Maybe<T>)
  fullName.vb: Lemonad.ErrorHandling.Maybe(Of T).LessThan(Lemonad.ErrorHandling.Maybe(Of T), Lemonad.ErrorHandling.Maybe(Of T))
  nameWithType: Maybe<T>.LessThan(Maybe<T>, Maybe<T>)
  nameWithType.vb: Maybe(Of T).LessThan(Maybe(Of T), Maybe(Of T))
- uid: Lemonad.ErrorHandling.Maybe`1.op_LessThan*
  name: LessThan
  href: api/Lemonad.ErrorHandling.Maybe-1.html#Lemonad_ErrorHandling_Maybe_1_op_LessThan_
  commentId: Overload:Lemonad.ErrorHandling.Maybe`1.op_LessThan
  isSpec: "True"
  fullName: Lemonad.ErrorHandling.Maybe<T>.LessThan
  fullName.vb: Lemonad.ErrorHandling.Maybe(Of T).LessThan
  nameWithType: Maybe<T>.LessThan
  nameWithType.vb: Maybe(Of T).LessThan
- uid: Lemonad.ErrorHandling.Maybe`1.op_LessThanOrEqual(Lemonad.ErrorHandling.Maybe{`0},Lemonad.ErrorHandling.Maybe{`0})
  name: LessThanOrEqual(Maybe<T>, Maybe<T>)
  href: api/Lemonad.ErrorHandling.Maybe-1.html#Lemonad_ErrorHandling_Maybe_1_op_LessThanOrEqual_Lemonad_ErrorHandling_Maybe__0__Lemonad_ErrorHandling_Maybe__0__
  commentId: M:Lemonad.ErrorHandling.Maybe`1.op_LessThanOrEqual(Lemonad.ErrorHandling.Maybe{`0},Lemonad.ErrorHandling.Maybe{`0})
  name.vb: LessThanOrEqual(Maybe(Of T), Maybe(Of T))
  fullName: Lemonad.ErrorHandling.Maybe<T>.LessThanOrEqual(Lemonad.ErrorHandling.Maybe<T>, Lemonad.ErrorHandling.Maybe<T>)
  fullName.vb: Lemonad.ErrorHandling.Maybe(Of T).LessThanOrEqual(Lemonad.ErrorHandling.Maybe(Of T), Lemonad.ErrorHandling.Maybe(Of T))
  nameWithType: Maybe<T>.LessThanOrEqual(Maybe<T>, Maybe<T>)
  nameWithType.vb: Maybe(Of T).LessThanOrEqual(Maybe(Of T), Maybe(Of T))
- uid: Lemonad.ErrorHandling.Maybe`1.op_LessThanOrEqual*
  name: LessThanOrEqual
  href: api/Lemonad.ErrorHandling.Maybe-1.html#Lemonad_ErrorHandling_Maybe_1_op_LessThanOrEqual_
  commentId: Overload:Lemonad.ErrorHandling.Maybe`1.op_LessThanOrEqual
  isSpec: "True"
  fullName: Lemonad.ErrorHandling.Maybe<T>.LessThanOrEqual
  fullName.vb: Lemonad.ErrorHandling.Maybe(Of T).LessThanOrEqual
  nameWithType: Maybe<T>.LessThanOrEqual
  nameWithType.vb: Maybe(Of T).LessThanOrEqual
- uid: Lemonad.ErrorHandling.Maybe`1.ToString
  name: ToString()
  href: api/Lemonad.ErrorHandling.Maybe-1.html#Lemonad_ErrorHandling_Maybe_1_ToString
  commentId: M:Lemonad.ErrorHandling.Maybe`1.ToString
  fullName: Lemonad.ErrorHandling.Maybe<T>.ToString()
  fullName.vb: Lemonad.ErrorHandling.Maybe(Of T).ToString()
  nameWithType: Maybe<T>.ToString()
  nameWithType.vb: Maybe(Of T).ToString()
- uid: Lemonad.ErrorHandling.Maybe`1.ToString*
  name: ToString
  href: api/Lemonad.ErrorHandling.Maybe-1.html#Lemonad_ErrorHandling_Maybe_1_ToString_
  commentId: Overload:Lemonad.ErrorHandling.Maybe`1.ToString
  isSpec: "True"
  fullName: Lemonad.ErrorHandling.Maybe<T>.ToString
  fullName.vb: Lemonad.ErrorHandling.Maybe(Of T).ToString
  nameWithType: Maybe<T>.ToString
  nameWithType.vb: Maybe(Of T).ToString
- uid: Lemonad.ErrorHandling.Outcome`2
  name: Outcome<T, TError>
  href: api/Lemonad.ErrorHandling.Outcome-2.html
  commentId: T:Lemonad.ErrorHandling.Outcome`2
  name.vb: Outcome(Of T, TError)
  fullName: Lemonad.ErrorHandling.Outcome<T, TError>
  fullName.vb: Lemonad.ErrorHandling.Outcome(Of T, TError)
  nameWithType: Outcome<T, TError>
  nameWithType.vb: Outcome(Of T, TError)
- uid: Lemonad.ErrorHandling.Outcome`2.AsEnumerable
  name: AsEnumerable
  href: api/Lemonad.ErrorHandling.Outcome-2.html#Lemonad_ErrorHandling_Outcome_2_AsEnumerable
  commentId: P:Lemonad.ErrorHandling.Outcome`2.AsEnumerable
  fullName: Lemonad.ErrorHandling.Outcome<T, TError>.AsEnumerable
  fullName.vb: Lemonad.ErrorHandling.Outcome(Of T, TError).AsEnumerable
  nameWithType: Outcome<T, TError>.AsEnumerable
  nameWithType.vb: Outcome(Of T, TError).AsEnumerable
- uid: Lemonad.ErrorHandling.Outcome`2.AsEnumerable*
  name: AsEnumerable
  href: api/Lemonad.ErrorHandling.Outcome-2.html#Lemonad_ErrorHandling_Outcome_2_AsEnumerable_
  commentId: Overload:Lemonad.ErrorHandling.Outcome`2.AsEnumerable
  isSpec: "True"
  fullName: Lemonad.ErrorHandling.Outcome<T, TError>.AsEnumerable
  fullName.vb: Lemonad.ErrorHandling.Outcome(Of T, TError).AsEnumerable
  nameWithType: Outcome<T, TError>.AsEnumerable
  nameWithType.vb: Outcome(Of T, TError).AsEnumerable
- uid: Lemonad.ErrorHandling.Outcome`2.AsErrorEnumerable
  name: AsErrorEnumerable
  href: api/Lemonad.ErrorHandling.Outcome-2.html#Lemonad_ErrorHandling_Outcome_2_AsErrorEnumerable
  commentId: P:Lemonad.ErrorHandling.Outcome`2.AsErrorEnumerable
  fullName: Lemonad.ErrorHandling.Outcome<T, TError>.AsErrorEnumerable
  fullName.vb: Lemonad.ErrorHandling.Outcome(Of T, TError).AsErrorEnumerable
  nameWithType: Outcome<T, TError>.AsErrorEnumerable
  nameWithType.vb: Outcome(Of T, TError).AsErrorEnumerable
- uid: Lemonad.ErrorHandling.Outcome`2.AsErrorEnumerable*
  name: AsErrorEnumerable
  href: api/Lemonad.ErrorHandling.Outcome-2.html#Lemonad_ErrorHandling_Outcome_2_AsErrorEnumerable_
  commentId: Overload:Lemonad.ErrorHandling.Outcome`2.AsErrorEnumerable
  isSpec: "True"
  fullName: Lemonad.ErrorHandling.Outcome<T, TError>.AsErrorEnumerable
  fullName.vb: Lemonad.ErrorHandling.Outcome(Of T, TError).AsErrorEnumerable
  nameWithType: Outcome<T, TError>.AsErrorEnumerable
  nameWithType.vb: Outcome(Of T, TError).AsErrorEnumerable
- uid: Lemonad.ErrorHandling.Outcome`2.Cast*
  name: Cast
  href: api/Lemonad.ErrorHandling.Outcome-2.html#Lemonad_ErrorHandling_Outcome_2_Cast_
  commentId: Overload:Lemonad.ErrorHandling.Outcome`2.Cast
  isSpec: "True"
  fullName: Lemonad.ErrorHandling.Outcome<T, TError>.Cast
  fullName.vb: Lemonad.ErrorHandling.Outcome(Of T, TError).Cast
  nameWithType: Outcome<T, TError>.Cast
  nameWithType.vb: Outcome(Of T, TError).Cast
- uid: Lemonad.ErrorHandling.Outcome`2.Cast``1
  name: Cast<TResult>()
  href: api/Lemonad.ErrorHandling.Outcome-2.html#Lemonad_ErrorHandling_Outcome_2_Cast__1
  commentId: M:Lemonad.ErrorHandling.Outcome`2.Cast``1
  name.vb: Cast(Of TResult)()
  fullName: Lemonad.ErrorHandling.Outcome<T, TError>.Cast<TResult>()
  fullName.vb: Lemonad.ErrorHandling.Outcome(Of T, TError).Cast(Of TResult)()
  nameWithType: Outcome<T, TError>.Cast<TResult>()
  nameWithType.vb: Outcome(Of T, TError).Cast(Of TResult)()
- uid: Lemonad.ErrorHandling.Outcome`2.CastError*
  name: CastError
  href: api/Lemonad.ErrorHandling.Outcome-2.html#Lemonad_ErrorHandling_Outcome_2_CastError_
  commentId: Overload:Lemonad.ErrorHandling.Outcome`2.CastError
  isSpec: "True"
  fullName: Lemonad.ErrorHandling.Outcome<T, TError>.CastError
  fullName.vb: Lemonad.ErrorHandling.Outcome(Of T, TError).CastError
  nameWithType: Outcome<T, TError>.CastError
  nameWithType.vb: Outcome(Of T, TError).CastError
- uid: Lemonad.ErrorHandling.Outcome`2.CastError``1
  name: CastError<TResult>()
  href: api/Lemonad.ErrorHandling.Outcome-2.html#Lemonad_ErrorHandling_Outcome_2_CastError__1
  commentId: M:Lemonad.ErrorHandling.Outcome`2.CastError``1
  name.vb: CastError(Of TResult)()
  fullName: Lemonad.ErrorHandling.Outcome<T, TError>.CastError<TResult>()
  fullName.vb: Lemonad.ErrorHandling.Outcome(Of T, TError).CastError(Of TResult)()
  nameWithType: Outcome<T, TError>.CastError<TResult>()
  nameWithType.vb: Outcome(Of T, TError).CastError(Of TResult)()
- uid: Lemonad.ErrorHandling.Outcome`2.Do(System.Action)
  name: Do(Action)
  href: api/Lemonad.ErrorHandling.Outcome-2.html#Lemonad_ErrorHandling_Outcome_2_Do_System_Action_
  commentId: M:Lemonad.ErrorHandling.Outcome`2.Do(System.Action)
  fullName: Lemonad.ErrorHandling.Outcome<T, TError>.Do(System.Action)
  fullName.vb: Lemonad.ErrorHandling.Outcome(Of T, TError).Do(System.Action)
  nameWithType: Outcome<T, TError>.Do(Action)
  nameWithType.vb: Outcome(Of T, TError).Do(Action)
- uid: Lemonad.ErrorHandling.Outcome`2.Do*
  name: Do
  href: api/Lemonad.ErrorHandling.Outcome-2.html#Lemonad_ErrorHandling_Outcome_2_Do_
  commentId: Overload:Lemonad.ErrorHandling.Outcome`2.Do
  isSpec: "True"
  fullName: Lemonad.ErrorHandling.Outcome<T, TError>.Do
  fullName.vb: Lemonad.ErrorHandling.Outcome(Of T, TError).Do
  nameWithType: Outcome<T, TError>.Do
  nameWithType.vb: Outcome(Of T, TError).Do
- uid: Lemonad.ErrorHandling.Outcome`2.DoWith(System.Action{`0})
  name: DoWith(Action<T>)
  href: api/Lemonad.ErrorHandling.Outcome-2.html#Lemonad_ErrorHandling_Outcome_2_DoWith_System_Action__0__
  commentId: M:Lemonad.ErrorHandling.Outcome`2.DoWith(System.Action{`0})
  name.vb: DoWith(Action(Of T))
  fullName: Lemonad.ErrorHandling.Outcome<T, TError>.DoWith(System.Action<T>)
  fullName.vb: Lemonad.ErrorHandling.Outcome(Of T, TError).DoWith(System.Action(Of T))
  nameWithType: Outcome<T, TError>.DoWith(Action<T>)
  nameWithType.vb: Outcome(Of T, TError).DoWith(Action(Of T))
- uid: Lemonad.ErrorHandling.Outcome`2.DoWith*
  name: DoWith
  href: api/Lemonad.ErrorHandling.Outcome-2.html#Lemonad_ErrorHandling_Outcome_2_DoWith_
  commentId: Overload:Lemonad.ErrorHandling.Outcome`2.DoWith
  isSpec: "True"
  fullName: Lemonad.ErrorHandling.Outcome<T, TError>.DoWith
  fullName.vb: Lemonad.ErrorHandling.Outcome(Of T, TError).DoWith
  nameWithType: Outcome<T, TError>.DoWith
  nameWithType.vb: Outcome(Of T, TError).DoWith
- uid: Lemonad.ErrorHandling.Outcome`2.DoWithError(System.Action{`1})
  name: DoWithError(Action<TError>)
  href: api/Lemonad.ErrorHandling.Outcome-2.html#Lemonad_ErrorHandling_Outcome_2_DoWithError_System_Action__1__
  commentId: M:Lemonad.ErrorHandling.Outcome`2.DoWithError(System.Action{`1})
  name.vb: DoWithError(Action(Of TError))
  fullName: Lemonad.ErrorHandling.Outcome<T, TError>.DoWithError(System.Action<TError>)
  fullName.vb: Lemonad.ErrorHandling.Outcome(Of T, TError).DoWithError(System.Action(Of TError))
  nameWithType: Outcome<T, TError>.DoWithError(Action<TError>)
  nameWithType.vb: Outcome(Of T, TError).DoWithError(Action(Of TError))
- uid: Lemonad.ErrorHandling.Outcome`2.DoWithError*
  name: DoWithError
  href: api/Lemonad.ErrorHandling.Outcome-2.html#Lemonad_ErrorHandling_Outcome_2_DoWithError_
  commentId: Overload:Lemonad.ErrorHandling.Outcome`2.DoWithError
  isSpec: "True"
  fullName: Lemonad.ErrorHandling.Outcome<T, TError>.DoWithError
  fullName.vb: Lemonad.ErrorHandling.Outcome(Of T, TError).DoWithError
  nameWithType: Outcome<T, TError>.DoWithError
  nameWithType.vb: Outcome(Of T, TError).DoWithError
- uid: Lemonad.ErrorHandling.Outcome`2.Filter(System.Func{`0,System.Boolean},System.Func{`1})
  name: Filter(Func<T, Boolean>, Func<TError>)
  href: api/Lemonad.ErrorHandling.Outcome-2.html#Lemonad_ErrorHandling_Outcome_2_Filter_System_Func__0_System_Boolean__System_Func__1__
  commentId: M:Lemonad.ErrorHandling.Outcome`2.Filter(System.Func{`0,System.Boolean},System.Func{`1})
  name.vb: Filter(Func(Of T, Boolean), Func(Of TError))
  fullName: Lemonad.ErrorHandling.Outcome<T, TError>.Filter(System.Func<T, System.Boolean>, System.Func<TError>)
  fullName.vb: Lemonad.ErrorHandling.Outcome(Of T, TError).Filter(System.Func(Of T, System.Boolean), System.Func(Of TError))
  nameWithType: Outcome<T, TError>.Filter(Func<T, Boolean>, Func<TError>)
  nameWithType.vb: Outcome(Of T, TError).Filter(Func(Of T, Boolean), Func(Of TError))
- uid: Lemonad.ErrorHandling.Outcome`2.Filter(System.Func{`0,System.Boolean},System.Func{Lemonad.ErrorHandling.Maybe{`0},`1})
  name: Filter(Func<T, Boolean>, Func<Maybe<T>, TError>)
  href: api/Lemonad.ErrorHandling.Outcome-2.html#Lemonad_ErrorHandling_Outcome_2_Filter_System_Func__0_System_Boolean__System_Func_Lemonad_ErrorHandling_Maybe__0___1__
  commentId: M:Lemonad.ErrorHandling.Outcome`2.Filter(System.Func{`0,System.Boolean},System.Func{Lemonad.ErrorHandling.Maybe{`0},`1})
  name.vb: Filter(Func(Of T, Boolean), Func(Of Maybe(Of T), TError))
  fullName: Lemonad.ErrorHandling.Outcome<T, TError>.Filter(System.Func<T, System.Boolean>, System.Func<Lemonad.ErrorHandling.Maybe<T>, TError>)
  fullName.vb: Lemonad.ErrorHandling.Outcome(Of T, TError).Filter(System.Func(Of T, System.Boolean), System.Func(Of Lemonad.ErrorHandling.Maybe(Of T), TError))
  nameWithType: Outcome<T, TError>.Filter(Func<T, Boolean>, Func<Maybe<T>, TError>)
  nameWithType.vb: Outcome(Of T, TError).Filter(Func(Of T, Boolean), Func(Of Maybe(Of T), TError))
- uid: Lemonad.ErrorHandling.Outcome`2.Filter(System.Func{`0,System.Threading.Tasks.Task{System.Boolean}},System.Func{`1})
  name: Filter(Func<T, Task<Boolean>>, Func<TError>)
  href: api/Lemonad.ErrorHandling.Outcome-2.html#Lemonad_ErrorHandling_Outcome_2_Filter_System_Func__0_System_Threading_Tasks_Task_System_Boolean___System_Func__1__
  commentId: M:Lemonad.ErrorHandling.Outcome`2.Filter(System.Func{`0,System.Threading.Tasks.Task{System.Boolean}},System.Func{`1})
  name.vb: Filter(Func(Of T, Task(Of Boolean)), Func(Of TError))
  fullName: Lemonad.ErrorHandling.Outcome<T, TError>.Filter(System.Func<T, System.Threading.Tasks.Task<System.Boolean>>, System.Func<TError>)
  fullName.vb: Lemonad.ErrorHandling.Outcome(Of T, TError).Filter(System.Func(Of T, System.Threading.Tasks.Task(Of System.Boolean)), System.Func(Of TError))
  nameWithType: Outcome<T, TError>.Filter(Func<T, Task<Boolean>>, Func<TError>)
  nameWithType.vb: Outcome(Of T, TError).Filter(Func(Of T, Task(Of Boolean)), Func(Of TError))
- uid: Lemonad.ErrorHandling.Outcome`2.Filter(System.Func{`0,System.Threading.Tasks.Task{System.Boolean}},System.Func{Lemonad.ErrorHandling.Maybe{`0},`1})
  name: Filter(Func<T, Task<Boolean>>, Func<Maybe<T>, TError>)
  href: api/Lemonad.ErrorHandling.Outcome-2.html#Lemonad_ErrorHandling_Outcome_2_Filter_System_Func__0_System_Threading_Tasks_Task_System_Boolean___System_Func_Lemonad_ErrorHandling_Maybe__0___1__
  commentId: M:Lemonad.ErrorHandling.Outcome`2.Filter(System.Func{`0,System.Threading.Tasks.Task{System.Boolean}},System.Func{Lemonad.ErrorHandling.Maybe{`0},`1})
  name.vb: Filter(Func(Of T, Task(Of Boolean)), Func(Of Maybe(Of T), TError))
  fullName: Lemonad.ErrorHandling.Outcome<T, TError>.Filter(System.Func<T, System.Threading.Tasks.Task<System.Boolean>>, System.Func<Lemonad.ErrorHandling.Maybe<T>, TError>)
  fullName.vb: Lemonad.ErrorHandling.Outcome(Of T, TError).Filter(System.Func(Of T, System.Threading.Tasks.Task(Of System.Boolean)), System.Func(Of Lemonad.ErrorHandling.Maybe(Of T), TError))
  nameWithType: Outcome<T, TError>.Filter(Func<T, Task<Boolean>>, Func<Maybe<T>, TError>)
  nameWithType.vb: Outcome(Of T, TError).Filter(Func(Of T, Task(Of Boolean)), Func(Of Maybe(Of T), TError))
- uid: Lemonad.ErrorHandling.Outcome`2.Filter*
  name: Filter
  href: api/Lemonad.ErrorHandling.Outcome-2.html#Lemonad_ErrorHandling_Outcome_2_Filter_
  commentId: Overload:Lemonad.ErrorHandling.Outcome`2.Filter
  isSpec: "True"
  fullName: Lemonad.ErrorHandling.Outcome<T, TError>.Filter
  fullName.vb: Lemonad.ErrorHandling.Outcome(Of T, TError).Filter
  nameWithType: Outcome<T, TError>.Filter
  nameWithType.vb: Outcome(Of T, TError).Filter
- uid: Lemonad.ErrorHandling.Outcome`2.FlatMap*
  name: FlatMap
  href: api/Lemonad.ErrorHandling.Outcome-2.html#Lemonad_ErrorHandling_Outcome_2_FlatMap_
  commentId: Overload:Lemonad.ErrorHandling.Outcome`2.FlatMap
  isSpec: "True"
  fullName: Lemonad.ErrorHandling.Outcome<T, TError>.FlatMap
  fullName.vb: Lemonad.ErrorHandling.Outcome(Of T, TError).FlatMap
  nameWithType: Outcome<T, TError>.FlatMap
  nameWithType.vb: Outcome(Of T, TError).FlatMap
- uid: Lemonad.ErrorHandling.Outcome`2.FlatMap``1(System.Func{`0,Lemonad.ErrorHandling.Outcome{``0,`1}})
  name: FlatMap<TResult>(Func<T, Outcome<TResult, TError>>)
  href: api/Lemonad.ErrorHandling.Outcome-2.html#Lemonad_ErrorHandling_Outcome_2_FlatMap__1_System_Func__0_Lemonad_ErrorHandling_Outcome___0__1___
  commentId: M:Lemonad.ErrorHandling.Outcome`2.FlatMap``1(System.Func{`0,Lemonad.ErrorHandling.Outcome{``0,`1}})
  name.vb: FlatMap(Of TResult)(Func(Of T, Outcome(Of TResult, TError)))
  fullName: Lemonad.ErrorHandling.Outcome<T, TError>.FlatMap<TResult>(System.Func<T, Lemonad.ErrorHandling.Outcome<TResult, TError>>)
  fullName.vb: Lemonad.ErrorHandling.Outcome(Of T, TError).FlatMap(Of TResult)(System.Func(Of T, Lemonad.ErrorHandling.Outcome(Of TResult, TError)))
  nameWithType: Outcome<T, TError>.FlatMap<TResult>(Func<T, Outcome<TResult, TError>>)
  nameWithType.vb: Outcome(Of T, TError).FlatMap(Of TResult)(Func(Of T, Outcome(Of TResult, TError)))
- uid: Lemonad.ErrorHandling.Outcome`2.FlatMap``1(System.Func{`0,Lemonad.ErrorHandling.Result{``0,`1}})
  name: FlatMap<TResult>(Func<T, Result<TResult, TError>>)
  href: api/Lemonad.ErrorHandling.Outcome-2.html#Lemonad_ErrorHandling_Outcome_2_FlatMap__1_System_Func__0_Lemonad_ErrorHandling_Result___0__1___
  commentId: M:Lemonad.ErrorHandling.Outcome`2.FlatMap``1(System.Func{`0,Lemonad.ErrorHandling.Result{``0,`1}})
  name.vb: FlatMap(Of TResult)(Func(Of T, Result(Of TResult, TError)))
  fullName: Lemonad.ErrorHandling.Outcome<T, TError>.FlatMap<TResult>(System.Func<T, Lemonad.ErrorHandling.Result<TResult, TError>>)
  fullName.vb: Lemonad.ErrorHandling.Outcome(Of T, TError).FlatMap(Of TResult)(System.Func(Of T, Lemonad.ErrorHandling.Result(Of TResult, TError)))
  nameWithType: Outcome<T, TError>.FlatMap<TResult>(Func<T, Result<TResult, TError>>)
  nameWithType.vb: Outcome(Of T, TError).FlatMap(Of TResult)(Func(Of T, Result(Of TResult, TError)))
- uid: Lemonad.ErrorHandling.Outcome`2.FlatMap``1(System.Func{`0,System.Threading.Tasks.Task{Lemonad.ErrorHandling.Result{``0,`1}}})
  name: FlatMap<TResult>(Func<T, Task<Result<TResult, TError>>>)
  href: api/Lemonad.ErrorHandling.Outcome-2.html#Lemonad_ErrorHandling_Outcome_2_FlatMap__1_System_Func__0_System_Threading_Tasks_Task_Lemonad_ErrorHandling_Result___0__1____
  commentId: M:Lemonad.ErrorHandling.Outcome`2.FlatMap``1(System.Func{`0,System.Threading.Tasks.Task{Lemonad.ErrorHandling.Result{``0,`1}}})
  name.vb: FlatMap(Of TResult)(Func(Of T, Task(Of Result(Of TResult, TError))))
  fullName: Lemonad.ErrorHandling.Outcome<T, TError>.FlatMap<TResult>(System.Func<T, System.Threading.Tasks.Task<Lemonad.ErrorHandling.Result<TResult, TError>>>)
  fullName.vb: Lemonad.ErrorHandling.Outcome(Of T, TError).FlatMap(Of TResult)(System.Func(Of T, System.Threading.Tasks.Task(Of Lemonad.ErrorHandling.Result(Of TResult, TError))))
  nameWithType: Outcome<T, TError>.FlatMap<TResult>(Func<T, Task<Result<TResult, TError>>>)
  nameWithType.vb: Outcome(Of T, TError).FlatMap(Of TResult)(Func(Of T, Task(Of Result(Of TResult, TError))))
- uid: Lemonad.ErrorHandling.Outcome`2.FlatMap``2(System.Func{`0,Lemonad.ErrorHandling.Outcome{``0,``1}},System.Func{``1,`1})
  name: FlatMap<TResult, TErrorResult>(Func<T, Outcome<TResult, TErrorResult>>, Func<TErrorResult, TError>)
  href: api/Lemonad.ErrorHandling.Outcome-2.html#Lemonad_ErrorHandling_Outcome_2_FlatMap__2_System_Func__0_Lemonad_ErrorHandling_Outcome___0___1___System_Func___1__1__
  commentId: M:Lemonad.ErrorHandling.Outcome`2.FlatMap``2(System.Func{`0,Lemonad.ErrorHandling.Outcome{``0,``1}},System.Func{``1,`1})
  name.vb: FlatMap(Of TResult, TErrorResult)(Func(Of T, Outcome(Of TResult, TErrorResult)), Func(Of TErrorResult, TError))
  fullName: Lemonad.ErrorHandling.Outcome<T, TError>.FlatMap<TResult, TErrorResult>(System.Func<T, Lemonad.ErrorHandling.Outcome<TResult, TErrorResult>>, System.Func<TErrorResult, TError>)
  fullName.vb: Lemonad.ErrorHandling.Outcome(Of T, TError).FlatMap(Of TResult, TErrorResult)(System.Func(Of T, Lemonad.ErrorHandling.Outcome(Of TResult, TErrorResult)), System.Func(Of TErrorResult, TError))
  nameWithType: Outcome<T, TError>.FlatMap<TResult, TErrorResult>(Func<T, Outcome<TResult, TErrorResult>>, Func<TErrorResult, TError>)
  nameWithType.vb: Outcome(Of T, TError).FlatMap(Of TResult, TErrorResult)(Func(Of T, Outcome(Of TResult, TErrorResult)), Func(Of TErrorResult, TError))
- uid: Lemonad.ErrorHandling.Outcome`2.FlatMap``2(System.Func{`0,Lemonad.ErrorHandling.Outcome{``0,`1}},System.Func{`0,``0,``1})
  name: FlatMap<TSelector, TResult>(Func<T, Outcome<TSelector, TError>>, Func<T, TSelector, TResult>)
  href: api/Lemonad.ErrorHandling.Outcome-2.html#Lemonad_ErrorHandling_Outcome_2_FlatMap__2_System_Func__0_Lemonad_ErrorHandling_Outcome___0__1___System_Func__0___0___1__
  commentId: M:Lemonad.ErrorHandling.Outcome`2.FlatMap``2(System.Func{`0,Lemonad.ErrorHandling.Outcome{``0,`1}},System.Func{`0,``0,``1})
  name.vb: FlatMap(Of TSelector, TResult)(Func(Of T, Outcome(Of TSelector, TError)), Func(Of T, TSelector, TResult))
  fullName: Lemonad.ErrorHandling.Outcome<T, TError>.FlatMap<TSelector, TResult>(System.Func<T, Lemonad.ErrorHandling.Outcome<TSelector, TError>>, System.Func<T, TSelector, TResult>)
  fullName.vb: Lemonad.ErrorHandling.Outcome(Of T, TError).FlatMap(Of TSelector, TResult)(System.Func(Of T, Lemonad.ErrorHandling.Outcome(Of TSelector, TError)), System.Func(Of T, TSelector, TResult))
  nameWithType: Outcome<T, TError>.FlatMap<TSelector, TResult>(Func<T, Outcome<TSelector, TError>>, Func<T, TSelector, TResult>)
  nameWithType.vb: Outcome(Of T, TError).FlatMap(Of TSelector, TResult)(Func(Of T, Outcome(Of TSelector, TError)), Func(Of T, TSelector, TResult))
- uid: Lemonad.ErrorHandling.Outcome`2.FlatMap``2(System.Func{`0,Lemonad.ErrorHandling.Result{``0,``1}},System.Func{``1,`1})
  name: FlatMap<TResult, TErrorResult>(Func<T, Result<TResult, TErrorResult>>, Func<TErrorResult, TError>)
  href: api/Lemonad.ErrorHandling.Outcome-2.html#Lemonad_ErrorHandling_Outcome_2_FlatMap__2_System_Func__0_Lemonad_ErrorHandling_Result___0___1___System_Func___1__1__
  commentId: M:Lemonad.ErrorHandling.Outcome`2.FlatMap``2(System.Func{`0,Lemonad.ErrorHandling.Result{``0,``1}},System.Func{``1,`1})
  name.vb: FlatMap(Of TResult, TErrorResult)(Func(Of T, Result(Of TResult, TErrorResult)), Func(Of TErrorResult, TError))
  fullName: Lemonad.ErrorHandling.Outcome<T, TError>.FlatMap<TResult, TErrorResult>(System.Func<T, Lemonad.ErrorHandling.Result<TResult, TErrorResult>>, System.Func<TErrorResult, TError>)
  fullName.vb: Lemonad.ErrorHandling.Outcome(Of T, TError).FlatMap(Of TResult, TErrorResult)(System.Func(Of T, Lemonad.ErrorHandling.Result(Of TResult, TErrorResult)), System.Func(Of TErrorResult, TError))
  nameWithType: Outcome<T, TError>.FlatMap<TResult, TErrorResult>(Func<T, Result<TResult, TErrorResult>>, Func<TErrorResult, TError>)
  nameWithType.vb: Outcome(Of T, TError).FlatMap(Of TResult, TErrorResult)(Func(Of T, Result(Of TResult, TErrorResult)), Func(Of TErrorResult, TError))
- uid: Lemonad.ErrorHandling.Outcome`2.FlatMap``2(System.Func{`0,Lemonad.ErrorHandling.Result{``0,`1}},System.Func{`0,``0,``1})
  name: FlatMap<TSelector, TResult>(Func<T, Result<TSelector, TError>>, Func<T, TSelector, TResult>)
  href: api/Lemonad.ErrorHandling.Outcome-2.html#Lemonad_ErrorHandling_Outcome_2_FlatMap__2_System_Func__0_Lemonad_ErrorHandling_Result___0__1___System_Func__0___0___1__
  commentId: M:Lemonad.ErrorHandling.Outcome`2.FlatMap``2(System.Func{`0,Lemonad.ErrorHandling.Result{``0,`1}},System.Func{`0,``0,``1})
  name.vb: FlatMap(Of TSelector, TResult)(Func(Of T, Result(Of TSelector, TError)), Func(Of T, TSelector, TResult))
  fullName: Lemonad.ErrorHandling.Outcome<T, TError>.FlatMap<TSelector, TResult>(System.Func<T, Lemonad.ErrorHandling.Result<TSelector, TError>>, System.Func<T, TSelector, TResult>)
  fullName.vb: Lemonad.ErrorHandling.Outcome(Of T, TError).FlatMap(Of TSelector, TResult)(System.Func(Of T, Lemonad.ErrorHandling.Result(Of TSelector, TError)), System.Func(Of T, TSelector, TResult))
  nameWithType: Outcome<T, TError>.FlatMap<TSelector, TResult>(Func<T, Result<TSelector, TError>>, Func<T, TSelector, TResult>)
  nameWithType.vb: Outcome(Of T, TError).FlatMap(Of TSelector, TResult)(Func(Of T, Result(Of TSelector, TError)), Func(Of T, TSelector, TResult))
- uid: Lemonad.ErrorHandling.Outcome`2.FlatMap``2(System.Func{`0,System.Threading.Tasks.Task{Lemonad.ErrorHandling.Result{``0,``1}}},System.Func{``1,`1})
  name: FlatMap<TResult, TErrorResult>(Func<T, Task<Result<TResult, TErrorResult>>>, Func<TErrorResult, TError>)
  href: api/Lemonad.ErrorHandling.Outcome-2.html#Lemonad_ErrorHandling_Outcome_2_FlatMap__2_System_Func__0_System_Threading_Tasks_Task_Lemonad_ErrorHandling_Result___0___1____System_Func___1__1__
  commentId: M:Lemonad.ErrorHandling.Outcome`2.FlatMap``2(System.Func{`0,System.Threading.Tasks.Task{Lemonad.ErrorHandling.Result{``0,``1}}},System.Func{``1,`1})
  name.vb: FlatMap(Of TResult, TErrorResult)(Func(Of T, Task(Of Result(Of TResult, TErrorResult))), Func(Of TErrorResult, TError))
  fullName: Lemonad.ErrorHandling.Outcome<T, TError>.FlatMap<TResult, TErrorResult>(System.Func<T, System.Threading.Tasks.Task<Lemonad.ErrorHandling.Result<TResult, TErrorResult>>>, System.Func<TErrorResult, TError>)
  fullName.vb: Lemonad.ErrorHandling.Outcome(Of T, TError).FlatMap(Of TResult, TErrorResult)(System.Func(Of T, System.Threading.Tasks.Task(Of Lemonad.ErrorHandling.Result(Of TResult, TErrorResult))), System.Func(Of TErrorResult, TError))
  nameWithType: Outcome<T, TError>.FlatMap<TResult, TErrorResult>(Func<T, Task<Result<TResult, TErrorResult>>>, Func<TErrorResult, TError>)
  nameWithType.vb: Outcome(Of T, TError).FlatMap(Of TResult, TErrorResult)(Func(Of T, Task(Of Result(Of TResult, TErrorResult))), Func(Of TErrorResult, TError))
- uid: Lemonad.ErrorHandling.Outcome`2.FlatMap``2(System.Func{`0,System.Threading.Tasks.Task{Lemonad.ErrorHandling.Result{``0,`1}}},System.Func{`0,``0,``1})
  name: FlatMap<TSelector, TResult>(Func<T, Task<Result<TSelector, TError>>>, Func<T, TSelector, TResult>)
  href: api/Lemonad.ErrorHandling.Outcome-2.html#Lemonad_ErrorHandling_Outcome_2_FlatMap__2_System_Func__0_System_Threading_Tasks_Task_Lemonad_ErrorHandling_Result___0__1____System_Func__0___0___1__
  commentId: M:Lemonad.ErrorHandling.Outcome`2.FlatMap``2(System.Func{`0,System.Threading.Tasks.Task{Lemonad.ErrorHandling.Result{``0,`1}}},System.Func{`0,``0,``1})
  name.vb: FlatMap(Of TSelector, TResult)(Func(Of T, Task(Of Result(Of TSelector, TError))), Func(Of T, TSelector, TResult))
  fullName: Lemonad.ErrorHandling.Outcome<T, TError>.FlatMap<TSelector, TResult>(System.Func<T, System.Threading.Tasks.Task<Lemonad.ErrorHandling.Result<TSelector, TError>>>, System.Func<T, TSelector, TResult>)
  fullName.vb: Lemonad.ErrorHandling.Outcome(Of T, TError).FlatMap(Of TSelector, TResult)(System.Func(Of T, System.Threading.Tasks.Task(Of Lemonad.ErrorHandling.Result(Of TSelector, TError))), System.Func(Of T, TSelector, TResult))
  nameWithType: Outcome<T, TError>.FlatMap<TSelector, TResult>(Func<T, Task<Result<TSelector, TError>>>, Func<T, TSelector, TResult>)
  nameWithType.vb: Outcome(Of T, TError).FlatMap(Of TSelector, TResult)(Func(Of T, Task(Of Result(Of TSelector, TError))), Func(Of T, TSelector, TResult))
- uid: Lemonad.ErrorHandling.Outcome`2.FlatMap``3(System.Func{`0,Lemonad.ErrorHandling.Outcome{``0,``2}},System.Func{`0,``0,``1},System.Func{``2,`1})
  name: FlatMap<TFlatMap, TResult, TErrorResult>(Func<T, Outcome<TFlatMap, TErrorResult>>, Func<T, TFlatMap, TResult>, Func<TErrorResult, TError>)
  href: api/Lemonad.ErrorHandling.Outcome-2.html#Lemonad_ErrorHandling_Outcome_2_FlatMap__3_System_Func__0_Lemonad_ErrorHandling_Outcome___0___2___System_Func__0___0___1__System_Func___2__1__
  commentId: M:Lemonad.ErrorHandling.Outcome`2.FlatMap``3(System.Func{`0,Lemonad.ErrorHandling.Outcome{``0,``2}},System.Func{`0,``0,``1},System.Func{``2,`1})
  name.vb: FlatMap(Of TFlatMap, TResult, TErrorResult)(Func(Of T, Outcome(Of TFlatMap, TErrorResult)), Func(Of T, TFlatMap, TResult), Func(Of TErrorResult, TError))
  fullName: Lemonad.ErrorHandling.Outcome<T, TError>.FlatMap<TFlatMap, TResult, TErrorResult>(System.Func<T, Lemonad.ErrorHandling.Outcome<TFlatMap, TErrorResult>>, System.Func<T, TFlatMap, TResult>, System.Func<TErrorResult, TError>)
  fullName.vb: Lemonad.ErrorHandling.Outcome(Of T, TError).FlatMap(Of TFlatMap, TResult, TErrorResult)(System.Func(Of T, Lemonad.ErrorHandling.Outcome(Of TFlatMap, TErrorResult)), System.Func(Of T, TFlatMap, TResult), System.Func(Of TErrorResult, TError))
  nameWithType: Outcome<T, TError>.FlatMap<TFlatMap, TResult, TErrorResult>(Func<T, Outcome<TFlatMap, TErrorResult>>, Func<T, TFlatMap, TResult>, Func<TErrorResult, TError>)
  nameWithType.vb: Outcome(Of T, TError).FlatMap(Of TFlatMap, TResult, TErrorResult)(Func(Of T, Outcome(Of TFlatMap, TErrorResult)), Func(Of T, TFlatMap, TResult), Func(Of TErrorResult, TError))
- uid: Lemonad.ErrorHandling.Outcome`2.FlatMap``3(System.Func{`0,Lemonad.ErrorHandling.Result{``0,``2}},System.Func{`0,``0,``1},System.Func{``2,`1})
  name: FlatMap<TFlatMap, TResult, TErrorResult>(Func<T, Result<TFlatMap, TErrorResult>>, Func<T, TFlatMap, TResult>, Func<TErrorResult, TError>)
  href: api/Lemonad.ErrorHandling.Outcome-2.html#Lemonad_ErrorHandling_Outcome_2_FlatMap__3_System_Func__0_Lemonad_ErrorHandling_Result___0___2___System_Func__0___0___1__System_Func___2__1__
  commentId: M:Lemonad.ErrorHandling.Outcome`2.FlatMap``3(System.Func{`0,Lemonad.ErrorHandling.Result{``0,``2}},System.Func{`0,``0,``1},System.Func{``2,`1})
  name.vb: FlatMap(Of TFlatMap, TResult, TErrorResult)(Func(Of T, Result(Of TFlatMap, TErrorResult)), Func(Of T, TFlatMap, TResult), Func(Of TErrorResult, TError))
  fullName: Lemonad.ErrorHandling.Outcome<T, TError>.FlatMap<TFlatMap, TResult, TErrorResult>(System.Func<T, Lemonad.ErrorHandling.Result<TFlatMap, TErrorResult>>, System.Func<T, TFlatMap, TResult>, System.Func<TErrorResult, TError>)
  fullName.vb: Lemonad.ErrorHandling.Outcome(Of T, TError).FlatMap(Of TFlatMap, TResult, TErrorResult)(System.Func(Of T, Lemonad.ErrorHandling.Result(Of TFlatMap, TErrorResult)), System.Func(Of T, TFlatMap, TResult), System.Func(Of TErrorResult, TError))
  nameWithType: Outcome<T, TError>.FlatMap<TFlatMap, TResult, TErrorResult>(Func<T, Result<TFlatMap, TErrorResult>>, Func<T, TFlatMap, TResult>, Func<TErrorResult, TError>)
  nameWithType.vb: Outcome(Of T, TError).FlatMap(Of TFlatMap, TResult, TErrorResult)(Func(Of T, Result(Of TFlatMap, TErrorResult)), Func(Of T, TFlatMap, TResult), Func(Of TErrorResult, TError))
- uid: Lemonad.ErrorHandling.Outcome`2.FlatMap``3(System.Func{`0,System.Threading.Tasks.Task{Lemonad.ErrorHandling.Result{``0,``2}}},System.Func{`0,``0,``1},System.Func{``2,`1})
  name: FlatMap<TFlatMap, TResult, TErrorResult>(Func<T, Task<Result<TFlatMap, TErrorResult>>>, Func<T, TFlatMap, TResult>, Func<TErrorResult, TError>)
  href: api/Lemonad.ErrorHandling.Outcome-2.html#Lemonad_ErrorHandling_Outcome_2_FlatMap__3_System_Func__0_System_Threading_Tasks_Task_Lemonad_ErrorHandling_Result___0___2____System_Func__0___0___1__System_Func___2__1__
  commentId: M:Lemonad.ErrorHandling.Outcome`2.FlatMap``3(System.Func{`0,System.Threading.Tasks.Task{Lemonad.ErrorHandling.Result{``0,``2}}},System.Func{`0,``0,``1},System.Func{``2,`1})
  name.vb: FlatMap(Of TFlatMap, TResult, TErrorResult)(Func(Of T, Task(Of Result(Of TFlatMap, TErrorResult))), Func(Of T, TFlatMap, TResult), Func(Of TErrorResult, TError))
  fullName: Lemonad.ErrorHandling.Outcome<T, TError>.FlatMap<TFlatMap, TResult, TErrorResult>(System.Func<T, System.Threading.Tasks.Task<Lemonad.ErrorHandling.Result<TFlatMap, TErrorResult>>>, System.Func<T, TFlatMap, TResult>, System.Func<TErrorResult, TError>)
  fullName.vb: Lemonad.ErrorHandling.Outcome(Of T, TError).FlatMap(Of TFlatMap, TResult, TErrorResult)(System.Func(Of T, System.Threading.Tasks.Task(Of Lemonad.ErrorHandling.Result(Of TFlatMap, TErrorResult))), System.Func(Of T, TFlatMap, TResult), System.Func(Of TErrorResult, TError))
  nameWithType: Outcome<T, TError>.FlatMap<TFlatMap, TResult, TErrorResult>(Func<T, Task<Result<TFlatMap, TErrorResult>>>, Func<T, TFlatMap, TResult>, Func<TErrorResult, TError>)
  nameWithType.vb: Outcome(Of T, TError).FlatMap(Of TFlatMap, TResult, TErrorResult)(Func(Of T, Task(Of Result(Of TFlatMap, TErrorResult))), Func(Of T, TFlatMap, TResult), Func(Of TErrorResult, TError))
- uid: Lemonad.ErrorHandling.Outcome`2.Flatten*
  name: Flatten
  href: api/Lemonad.ErrorHandling.Outcome-2.html#Lemonad_ErrorHandling_Outcome_2_Flatten_
  commentId: Overload:Lemonad.ErrorHandling.Outcome`2.Flatten
  isSpec: "True"
  fullName: Lemonad.ErrorHandling.Outcome<T, TError>.Flatten
  fullName.vb: Lemonad.ErrorHandling.Outcome(Of T, TError).Flatten
  nameWithType: Outcome<T, TError>.Flatten
  nameWithType.vb: Outcome(Of T, TError).Flatten
- uid: Lemonad.ErrorHandling.Outcome`2.Flatten``1(System.Func{`0,Lemonad.ErrorHandling.Outcome{``0,`1}})
  name: Flatten<TResult>(Func<T, Outcome<TResult, TError>>)
  href: api/Lemonad.ErrorHandling.Outcome-2.html#Lemonad_ErrorHandling_Outcome_2_Flatten__1_System_Func__0_Lemonad_ErrorHandling_Outcome___0__1___
  commentId: M:Lemonad.ErrorHandling.Outcome`2.Flatten``1(System.Func{`0,Lemonad.ErrorHandling.Outcome{``0,`1}})
  name.vb: Flatten(Of TResult)(Func(Of T, Outcome(Of TResult, TError)))
  fullName: Lemonad.ErrorHandling.Outcome<T, TError>.Flatten<TResult>(System.Func<T, Lemonad.ErrorHandling.Outcome<TResult, TError>>)
  fullName.vb: Lemonad.ErrorHandling.Outcome(Of T, TError).Flatten(Of TResult)(System.Func(Of T, Lemonad.ErrorHandling.Outcome(Of TResult, TError)))
  nameWithType: Outcome<T, TError>.Flatten<TResult>(Func<T, Outcome<TResult, TError>>)
  nameWithType.vb: Outcome(Of T, TError).Flatten(Of TResult)(Func(Of T, Outcome(Of TResult, TError)))
- uid: Lemonad.ErrorHandling.Outcome`2.Flatten``1(System.Func{`0,Lemonad.ErrorHandling.Result{``0,`1}})
  name: Flatten<TResult>(Func<T, Result<TResult, TError>>)
  href: api/Lemonad.ErrorHandling.Outcome-2.html#Lemonad_ErrorHandling_Outcome_2_Flatten__1_System_Func__0_Lemonad_ErrorHandling_Result___0__1___
  commentId: M:Lemonad.ErrorHandling.Outcome`2.Flatten``1(System.Func{`0,Lemonad.ErrorHandling.Result{``0,`1}})
  name.vb: Flatten(Of TResult)(Func(Of T, Result(Of TResult, TError)))
  fullName: Lemonad.ErrorHandling.Outcome<T, TError>.Flatten<TResult>(System.Func<T, Lemonad.ErrorHandling.Result<TResult, TError>>)
  fullName.vb: Lemonad.ErrorHandling.Outcome(Of T, TError).Flatten(Of TResult)(System.Func(Of T, Lemonad.ErrorHandling.Result(Of TResult, TError)))
  nameWithType: Outcome<T, TError>.Flatten<TResult>(Func<T, Result<TResult, TError>>)
  nameWithType.vb: Outcome(Of T, TError).Flatten(Of TResult)(Func(Of T, Result(Of TResult, TError)))
- uid: Lemonad.ErrorHandling.Outcome`2.Flatten``1(System.Func{`0,System.Threading.Tasks.Task{Lemonad.ErrorHandling.Result{``0,`1}}})
  name: Flatten<TResult>(Func<T, Task<Result<TResult, TError>>>)
  href: api/Lemonad.ErrorHandling.Outcome-2.html#Lemonad_ErrorHandling_Outcome_2_Flatten__1_System_Func__0_System_Threading_Tasks_Task_Lemonad_ErrorHandling_Result___0__1____
  commentId: M:Lemonad.ErrorHandling.Outcome`2.Flatten``1(System.Func{`0,System.Threading.Tasks.Task{Lemonad.ErrorHandling.Result{``0,`1}}})
  name.vb: Flatten(Of TResult)(Func(Of T, Task(Of Result(Of TResult, TError))))
  fullName: Lemonad.ErrorHandling.Outcome<T, TError>.Flatten<TResult>(System.Func<T, System.Threading.Tasks.Task<Lemonad.ErrorHandling.Result<TResult, TError>>>)
  fullName.vb: Lemonad.ErrorHandling.Outcome(Of T, TError).Flatten(Of TResult)(System.Func(Of T, System.Threading.Tasks.Task(Of Lemonad.ErrorHandling.Result(Of TResult, TError))))
  nameWithType: Outcome<T, TError>.Flatten<TResult>(Func<T, Task<Result<TResult, TError>>>)
  nameWithType.vb: Outcome(Of T, TError).Flatten(Of TResult)(Func(Of T, Task(Of Result(Of TResult, TError))))
- uid: Lemonad.ErrorHandling.Outcome`2.Flatten``2(System.Func{`0,Lemonad.ErrorHandling.Outcome{``0,``1}},System.Func{``1,`1})
  name: Flatten<TResult, TErrorResult>(Func<T, Outcome<TResult, TErrorResult>>, Func<TErrorResult, TError>)
  href: api/Lemonad.ErrorHandling.Outcome-2.html#Lemonad_ErrorHandling_Outcome_2_Flatten__2_System_Func__0_Lemonad_ErrorHandling_Outcome___0___1___System_Func___1__1__
  commentId: M:Lemonad.ErrorHandling.Outcome`2.Flatten``2(System.Func{`0,Lemonad.ErrorHandling.Outcome{``0,``1}},System.Func{``1,`1})
  name.vb: Flatten(Of TResult, TErrorResult)(Func(Of T, Outcome(Of TResult, TErrorResult)), Func(Of TErrorResult, TError))
  fullName: Lemonad.ErrorHandling.Outcome<T, TError>.Flatten<TResult, TErrorResult>(System.Func<T, Lemonad.ErrorHandling.Outcome<TResult, TErrorResult>>, System.Func<TErrorResult, TError>)
  fullName.vb: Lemonad.ErrorHandling.Outcome(Of T, TError).Flatten(Of TResult, TErrorResult)(System.Func(Of T, Lemonad.ErrorHandling.Outcome(Of TResult, TErrorResult)), System.Func(Of TErrorResult, TError))
  nameWithType: Outcome<T, TError>.Flatten<TResult, TErrorResult>(Func<T, Outcome<TResult, TErrorResult>>, Func<TErrorResult, TError>)
  nameWithType.vb: Outcome(Of T, TError).Flatten(Of TResult, TErrorResult)(Func(Of T, Outcome(Of TResult, TErrorResult)), Func(Of TErrorResult, TError))
- uid: Lemonad.ErrorHandling.Outcome`2.Flatten``2(System.Func{`0,Lemonad.ErrorHandling.Result{``0,``1}},System.Func{``1,`1})
  name: Flatten<TResult, TErrorResult>(Func<T, Result<TResult, TErrorResult>>, Func<TErrorResult, TError>)
  href: api/Lemonad.ErrorHandling.Outcome-2.html#Lemonad_ErrorHandling_Outcome_2_Flatten__2_System_Func__0_Lemonad_ErrorHandling_Result___0___1___System_Func___1__1__
  commentId: M:Lemonad.ErrorHandling.Outcome`2.Flatten``2(System.Func{`0,Lemonad.ErrorHandling.Result{``0,``1}},System.Func{``1,`1})
  name.vb: Flatten(Of TResult, TErrorResult)(Func(Of T, Result(Of TResult, TErrorResult)), Func(Of TErrorResult, TError))
  fullName: Lemonad.ErrorHandling.Outcome<T, TError>.Flatten<TResult, TErrorResult>(System.Func<T, Lemonad.ErrorHandling.Result<TResult, TErrorResult>>, System.Func<TErrorResult, TError>)
  fullName.vb: Lemonad.ErrorHandling.Outcome(Of T, TError).Flatten(Of TResult, TErrorResult)(System.Func(Of T, Lemonad.ErrorHandling.Result(Of TResult, TErrorResult)), System.Func(Of TErrorResult, TError))
  nameWithType: Outcome<T, TError>.Flatten<TResult, TErrorResult>(Func<T, Result<TResult, TErrorResult>>, Func<TErrorResult, TError>)
  nameWithType.vb: Outcome(Of T, TError).Flatten(Of TResult, TErrorResult)(Func(Of T, Result(Of TResult, TErrorResult)), Func(Of TErrorResult, TError))
- uid: Lemonad.ErrorHandling.Outcome`2.Flatten``2(System.Func{`0,System.Threading.Tasks.Task{Lemonad.ErrorHandling.Result{``0,``1}}},System.Func{``1,`1})
  name: Flatten<TResult, TErrorResult>(Func<T, Task<Result<TResult, TErrorResult>>>, Func<TErrorResult, TError>)
  href: api/Lemonad.ErrorHandling.Outcome-2.html#Lemonad_ErrorHandling_Outcome_2_Flatten__2_System_Func__0_System_Threading_Tasks_Task_Lemonad_ErrorHandling_Result___0___1____System_Func___1__1__
  commentId: M:Lemonad.ErrorHandling.Outcome`2.Flatten``2(System.Func{`0,System.Threading.Tasks.Task{Lemonad.ErrorHandling.Result{``0,``1}}},System.Func{``1,`1})
  name.vb: Flatten(Of TResult, TErrorResult)(Func(Of T, Task(Of Result(Of TResult, TErrorResult))), Func(Of TErrorResult, TError))
  fullName: Lemonad.ErrorHandling.Outcome<T, TError>.Flatten<TResult, TErrorResult>(System.Func<T, System.Threading.Tasks.Task<Lemonad.ErrorHandling.Result<TResult, TErrorResult>>>, System.Func<TErrorResult, TError>)
  fullName.vb: Lemonad.ErrorHandling.Outcome(Of T, TError).Flatten(Of TResult, TErrorResult)(System.Func(Of T, System.Threading.Tasks.Task(Of Lemonad.ErrorHandling.Result(Of TResult, TErrorResult))), System.Func(Of TErrorResult, TError))
  nameWithType: Outcome<T, TError>.Flatten<TResult, TErrorResult>(Func<T, Task<Result<TResult, TErrorResult>>>, Func<TErrorResult, TError>)
  nameWithType.vb: Outcome(Of T, TError).Flatten(Of TResult, TErrorResult)(Func(Of T, Task(Of Result(Of TResult, TErrorResult))), Func(Of TErrorResult, TError))
- uid: Lemonad.ErrorHandling.Outcome`2.FullCast*
  name: FullCast
  href: api/Lemonad.ErrorHandling.Outcome-2.html#Lemonad_ErrorHandling_Outcome_2_FullCast_
  commentId: Overload:Lemonad.ErrorHandling.Outcome`2.FullCast
  isSpec: "True"
  fullName: Lemonad.ErrorHandling.Outcome<T, TError>.FullCast
  fullName.vb: Lemonad.ErrorHandling.Outcome(Of T, TError).FullCast
  nameWithType: Outcome<T, TError>.FullCast
  nameWithType.vb: Outcome(Of T, TError).FullCast
- uid: Lemonad.ErrorHandling.Outcome`2.FullCast``1
  name: FullCast<TResult>()
  href: api/Lemonad.ErrorHandling.Outcome-2.html#Lemonad_ErrorHandling_Outcome_2_FullCast__1
  commentId: M:Lemonad.ErrorHandling.Outcome`2.FullCast``1
  name.vb: FullCast(Of TResult)()
  fullName: Lemonad.ErrorHandling.Outcome<T, TError>.FullCast<TResult>()
  fullName.vb: Lemonad.ErrorHandling.Outcome(Of T, TError).FullCast(Of TResult)()
  nameWithType: Outcome<T, TError>.FullCast<TResult>()
  nameWithType.vb: Outcome(Of T, TError).FullCast(Of TResult)()
- uid: Lemonad.ErrorHandling.Outcome`2.FullCast``2
  name: FullCast<TResult, TErrorResult>()
  href: api/Lemonad.ErrorHandling.Outcome-2.html#Lemonad_ErrorHandling_Outcome_2_FullCast__2
  commentId: M:Lemonad.ErrorHandling.Outcome`2.FullCast``2
  name.vb: FullCast(Of TResult, TErrorResult)()
  fullName: Lemonad.ErrorHandling.Outcome<T, TError>.FullCast<TResult, TErrorResult>()
  fullName.vb: Lemonad.ErrorHandling.Outcome(Of T, TError).FullCast(Of TResult, TErrorResult)()
  nameWithType: Outcome<T, TError>.FullCast<TResult, TErrorResult>()
  nameWithType.vb: Outcome(Of T, TError).FullCast(Of TResult, TErrorResult)()
- uid: Lemonad.ErrorHandling.Outcome`2.FullFlatMap*
  name: FullFlatMap
  href: api/Lemonad.ErrorHandling.Outcome-2.html#Lemonad_ErrorHandling_Outcome_2_FullFlatMap_
  commentId: Overload:Lemonad.ErrorHandling.Outcome`2.FullFlatMap
  isSpec: "True"
  fullName: Lemonad.ErrorHandling.Outcome<T, TError>.FullFlatMap
  fullName.vb: Lemonad.ErrorHandling.Outcome(Of T, TError).FullFlatMap
  nameWithType: Outcome<T, TError>.FullFlatMap
  nameWithType.vb: Outcome(Of T, TError).FullFlatMap
- uid: Lemonad.ErrorHandling.Outcome`2.FullFlatMap``2(System.Func{`0,Lemonad.ErrorHandling.Outcome{``0,``1}},System.Func{`1,``1})
  name: FullFlatMap<TResult, TErrorResult>(Func<T, Outcome<TResult, TErrorResult>>, Func<TError, TErrorResult>)
  href: api/Lemonad.ErrorHandling.Outcome-2.html#Lemonad_ErrorHandling_Outcome_2_FullFlatMap__2_System_Func__0_Lemonad_ErrorHandling_Outcome___0___1___System_Func__1___1__
  commentId: M:Lemonad.ErrorHandling.Outcome`2.FullFlatMap``2(System.Func{`0,Lemonad.ErrorHandling.Outcome{``0,``1}},System.Func{`1,``1})
  name.vb: FullFlatMap(Of TResult, TErrorResult)(Func(Of T, Outcome(Of TResult, TErrorResult)), Func(Of TError, TErrorResult))
  fullName: Lemonad.ErrorHandling.Outcome<T, TError>.FullFlatMap<TResult, TErrorResult>(System.Func<T, Lemonad.ErrorHandling.Outcome<TResult, TErrorResult>>, System.Func<TError, TErrorResult>)
  fullName.vb: Lemonad.ErrorHandling.Outcome(Of T, TError).FullFlatMap(Of TResult, TErrorResult)(System.Func(Of T, Lemonad.ErrorHandling.Outcome(Of TResult, TErrorResult)), System.Func(Of TError, TErrorResult))
  nameWithType: Outcome<T, TError>.FullFlatMap<TResult, TErrorResult>(Func<T, Outcome<TResult, TErrorResult>>, Func<TError, TErrorResult>)
  nameWithType.vb: Outcome(Of T, TError).FullFlatMap(Of TResult, TErrorResult)(Func(Of T, Outcome(Of TResult, TErrorResult)), Func(Of TError, TErrorResult))
- uid: Lemonad.ErrorHandling.Outcome`2.FullFlatMap``2(System.Func{`0,Lemonad.ErrorHandling.Result{``0,``1}},System.Func{`1,``1})
  name: FullFlatMap<TResult, TErrorResult>(Func<T, Result<TResult, TErrorResult>>, Func<TError, TErrorResult>)
  href: api/Lemonad.ErrorHandling.Outcome-2.html#Lemonad_ErrorHandling_Outcome_2_FullFlatMap__2_System_Func__0_Lemonad_ErrorHandling_Result___0___1___System_Func__1___1__
  commentId: M:Lemonad.ErrorHandling.Outcome`2.FullFlatMap``2(System.Func{`0,Lemonad.ErrorHandling.Result{``0,``1}},System.Func{`1,``1})
  name.vb: FullFlatMap(Of TResult, TErrorResult)(Func(Of T, Result(Of TResult, TErrorResult)), Func(Of TError, TErrorResult))
  fullName: Lemonad.ErrorHandling.Outcome<T, TError>.FullFlatMap<TResult, TErrorResult>(System.Func<T, Lemonad.ErrorHandling.Result<TResult, TErrorResult>>, System.Func<TError, TErrorResult>)
  fullName.vb: Lemonad.ErrorHandling.Outcome(Of T, TError).FullFlatMap(Of TResult, TErrorResult)(System.Func(Of T, Lemonad.ErrorHandling.Result(Of TResult, TErrorResult)), System.Func(Of TError, TErrorResult))
  nameWithType: Outcome<T, TError>.FullFlatMap<TResult, TErrorResult>(Func<T, Result<TResult, TErrorResult>>, Func<TError, TErrorResult>)
  nameWithType.vb: Outcome(Of T, TError).FullFlatMap(Of TResult, TErrorResult)(Func(Of T, Result(Of TResult, TErrorResult)), Func(Of TError, TErrorResult))
- uid: Lemonad.ErrorHandling.Outcome`2.FullFlatMap``2(System.Func{`0,System.Threading.Tasks.Task{Lemonad.ErrorHandling.Result{``0,``1}}},System.Func{`1,``1})
  name: FullFlatMap<TResult, TErrorResult>(Func<T, Task<Result<TResult, TErrorResult>>>, Func<TError, TErrorResult>)
  href: api/Lemonad.ErrorHandling.Outcome-2.html#Lemonad_ErrorHandling_Outcome_2_FullFlatMap__2_System_Func__0_System_Threading_Tasks_Task_Lemonad_ErrorHandling_Result___0___1____System_Func__1___1__
  commentId: M:Lemonad.ErrorHandling.Outcome`2.FullFlatMap``2(System.Func{`0,System.Threading.Tasks.Task{Lemonad.ErrorHandling.Result{``0,``1}}},System.Func{`1,``1})
  name.vb: FullFlatMap(Of TResult, TErrorResult)(Func(Of T, Task(Of Result(Of TResult, TErrorResult))), Func(Of TError, TErrorResult))
  fullName: Lemonad.ErrorHandling.Outcome<T, TError>.FullFlatMap<TResult, TErrorResult>(System.Func<T, System.Threading.Tasks.Task<Lemonad.ErrorHandling.Result<TResult, TErrorResult>>>, System.Func<TError, TErrorResult>)
  fullName.vb: Lemonad.ErrorHandling.Outcome(Of T, TError).FullFlatMap(Of TResult, TErrorResult)(System.Func(Of T, System.Threading.Tasks.Task(Of Lemonad.ErrorHandling.Result(Of TResult, TErrorResult))), System.Func(Of TError, TErrorResult))
  nameWithType: Outcome<T, TError>.FullFlatMap<TResult, TErrorResult>(Func<T, Task<Result<TResult, TErrorResult>>>, Func<TError, TErrorResult>)
  nameWithType.vb: Outcome(Of T, TError).FullFlatMap(Of TResult, TErrorResult)(Func(Of T, Task(Of Result(Of TResult, TErrorResult))), Func(Of TError, TErrorResult))
- uid: Lemonad.ErrorHandling.Outcome`2.FullFlatMap``3(System.Func{`0,Lemonad.ErrorHandling.Outcome{``0,``2}},System.Func{`0,``0,``1},System.Func{`1,``2})
  name: FullFlatMap<TFlatMap, TResult, TErrorResult>(Func<T, Outcome<TFlatMap, TErrorResult>>, Func<T, TFlatMap, TResult>, Func<TError, TErrorResult>)
  href: api/Lemonad.ErrorHandling.Outcome-2.html#Lemonad_ErrorHandling_Outcome_2_FullFlatMap__3_System_Func__0_Lemonad_ErrorHandling_Outcome___0___2___System_Func__0___0___1__System_Func__1___2__
  commentId: M:Lemonad.ErrorHandling.Outcome`2.FullFlatMap``3(System.Func{`0,Lemonad.ErrorHandling.Outcome{``0,``2}},System.Func{`0,``0,``1},System.Func{`1,``2})
  name.vb: FullFlatMap(Of TFlatMap, TResult, TErrorResult)(Func(Of T, Outcome(Of TFlatMap, TErrorResult)), Func(Of T, TFlatMap, TResult), Func(Of TError, TErrorResult))
  fullName: Lemonad.ErrorHandling.Outcome<T, TError>.FullFlatMap<TFlatMap, TResult, TErrorResult>(System.Func<T, Lemonad.ErrorHandling.Outcome<TFlatMap, TErrorResult>>, System.Func<T, TFlatMap, TResult>, System.Func<TError, TErrorResult>)
  fullName.vb: Lemonad.ErrorHandling.Outcome(Of T, TError).FullFlatMap(Of TFlatMap, TResult, TErrorResult)(System.Func(Of T, Lemonad.ErrorHandling.Outcome(Of TFlatMap, TErrorResult)), System.Func(Of T, TFlatMap, TResult), System.Func(Of TError, TErrorResult))
  nameWithType: Outcome<T, TError>.FullFlatMap<TFlatMap, TResult, TErrorResult>(Func<T, Outcome<TFlatMap, TErrorResult>>, Func<T, TFlatMap, TResult>, Func<TError, TErrorResult>)
  nameWithType.vb: Outcome(Of T, TError).FullFlatMap(Of TFlatMap, TResult, TErrorResult)(Func(Of T, Outcome(Of TFlatMap, TErrorResult)), Func(Of T, TFlatMap, TResult), Func(Of TError, TErrorResult))
- uid: Lemonad.ErrorHandling.Outcome`2.FullFlatMap``3(System.Func{`0,Lemonad.ErrorHandling.Result{``0,``2}},System.Func{`0,``0,``1},System.Func{`1,``2})
  name: FullFlatMap<TFlatMap, TResult, TErrorResult>(Func<T, Result<TFlatMap, TErrorResult>>, Func<T, TFlatMap, TResult>, Func<TError, TErrorResult>)
  href: api/Lemonad.ErrorHandling.Outcome-2.html#Lemonad_ErrorHandling_Outcome_2_FullFlatMap__3_System_Func__0_Lemonad_ErrorHandling_Result___0___2___System_Func__0___0___1__System_Func__1___2__
  commentId: M:Lemonad.ErrorHandling.Outcome`2.FullFlatMap``3(System.Func{`0,Lemonad.ErrorHandling.Result{``0,``2}},System.Func{`0,``0,``1},System.Func{`1,``2})
  name.vb: FullFlatMap(Of TFlatMap, TResult, TErrorResult)(Func(Of T, Result(Of TFlatMap, TErrorResult)), Func(Of T, TFlatMap, TResult), Func(Of TError, TErrorResult))
  fullName: Lemonad.ErrorHandling.Outcome<T, TError>.FullFlatMap<TFlatMap, TResult, TErrorResult>(System.Func<T, Lemonad.ErrorHandling.Result<TFlatMap, TErrorResult>>, System.Func<T, TFlatMap, TResult>, System.Func<TError, TErrorResult>)
  fullName.vb: Lemonad.ErrorHandling.Outcome(Of T, TError).FullFlatMap(Of TFlatMap, TResult, TErrorResult)(System.Func(Of T, Lemonad.ErrorHandling.Result(Of TFlatMap, TErrorResult)), System.Func(Of T, TFlatMap, TResult), System.Func(Of TError, TErrorResult))
  nameWithType: Outcome<T, TError>.FullFlatMap<TFlatMap, TResult, TErrorResult>(Func<T, Result<TFlatMap, TErrorResult>>, Func<T, TFlatMap, TResult>, Func<TError, TErrorResult>)
  nameWithType.vb: Outcome(Of T, TError).FullFlatMap(Of TFlatMap, TResult, TErrorResult)(Func(Of T, Result(Of TFlatMap, TErrorResult)), Func(Of T, TFlatMap, TResult), Func(Of TError, TErrorResult))
- uid: Lemonad.ErrorHandling.Outcome`2.FullFlatMap``3(System.Func{`0,System.Threading.Tasks.Task{Lemonad.ErrorHandling.Result{``0,``2}}},System.Func{`0,``0,``1},System.Func{`1,``2})
  name: FullFlatMap<TFlatMap, TResult, TErrorResult>(Func<T, Task<Result<TFlatMap, TErrorResult>>>, Func<T, TFlatMap, TResult>, Func<TError, TErrorResult>)
  href: api/Lemonad.ErrorHandling.Outcome-2.html#Lemonad_ErrorHandling_Outcome_2_FullFlatMap__3_System_Func__0_System_Threading_Tasks_Task_Lemonad_ErrorHandling_Result___0___2____System_Func__0___0___1__System_Func__1___2__
  commentId: M:Lemonad.ErrorHandling.Outcome`2.FullFlatMap``3(System.Func{`0,System.Threading.Tasks.Task{Lemonad.ErrorHandling.Result{``0,``2}}},System.Func{`0,``0,``1},System.Func{`1,``2})
  name.vb: FullFlatMap(Of TFlatMap, TResult, TErrorResult)(Func(Of T, Task(Of Result(Of TFlatMap, TErrorResult))), Func(Of T, TFlatMap, TResult), Func(Of TError, TErrorResult))
  fullName: Lemonad.ErrorHandling.Outcome<T, TError>.FullFlatMap<TFlatMap, TResult, TErrorResult>(System.Func<T, System.Threading.Tasks.Task<Lemonad.ErrorHandling.Result<TFlatMap, TErrorResult>>>, System.Func<T, TFlatMap, TResult>, System.Func<TError, TErrorResult>)
  fullName.vb: Lemonad.ErrorHandling.Outcome(Of T, TError).FullFlatMap(Of TFlatMap, TResult, TErrorResult)(System.Func(Of T, System.Threading.Tasks.Task(Of Lemonad.ErrorHandling.Result(Of TFlatMap, TErrorResult))), System.Func(Of T, TFlatMap, TResult), System.Func(Of TError, TErrorResult))
  nameWithType: Outcome<T, TError>.FullFlatMap<TFlatMap, TResult, TErrorResult>(Func<T, Task<Result<TFlatMap, TErrorResult>>>, Func<T, TFlatMap, TResult>, Func<TError, TErrorResult>)
  nameWithType.vb: Outcome(Of T, TError).FullFlatMap(Of TFlatMap, TResult, TErrorResult)(Func(Of T, Task(Of Result(Of TFlatMap, TErrorResult))), Func(Of T, TFlatMap, TResult), Func(Of TError, TErrorResult))
- uid: Lemonad.ErrorHandling.Outcome`2.FullMap*
  name: FullMap
  href: api/Lemonad.ErrorHandling.Outcome-2.html#Lemonad_ErrorHandling_Outcome_2_FullMap_
  commentId: Overload:Lemonad.ErrorHandling.Outcome`2.FullMap
  isSpec: "True"
  fullName: Lemonad.ErrorHandling.Outcome<T, TError>.FullMap
  fullName.vb: Lemonad.ErrorHandling.Outcome(Of T, TError).FullMap
  nameWithType: Outcome<T, TError>.FullMap
  nameWithType.vb: Outcome(Of T, TError).FullMap
- uid: Lemonad.ErrorHandling.Outcome`2.FullMap``2(System.Func{`0,``0},System.Func{`1,``1})
  name: FullMap<TResult, TErrorResult>(Func<T, TResult>, Func<TError, TErrorResult>)
  href: api/Lemonad.ErrorHandling.Outcome-2.html#Lemonad_ErrorHandling_Outcome_2_FullMap__2_System_Func__0___0__System_Func__1___1__
  commentId: M:Lemonad.ErrorHandling.Outcome`2.FullMap``2(System.Func{`0,``0},System.Func{`1,``1})
  name.vb: FullMap(Of TResult, TErrorResult)(Func(Of T, TResult), Func(Of TError, TErrorResult))
  fullName: Lemonad.ErrorHandling.Outcome<T, TError>.FullMap<TResult, TErrorResult>(System.Func<T, TResult>, System.Func<TError, TErrorResult>)
  fullName.vb: Lemonad.ErrorHandling.Outcome(Of T, TError).FullMap(Of TResult, TErrorResult)(System.Func(Of T, TResult), System.Func(Of TError, TErrorResult))
  nameWithType: Outcome<T, TError>.FullMap<TResult, TErrorResult>(Func<T, TResult>, Func<TError, TErrorResult>)
  nameWithType.vb: Outcome(Of T, TError).FullMap(Of TResult, TErrorResult)(Func(Of T, TResult), Func(Of TError, TErrorResult))
- uid: Lemonad.ErrorHandling.Outcome`2.HasError
  name: HasError
  href: api/Lemonad.ErrorHandling.Outcome-2.html#Lemonad_ErrorHandling_Outcome_2_HasError
  commentId: P:Lemonad.ErrorHandling.Outcome`2.HasError
  fullName: Lemonad.ErrorHandling.Outcome<T, TError>.HasError
  fullName.vb: Lemonad.ErrorHandling.Outcome(Of T, TError).HasError
  nameWithType: Outcome<T, TError>.HasError
  nameWithType.vb: Outcome(Of T, TError).HasError
- uid: Lemonad.ErrorHandling.Outcome`2.HasError*
  name: HasError
  href: api/Lemonad.ErrorHandling.Outcome-2.html#Lemonad_ErrorHandling_Outcome_2_HasError_
  commentId: Overload:Lemonad.ErrorHandling.Outcome`2.HasError
  isSpec: "True"
  fullName: Lemonad.ErrorHandling.Outcome<T, TError>.HasError
  fullName.vb: Lemonad.ErrorHandling.Outcome(Of T, TError).HasError
  nameWithType: Outcome<T, TError>.HasError
  nameWithType.vb: Outcome(Of T, TError).HasError
- uid: Lemonad.ErrorHandling.Outcome`2.HasValue
  name: HasValue
  href: api/Lemonad.ErrorHandling.Outcome-2.html#Lemonad_ErrorHandling_Outcome_2_HasValue
  commentId: P:Lemonad.ErrorHandling.Outcome`2.HasValue
  fullName: Lemonad.ErrorHandling.Outcome<T, TError>.HasValue
  fullName.vb: Lemonad.ErrorHandling.Outcome(Of T, TError).HasValue
  nameWithType: Outcome<T, TError>.HasValue
  nameWithType.vb: Outcome(Of T, TError).HasValue
- uid: Lemonad.ErrorHandling.Outcome`2.HasValue*
  name: HasValue
  href: api/Lemonad.ErrorHandling.Outcome-2.html#Lemonad_ErrorHandling_Outcome_2_HasValue_
  commentId: Overload:Lemonad.ErrorHandling.Outcome`2.HasValue
  isSpec: "True"
  fullName: Lemonad.ErrorHandling.Outcome<T, TError>.HasValue
  fullName.vb: Lemonad.ErrorHandling.Outcome(Of T, TError).HasValue
  nameWithType: Outcome<T, TError>.HasValue
  nameWithType.vb: Outcome(Of T, TError).HasValue
- uid: Lemonad.ErrorHandling.Outcome`2.IsErrorWhen(System.Func{`0,System.Boolean},System.Func{`1})
  name: IsErrorWhen(Func<T, Boolean>, Func<TError>)
  href: api/Lemonad.ErrorHandling.Outcome-2.html#Lemonad_ErrorHandling_Outcome_2_IsErrorWhen_System_Func__0_System_Boolean__System_Func__1__
  commentId: M:Lemonad.ErrorHandling.Outcome`2.IsErrorWhen(System.Func{`0,System.Boolean},System.Func{`1})
  name.vb: IsErrorWhen(Func(Of T, Boolean), Func(Of TError))
  fullName: Lemonad.ErrorHandling.Outcome<T, TError>.IsErrorWhen(System.Func<T, System.Boolean>, System.Func<TError>)
  fullName.vb: Lemonad.ErrorHandling.Outcome(Of T, TError).IsErrorWhen(System.Func(Of T, System.Boolean), System.Func(Of TError))
  nameWithType: Outcome<T, TError>.IsErrorWhen(Func<T, Boolean>, Func<TError>)
  nameWithType.vb: Outcome(Of T, TError).IsErrorWhen(Func(Of T, Boolean), Func(Of TError))
- uid: Lemonad.ErrorHandling.Outcome`2.IsErrorWhen(System.Func{`0,System.Boolean},System.Func{Lemonad.ErrorHandling.Maybe{`0},`1})
  name: IsErrorWhen(Func<T, Boolean>, Func<Maybe<T>, TError>)
  href: api/Lemonad.ErrorHandling.Outcome-2.html#Lemonad_ErrorHandling_Outcome_2_IsErrorWhen_System_Func__0_System_Boolean__System_Func_Lemonad_ErrorHandling_Maybe__0___1__
  commentId: M:Lemonad.ErrorHandling.Outcome`2.IsErrorWhen(System.Func{`0,System.Boolean},System.Func{Lemonad.ErrorHandling.Maybe{`0},`1})
  name.vb: IsErrorWhen(Func(Of T, Boolean), Func(Of Maybe(Of T), TError))
  fullName: Lemonad.ErrorHandling.Outcome<T, TError>.IsErrorWhen(System.Func<T, System.Boolean>, System.Func<Lemonad.ErrorHandling.Maybe<T>, TError>)
  fullName.vb: Lemonad.ErrorHandling.Outcome(Of T, TError).IsErrorWhen(System.Func(Of T, System.Boolean), System.Func(Of Lemonad.ErrorHandling.Maybe(Of T), TError))
  nameWithType: Outcome<T, TError>.IsErrorWhen(Func<T, Boolean>, Func<Maybe<T>, TError>)
  nameWithType.vb: Outcome(Of T, TError).IsErrorWhen(Func(Of T, Boolean), Func(Of Maybe(Of T), TError))
- uid: Lemonad.ErrorHandling.Outcome`2.IsErrorWhen(System.Func{`0,System.Threading.Tasks.Task{System.Boolean}},System.Func{`1})
  name: IsErrorWhen(Func<T, Task<Boolean>>, Func<TError>)
  href: api/Lemonad.ErrorHandling.Outcome-2.html#Lemonad_ErrorHandling_Outcome_2_IsErrorWhen_System_Func__0_System_Threading_Tasks_Task_System_Boolean___System_Func__1__
  commentId: M:Lemonad.ErrorHandling.Outcome`2.IsErrorWhen(System.Func{`0,System.Threading.Tasks.Task{System.Boolean}},System.Func{`1})
  name.vb: IsErrorWhen(Func(Of T, Task(Of Boolean)), Func(Of TError))
  fullName: Lemonad.ErrorHandling.Outcome<T, TError>.IsErrorWhen(System.Func<T, System.Threading.Tasks.Task<System.Boolean>>, System.Func<TError>)
  fullName.vb: Lemonad.ErrorHandling.Outcome(Of T, TError).IsErrorWhen(System.Func(Of T, System.Threading.Tasks.Task(Of System.Boolean)), System.Func(Of TError))
  nameWithType: Outcome<T, TError>.IsErrorWhen(Func<T, Task<Boolean>>, Func<TError>)
  nameWithType.vb: Outcome(Of T, TError).IsErrorWhen(Func(Of T, Task(Of Boolean)), Func(Of TError))
- uid: Lemonad.ErrorHandling.Outcome`2.IsErrorWhen(System.Func{`0,System.Threading.Tasks.Task{System.Boolean}},System.Func{Lemonad.ErrorHandling.Maybe{`0},`1})
  name: IsErrorWhen(Func<T, Task<Boolean>>, Func<Maybe<T>, TError>)
  href: api/Lemonad.ErrorHandling.Outcome-2.html#Lemonad_ErrorHandling_Outcome_2_IsErrorWhen_System_Func__0_System_Threading_Tasks_Task_System_Boolean___System_Func_Lemonad_ErrorHandling_Maybe__0___1__
  commentId: M:Lemonad.ErrorHandling.Outcome`2.IsErrorWhen(System.Func{`0,System.Threading.Tasks.Task{System.Boolean}},System.Func{Lemonad.ErrorHandling.Maybe{`0},`1})
  name.vb: IsErrorWhen(Func(Of T, Task(Of Boolean)), Func(Of Maybe(Of T), TError))
  fullName: Lemonad.ErrorHandling.Outcome<T, TError>.IsErrorWhen(System.Func<T, System.Threading.Tasks.Task<System.Boolean>>, System.Func<Lemonad.ErrorHandling.Maybe<T>, TError>)
  fullName.vb: Lemonad.ErrorHandling.Outcome(Of T, TError).IsErrorWhen(System.Func(Of T, System.Threading.Tasks.Task(Of System.Boolean)), System.Func(Of Lemonad.ErrorHandling.Maybe(Of T), TError))
  nameWithType: Outcome<T, TError>.IsErrorWhen(Func<T, Task<Boolean>>, Func<Maybe<T>, TError>)
  nameWithType.vb: Outcome(Of T, TError).IsErrorWhen(Func(Of T, Task(Of Boolean)), Func(Of Maybe(Of T), TError))
- uid: Lemonad.ErrorHandling.Outcome`2.IsErrorWhen*
  name: IsErrorWhen
  href: api/Lemonad.ErrorHandling.Outcome-2.html#Lemonad_ErrorHandling_Outcome_2_IsErrorWhen_
  commentId: Overload:Lemonad.ErrorHandling.Outcome`2.IsErrorWhen
  isSpec: "True"
  fullName: Lemonad.ErrorHandling.Outcome<T, TError>.IsErrorWhen
  fullName.vb: Lemonad.ErrorHandling.Outcome(Of T, TError).IsErrorWhen
  nameWithType: Outcome<T, TError>.IsErrorWhen
  nameWithType.vb: Outcome(Of T, TError).IsErrorWhen
- uid: Lemonad.ErrorHandling.Outcome`2.IsErrorWhenNull(System.Func{`1})
  name: IsErrorWhenNull(Func<TError>)
  href: api/Lemonad.ErrorHandling.Outcome-2.html#Lemonad_ErrorHandling_Outcome_2_IsErrorWhenNull_System_Func__1__
  commentId: M:Lemonad.ErrorHandling.Outcome`2.IsErrorWhenNull(System.Func{`1})
  name.vb: IsErrorWhenNull(Func(Of TError))
  fullName: Lemonad.ErrorHandling.Outcome<T, TError>.IsErrorWhenNull(System.Func<TError>)
  fullName.vb: Lemonad.ErrorHandling.Outcome(Of T, TError).IsErrorWhenNull(System.Func(Of TError))
  nameWithType: Outcome<T, TError>.IsErrorWhenNull(Func<TError>)
  nameWithType.vb: Outcome(Of T, TError).IsErrorWhenNull(Func(Of TError))
- uid: Lemonad.ErrorHandling.Outcome`2.IsErrorWhenNull*
  name: IsErrorWhenNull
  href: api/Lemonad.ErrorHandling.Outcome-2.html#Lemonad_ErrorHandling_Outcome_2_IsErrorWhenNull_
  commentId: Overload:Lemonad.ErrorHandling.Outcome`2.IsErrorWhenNull
  isSpec: "True"
  fullName: Lemonad.ErrorHandling.Outcome<T, TError>.IsErrorWhenNull
  fullName.vb: Lemonad.ErrorHandling.Outcome(Of T, TError).IsErrorWhenNull
  nameWithType: Outcome<T, TError>.IsErrorWhenNull
  nameWithType.vb: Outcome(Of T, TError).IsErrorWhenNull
- uid: Lemonad.ErrorHandling.Outcome`2.Join*
  name: Join
  href: api/Lemonad.ErrorHandling.Outcome-2.html#Lemonad_ErrorHandling_Outcome_2_Join_
  commentId: Overload:Lemonad.ErrorHandling.Outcome`2.Join
  isSpec: "True"
  fullName: Lemonad.ErrorHandling.Outcome<T, TError>.Join
  fullName.vb: Lemonad.ErrorHandling.Outcome(Of T, TError).Join
  nameWithType: Outcome<T, TError>.Join
  nameWithType.vb: Outcome(Of T, TError).Join
- uid: Lemonad.ErrorHandling.Outcome`2.Join``3(Lemonad.ErrorHandling.Outcome{``0,`1},System.Func{`0,``1},System.Func{``0,``1},System.Func{`0,``0,``2},System.Func{`1})
  name: Join<TInner, TKey, TResult>(Outcome<TInner, TError>, Func<T, TKey>, Func<TInner, TKey>, Func<T, TInner, TResult>, Func<TError>)
  href: api/Lemonad.ErrorHandling.Outcome-2.html#Lemonad_ErrorHandling_Outcome_2_Join__3_Lemonad_ErrorHandling_Outcome___0__1__System_Func__0___1__System_Func___0___1__System_Func__0___0___2__System_Func__1__
  commentId: M:Lemonad.ErrorHandling.Outcome`2.Join``3(Lemonad.ErrorHandling.Outcome{``0,`1},System.Func{`0,``1},System.Func{``0,``1},System.Func{`0,``0,``2},System.Func{`1})
  name.vb: Join(Of TInner, TKey, TResult)(Outcome(Of TInner, TError), Func(Of T, TKey), Func(Of TInner, TKey), Func(Of T, TInner, TResult), Func(Of TError))
  fullName: Lemonad.ErrorHandling.Outcome<T, TError>.Join<TInner, TKey, TResult>(Lemonad.ErrorHandling.Outcome<TInner, TError>, System.Func<T, TKey>, System.Func<TInner, TKey>, System.Func<T, TInner, TResult>, System.Func<TError>)
  fullName.vb: Lemonad.ErrorHandling.Outcome(Of T, TError).Join(Of TInner, TKey, TResult)(Lemonad.ErrorHandling.Outcome(Of TInner, TError), System.Func(Of T, TKey), System.Func(Of TInner, TKey), System.Func(Of T, TInner, TResult), System.Func(Of TError))
  nameWithType: Outcome<T, TError>.Join<TInner, TKey, TResult>(Outcome<TInner, TError>, Func<T, TKey>, Func<TInner, TKey>, Func<T, TInner, TResult>, Func<TError>)
  nameWithType.vb: Outcome(Of T, TError).Join(Of TInner, TKey, TResult)(Outcome(Of TInner, TError), Func(Of T, TKey), Func(Of TInner, TKey), Func(Of T, TInner, TResult), Func(Of TError))
- uid: Lemonad.ErrorHandling.Outcome`2.Join``3(Lemonad.ErrorHandling.Outcome{``0,`1},System.Func{`0,``1},System.Func{``0,``1},System.Func{`0,``0,``2},System.Func{`1},System.Collections.Generic.IEqualityComparer{``1})
  name: Join<TInner, TKey, TResult>(Outcome<TInner, TError>, Func<T, TKey>, Func<TInner, TKey>, Func<T, TInner, TResult>, Func<TError>, IEqualityComparer<TKey>)
  href: api/Lemonad.ErrorHandling.Outcome-2.html#Lemonad_ErrorHandling_Outcome_2_Join__3_Lemonad_ErrorHandling_Outcome___0__1__System_Func__0___1__System_Func___0___1__System_Func__0___0___2__System_Func__1__System_Collections_Generic_IEqualityComparer___1__
  commentId: M:Lemonad.ErrorHandling.Outcome`2.Join``3(Lemonad.ErrorHandling.Outcome{``0,`1},System.Func{`0,``1},System.Func{``0,``1},System.Func{`0,``0,``2},System.Func{`1},System.Collections.Generic.IEqualityComparer{``1})
  name.vb: Join(Of TInner, TKey, TResult)(Outcome(Of TInner, TError), Func(Of T, TKey), Func(Of TInner, TKey), Func(Of T, TInner, TResult), Func(Of TError), IEqualityComparer(Of TKey))
  fullName: Lemonad.ErrorHandling.Outcome<T, TError>.Join<TInner, TKey, TResult>(Lemonad.ErrorHandling.Outcome<TInner, TError>, System.Func<T, TKey>, System.Func<TInner, TKey>, System.Func<T, TInner, TResult>, System.Func<TError>, System.Collections.Generic.IEqualityComparer<TKey>)
  fullName.vb: Lemonad.ErrorHandling.Outcome(Of T, TError).Join(Of TInner, TKey, TResult)(Lemonad.ErrorHandling.Outcome(Of TInner, TError), System.Func(Of T, TKey), System.Func(Of TInner, TKey), System.Func(Of T, TInner, TResult), System.Func(Of TError), System.Collections.Generic.IEqualityComparer(Of TKey))
  nameWithType: Outcome<T, TError>.Join<TInner, TKey, TResult>(Outcome<TInner, TError>, Func<T, TKey>, Func<TInner, TKey>, Func<T, TInner, TResult>, Func<TError>, IEqualityComparer<TKey>)
  nameWithType.vb: Outcome(Of T, TError).Join(Of TInner, TKey, TResult)(Outcome(Of TInner, TError), Func(Of T, TKey), Func(Of TInner, TKey), Func(Of T, TInner, TResult), Func(Of TError), IEqualityComparer(Of TKey))
- uid: Lemonad.ErrorHandling.Outcome`2.Join``3(Lemonad.ErrorHandling.Result{``0,`1},System.Func{`0,``1},System.Func{``0,``1},System.Func{`0,``0,``2},System.Func{`1})
  name: Join<TInner, TKey, TResult>(Result<TInner, TError>, Func<T, TKey>, Func<TInner, TKey>, Func<T, TInner, TResult>, Func<TError>)
  href: api/Lemonad.ErrorHandling.Outcome-2.html#Lemonad_ErrorHandling_Outcome_2_Join__3_Lemonad_ErrorHandling_Result___0__1__System_Func__0___1__System_Func___0___1__System_Func__0___0___2__System_Func__1__
  commentId: M:Lemonad.ErrorHandling.Outcome`2.Join``3(Lemonad.ErrorHandling.Result{``0,`1},System.Func{`0,``1},System.Func{``0,``1},System.Func{`0,``0,``2},System.Func{`1})
  name.vb: Join(Of TInner, TKey, TResult)(Result(Of TInner, TError), Func(Of T, TKey), Func(Of TInner, TKey), Func(Of T, TInner, TResult), Func(Of TError))
  fullName: Lemonad.ErrorHandling.Outcome<T, TError>.Join<TInner, TKey, TResult>(Lemonad.ErrorHandling.Result<TInner, TError>, System.Func<T, TKey>, System.Func<TInner, TKey>, System.Func<T, TInner, TResult>, System.Func<TError>)
  fullName.vb: Lemonad.ErrorHandling.Outcome(Of T, TError).Join(Of TInner, TKey, TResult)(Lemonad.ErrorHandling.Result(Of TInner, TError), System.Func(Of T, TKey), System.Func(Of TInner, TKey), System.Func(Of T, TInner, TResult), System.Func(Of TError))
  nameWithType: Outcome<T, TError>.Join<TInner, TKey, TResult>(Result<TInner, TError>, Func<T, TKey>, Func<TInner, TKey>, Func<T, TInner, TResult>, Func<TError>)
  nameWithType.vb: Outcome(Of T, TError).Join(Of TInner, TKey, TResult)(Result(Of TInner, TError), Func(Of T, TKey), Func(Of TInner, TKey), Func(Of T, TInner, TResult), Func(Of TError))
- uid: Lemonad.ErrorHandling.Outcome`2.Join``3(Lemonad.ErrorHandling.Result{``0,`1},System.Func{`0,``1},System.Func{``0,``1},System.Func{`0,``0,``2},System.Func{`1},System.Collections.Generic.IEqualityComparer{``1})
  name: Join<TInner, TKey, TResult>(Result<TInner, TError>, Func<T, TKey>, Func<TInner, TKey>, Func<T, TInner, TResult>, Func<TError>, IEqualityComparer<TKey>)
  href: api/Lemonad.ErrorHandling.Outcome-2.html#Lemonad_ErrorHandling_Outcome_2_Join__3_Lemonad_ErrorHandling_Result___0__1__System_Func__0___1__System_Func___0___1__System_Func__0___0___2__System_Func__1__System_Collections_Generic_IEqualityComparer___1__
  commentId: M:Lemonad.ErrorHandling.Outcome`2.Join``3(Lemonad.ErrorHandling.Result{``0,`1},System.Func{`0,``1},System.Func{``0,``1},System.Func{`0,``0,``2},System.Func{`1},System.Collections.Generic.IEqualityComparer{``1})
  name.vb: Join(Of TInner, TKey, TResult)(Result(Of TInner, TError), Func(Of T, TKey), Func(Of TInner, TKey), Func(Of T, TInner, TResult), Func(Of TError), IEqualityComparer(Of TKey))
  fullName: Lemonad.ErrorHandling.Outcome<T, TError>.Join<TInner, TKey, TResult>(Lemonad.ErrorHandling.Result<TInner, TError>, System.Func<T, TKey>, System.Func<TInner, TKey>, System.Func<T, TInner, TResult>, System.Func<TError>, System.Collections.Generic.IEqualityComparer<TKey>)
  fullName.vb: Lemonad.ErrorHandling.Outcome(Of T, TError).Join(Of TInner, TKey, TResult)(Lemonad.ErrorHandling.Result(Of TInner, TError), System.Func(Of T, TKey), System.Func(Of TInner, TKey), System.Func(Of T, TInner, TResult), System.Func(Of TError), System.Collections.Generic.IEqualityComparer(Of TKey))
  nameWithType: Outcome<T, TError>.Join<TInner, TKey, TResult>(Result<TInner, TError>, Func<T, TKey>, Func<TInner, TKey>, Func<T, TInner, TResult>, Func<TError>, IEqualityComparer<TKey>)
  nameWithType.vb: Outcome(Of T, TError).Join(Of TInner, TKey, TResult)(Result(Of TInner, TError), Func(Of T, TKey), Func(Of TInner, TKey), Func(Of T, TInner, TResult), Func(Of TError), IEqualityComparer(Of TKey))
- uid: Lemonad.ErrorHandling.Outcome`2.Join``3(System.Threading.Tasks.Task{Lemonad.ErrorHandling.Result{``0,`1}},System.Func{`0,``1},System.Func{``0,``1},System.Func{`0,``0,``2},System.Func{`1})
  name: Join<TInner, TKey, TResult>(Task<Result<TInner, TError>>, Func<T, TKey>, Func<TInner, TKey>, Func<T, TInner, TResult>, Func<TError>)
  href: api/Lemonad.ErrorHandling.Outcome-2.html#Lemonad_ErrorHandling_Outcome_2_Join__3_System_Threading_Tasks_Task_Lemonad_ErrorHandling_Result___0__1___System_Func__0___1__System_Func___0___1__System_Func__0___0___2__System_Func__1__
  commentId: M:Lemonad.ErrorHandling.Outcome`2.Join``3(System.Threading.Tasks.Task{Lemonad.ErrorHandling.Result{``0,`1}},System.Func{`0,``1},System.Func{``0,``1},System.Func{`0,``0,``2},System.Func{`1})
  name.vb: Join(Of TInner, TKey, TResult)(Task(Of Result(Of TInner, TError)), Func(Of T, TKey), Func(Of TInner, TKey), Func(Of T, TInner, TResult), Func(Of TError))
  fullName: Lemonad.ErrorHandling.Outcome<T, TError>.Join<TInner, TKey, TResult>(System.Threading.Tasks.Task<Lemonad.ErrorHandling.Result<TInner, TError>>, System.Func<T, TKey>, System.Func<TInner, TKey>, System.Func<T, TInner, TResult>, System.Func<TError>)
  fullName.vb: Lemonad.ErrorHandling.Outcome(Of T, TError).Join(Of TInner, TKey, TResult)(System.Threading.Tasks.Task(Of Lemonad.ErrorHandling.Result(Of TInner, TError)), System.Func(Of T, TKey), System.Func(Of TInner, TKey), System.Func(Of T, TInner, TResult), System.Func(Of TError))
  nameWithType: Outcome<T, TError>.Join<TInner, TKey, TResult>(Task<Result<TInner, TError>>, Func<T, TKey>, Func<TInner, TKey>, Func<T, TInner, TResult>, Func<TError>)
  nameWithType.vb: Outcome(Of T, TError).Join(Of TInner, TKey, TResult)(Task(Of Result(Of TInner, TError)), Func(Of T, TKey), Func(Of TInner, TKey), Func(Of T, TInner, TResult), Func(Of TError))
- uid: Lemonad.ErrorHandling.Outcome`2.Join``3(System.Threading.Tasks.Task{Lemonad.ErrorHandling.Result{``0,`1}},System.Func{`0,``1},System.Func{``0,``1},System.Func{`0,``0,``2},System.Func{`1},System.Collections.Generic.IEqualityComparer{``1})
  name: Join<TInner, TKey, TResult>(Task<Result<TInner, TError>>, Func<T, TKey>, Func<TInner, TKey>, Func<T, TInner, TResult>, Func<TError>, IEqualityComparer<TKey>)
  href: api/Lemonad.ErrorHandling.Outcome-2.html#Lemonad_ErrorHandling_Outcome_2_Join__3_System_Threading_Tasks_Task_Lemonad_ErrorHandling_Result___0__1___System_Func__0___1__System_Func___0___1__System_Func__0___0___2__System_Func__1__System_Collections_Generic_IEqualityComparer___1__
  commentId: M:Lemonad.ErrorHandling.Outcome`2.Join``3(System.Threading.Tasks.Task{Lemonad.ErrorHandling.Result{``0,`1}},System.Func{`0,``1},System.Func{``0,``1},System.Func{`0,``0,``2},System.Func{`1},System.Collections.Generic.IEqualityComparer{``1})
  name.vb: Join(Of TInner, TKey, TResult)(Task(Of Result(Of TInner, TError)), Func(Of T, TKey), Func(Of TInner, TKey), Func(Of T, TInner, TResult), Func(Of TError), IEqualityComparer(Of TKey))
  fullName: Lemonad.ErrorHandling.Outcome<T, TError>.Join<TInner, TKey, TResult>(System.Threading.Tasks.Task<Lemonad.ErrorHandling.Result<TInner, TError>>, System.Func<T, TKey>, System.Func<TInner, TKey>, System.Func<T, TInner, TResult>, System.Func<TError>, System.Collections.Generic.IEqualityComparer<TKey>)
  fullName.vb: Lemonad.ErrorHandling.Outcome(Of T, TError).Join(Of TInner, TKey, TResult)(System.Threading.Tasks.Task(Of Lemonad.ErrorHandling.Result(Of TInner, TError)), System.Func(Of T, TKey), System.Func(Of TInner, TKey), System.Func(Of T, TInner, TResult), System.Func(Of TError), System.Collections.Generic.IEqualityComparer(Of TKey))
  nameWithType: Outcome<T, TError>.Join<TInner, TKey, TResult>(Task<Result<TInner, TError>>, Func<T, TKey>, Func<TInner, TKey>, Func<T, TInner, TResult>, Func<TError>, IEqualityComparer<TKey>)
  nameWithType.vb: Outcome(Of T, TError).Join(Of TInner, TKey, TResult)(Task(Of Result(Of TInner, TError)), Func(Of T, TKey), Func(Of TInner, TKey), Func(Of T, TInner, TResult), Func(Of TError), IEqualityComparer(Of TKey))
- uid: Lemonad.ErrorHandling.Outcome`2.Map*
  name: Map
  href: api/Lemonad.ErrorHandling.Outcome-2.html#Lemonad_ErrorHandling_Outcome_2_Map_
  commentId: Overload:Lemonad.ErrorHandling.Outcome`2.Map
  isSpec: "True"
  fullName: Lemonad.ErrorHandling.Outcome<T, TError>.Map
  fullName.vb: Lemonad.ErrorHandling.Outcome(Of T, TError).Map
  nameWithType: Outcome<T, TError>.Map
  nameWithType.vb: Outcome(Of T, TError).Map
- uid: Lemonad.ErrorHandling.Outcome`2.Map``1(System.Func{`0,``0})
  name: Map<TResult>(Func<T, TResult>)
  href: api/Lemonad.ErrorHandling.Outcome-2.html#Lemonad_ErrorHandling_Outcome_2_Map__1_System_Func__0___0__
  commentId: M:Lemonad.ErrorHandling.Outcome`2.Map``1(System.Func{`0,``0})
  name.vb: Map(Of TResult)(Func(Of T, TResult))
  fullName: Lemonad.ErrorHandling.Outcome<T, TError>.Map<TResult>(System.Func<T, TResult>)
  fullName.vb: Lemonad.ErrorHandling.Outcome(Of T, TError).Map(Of TResult)(System.Func(Of T, TResult))
  nameWithType: Outcome<T, TError>.Map<TResult>(Func<T, TResult>)
  nameWithType.vb: Outcome(Of T, TError).Map(Of TResult)(Func(Of T, TResult))
- uid: Lemonad.ErrorHandling.Outcome`2.Map``1(System.Func{`0,System.Threading.Tasks.Task{``0}})
  name: Map<TResult>(Func<T, Task<TResult>>)
  href: api/Lemonad.ErrorHandling.Outcome-2.html#Lemonad_ErrorHandling_Outcome_2_Map__1_System_Func__0_System_Threading_Tasks_Task___0___
  commentId: M:Lemonad.ErrorHandling.Outcome`2.Map``1(System.Func{`0,System.Threading.Tasks.Task{``0}})
  name.vb: Map(Of TResult)(Func(Of T, Task(Of TResult)))
  fullName: Lemonad.ErrorHandling.Outcome<T, TError>.Map<TResult>(System.Func<T, System.Threading.Tasks.Task<TResult>>)
  fullName.vb: Lemonad.ErrorHandling.Outcome(Of T, TError).Map(Of TResult)(System.Func(Of T, System.Threading.Tasks.Task(Of TResult)))
  nameWithType: Outcome<T, TError>.Map<TResult>(Func<T, Task<TResult>>)
  nameWithType.vb: Outcome(Of T, TError).Map(Of TResult)(Func(Of T, Task(Of TResult)))
- uid: Lemonad.ErrorHandling.Outcome`2.MapError*
  name: MapError
  href: api/Lemonad.ErrorHandling.Outcome-2.html#Lemonad_ErrorHandling_Outcome_2_MapError_
  commentId: Overload:Lemonad.ErrorHandling.Outcome`2.MapError
  isSpec: "True"
  fullName: Lemonad.ErrorHandling.Outcome<T, TError>.MapError
  fullName.vb: Lemonad.ErrorHandling.Outcome(Of T, TError).MapError
  nameWithType: Outcome<T, TError>.MapError
  nameWithType.vb: Outcome(Of T, TError).MapError
- uid: Lemonad.ErrorHandling.Outcome`2.MapError``1(System.Func{`1,``0})
  name: MapError<TErrorResult>(Func<TError, TErrorResult>)
  href: api/Lemonad.ErrorHandling.Outcome-2.html#Lemonad_ErrorHandling_Outcome_2_MapError__1_System_Func__1___0__
  commentId: M:Lemonad.ErrorHandling.Outcome`2.MapError``1(System.Func{`1,``0})
  name.vb: MapError(Of TErrorResult)(Func(Of TError, TErrorResult))
  fullName: Lemonad.ErrorHandling.Outcome<T, TError>.MapError<TErrorResult>(System.Func<TError, TErrorResult>)
  fullName.vb: Lemonad.ErrorHandling.Outcome(Of T, TError).MapError(Of TErrorResult)(System.Func(Of TError, TErrorResult))
  nameWithType: Outcome<T, TError>.MapError<TErrorResult>(Func<TError, TErrorResult>)
  nameWithType.vb: Outcome(Of T, TError).MapError(Of TErrorResult)(Func(Of TError, TErrorResult))
- uid: Lemonad.ErrorHandling.Outcome`2.MapError``1(System.Func{`1,System.Threading.Tasks.Task{``0}})
  name: MapError<TErrorResult>(Func<TError, Task<TErrorResult>>)
  href: api/Lemonad.ErrorHandling.Outcome-2.html#Lemonad_ErrorHandling_Outcome_2_MapError__1_System_Func__1_System_Threading_Tasks_Task___0___
  commentId: M:Lemonad.ErrorHandling.Outcome`2.MapError``1(System.Func{`1,System.Threading.Tasks.Task{``0}})
  name.vb: MapError(Of TErrorResult)(Func(Of TError, Task(Of TErrorResult)))
  fullName: Lemonad.ErrorHandling.Outcome<T, TError>.MapError<TErrorResult>(System.Func<TError, System.Threading.Tasks.Task<TErrorResult>>)
  fullName.vb: Lemonad.ErrorHandling.Outcome(Of T, TError).MapError(Of TErrorResult)(System.Func(Of TError, System.Threading.Tasks.Task(Of TErrorResult)))
  nameWithType: Outcome<T, TError>.MapError<TErrorResult>(Func<TError, Task<TErrorResult>>)
  nameWithType.vb: Outcome(Of T, TError).MapError(Of TErrorResult)(Func(Of TError, Task(Of TErrorResult)))
- uid: Lemonad.ErrorHandling.Outcome`2.Match(System.Action{`0},System.Action{`1})
  name: Match(Action<T>, Action<TError>)
  href: api/Lemonad.ErrorHandling.Outcome-2.html#Lemonad_ErrorHandling_Outcome_2_Match_System_Action__0__System_Action__1__
  commentId: M:Lemonad.ErrorHandling.Outcome`2.Match(System.Action{`0},System.Action{`1})
  name.vb: Match(Action(Of T), Action(Of TError))
  fullName: Lemonad.ErrorHandling.Outcome<T, TError>.Match(System.Action<T>, System.Action<TError>)
  fullName.vb: Lemonad.ErrorHandling.Outcome(Of T, TError).Match(System.Action(Of T), System.Action(Of TError))
  nameWithType: Outcome<T, TError>.Match(Action<T>, Action<TError>)
  nameWithType.vb: Outcome(Of T, TError).Match(Action(Of T), Action(Of TError))
- uid: Lemonad.ErrorHandling.Outcome`2.Match*
  name: Match
  href: api/Lemonad.ErrorHandling.Outcome-2.html#Lemonad_ErrorHandling_Outcome_2_Match_
  commentId: Overload:Lemonad.ErrorHandling.Outcome`2.Match
  isSpec: "True"
  fullName: Lemonad.ErrorHandling.Outcome<T, TError>.Match
  fullName.vb: Lemonad.ErrorHandling.Outcome(Of T, TError).Match
  nameWithType: Outcome<T, TError>.Match
  nameWithType.vb: Outcome(Of T, TError).Match
- uid: Lemonad.ErrorHandling.Outcome`2.Match``1(System.Func{`0,``0},System.Func{`1,``0})
  name: Match<TResult>(Func<T, TResult>, Func<TError, TResult>)
  href: api/Lemonad.ErrorHandling.Outcome-2.html#Lemonad_ErrorHandling_Outcome_2_Match__1_System_Func__0___0__System_Func__1___0__
  commentId: M:Lemonad.ErrorHandling.Outcome`2.Match``1(System.Func{`0,``0},System.Func{`1,``0})
  name.vb: Match(Of TResult)(Func(Of T, TResult), Func(Of TError, TResult))
  fullName: Lemonad.ErrorHandling.Outcome<T, TError>.Match<TResult>(System.Func<T, TResult>, System.Func<TError, TResult>)
  fullName.vb: Lemonad.ErrorHandling.Outcome(Of T, TError).Match(Of TResult)(System.Func(Of T, TResult), System.Func(Of TError, TResult))
  nameWithType: Outcome<T, TError>.Match<TResult>(Func<T, TResult>, Func<TError, TResult>)
  nameWithType.vb: Outcome(Of T, TError).Match(Of TResult)(Func(Of T, TResult), Func(Of TError, TResult))
- uid: Lemonad.ErrorHandling.Outcome`2.Multiple(System.Func{Lemonad.ErrorHandling.Result{`0,`1},Lemonad.ErrorHandling.Result{`0,`1}}[])
  name: Multiple(Func<Result<T, TError>, Result<T, TError>>[])
  href: api/Lemonad.ErrorHandling.Outcome-2.html#Lemonad_ErrorHandling_Outcome_2_Multiple_System_Func_Lemonad_ErrorHandling_Result__0__1__Lemonad_ErrorHandling_Result__0__1_____
  commentId: M:Lemonad.ErrorHandling.Outcome`2.Multiple(System.Func{Lemonad.ErrorHandling.Result{`0,`1},Lemonad.ErrorHandling.Result{`0,`1}}[])
  name.vb: Multiple(Func(Of Result(Of T, TError), Result(Of T, TError))())
  fullName: Lemonad.ErrorHandling.Outcome<T, TError>.Multiple(System.Func<Lemonad.ErrorHandling.Result<T, TError>, Lemonad.ErrorHandling.Result<T, TError>>[])
  fullName.vb: Lemonad.ErrorHandling.Outcome(Of T, TError).Multiple(System.Func(Of Lemonad.ErrorHandling.Result(Of T, TError), Lemonad.ErrorHandling.Result(Of T, TError))())
  nameWithType: Outcome<T, TError>.Multiple(Func<Result<T, TError>, Result<T, TError>>[])
  nameWithType.vb: Outcome(Of T, TError).Multiple(Func(Of Result(Of T, TError), Result(Of T, TError))())
- uid: Lemonad.ErrorHandling.Outcome`2.Multiple*
  name: Multiple
  href: api/Lemonad.ErrorHandling.Outcome-2.html#Lemonad_ErrorHandling_Outcome_2_Multiple_
  commentId: Overload:Lemonad.ErrorHandling.Outcome`2.Multiple
  isSpec: "True"
  fullName: Lemonad.ErrorHandling.Outcome<T, TError>.Multiple
  fullName.vb: Lemonad.ErrorHandling.Outcome(Of T, TError).Multiple
  nameWithType: Outcome<T, TError>.Multiple
  nameWithType.vb: Outcome(Of T, TError).Multiple
- uid: Lemonad.ErrorHandling.Outcome`2.op_Implicit(`0)~Lemonad.ErrorHandling.Outcome{`0,`1}
  name: Implicit(T to Outcome<T, TError>)
  href: api/Lemonad.ErrorHandling.Outcome-2.html#Lemonad_ErrorHandling_Outcome_2_op_Implicit__0__Lemonad_ErrorHandling_Outcome__0__1_
  commentId: M:Lemonad.ErrorHandling.Outcome`2.op_Implicit(`0)~Lemonad.ErrorHandling.Outcome{`0,`1}
  name.vb: Widening(T to Outcome(Of T, TError))
  fullName: Lemonad.ErrorHandling.Outcome<T, TError>.Implicit(T to Lemonad.ErrorHandling.Outcome<T, TError>)
  fullName.vb: Lemonad.ErrorHandling.Outcome(Of T, TError).Widening(T to Lemonad.ErrorHandling.Outcome(Of T, TError))
  nameWithType: Outcome<T, TError>.Implicit(T to Outcome<T, TError>)
  nameWithType.vb: Outcome(Of T, TError).Widening(T to Outcome(Of T, TError))
- uid: Lemonad.ErrorHandling.Outcome`2.op_Implicit(`1)~Lemonad.ErrorHandling.Outcome{`0,`1}
  name: Implicit(TError to Outcome<T, TError>)
  href: api/Lemonad.ErrorHandling.Outcome-2.html#Lemonad_ErrorHandling_Outcome_2_op_Implicit__1__Lemonad_ErrorHandling_Outcome__0__1_
  commentId: M:Lemonad.ErrorHandling.Outcome`2.op_Implicit(`1)~Lemonad.ErrorHandling.Outcome{`0,`1}
  name.vb: Widening(TError to Outcome(Of T, TError))
  fullName: Lemonad.ErrorHandling.Outcome<T, TError>.Implicit(TError to Lemonad.ErrorHandling.Outcome<T, TError>)
  fullName.vb: Lemonad.ErrorHandling.Outcome(Of T, TError).Widening(TError to Lemonad.ErrorHandling.Outcome(Of T, TError))
  nameWithType: Outcome<T, TError>.Implicit(TError to Outcome<T, TError>)
  nameWithType.vb: Outcome(Of T, TError).Widening(TError to Outcome(Of T, TError))
- uid: Lemonad.ErrorHandling.Outcome`2.op_Implicit(System.Threading.Tasks.Task{`0})~Lemonad.ErrorHandling.Outcome{`0,`1}
  name: Implicit(Task<T> to Outcome<T, TError>)
  href: api/Lemonad.ErrorHandling.Outcome-2.html#Lemonad_ErrorHandling_Outcome_2_op_Implicit_System_Threading_Tasks_Task__0___Lemonad_ErrorHandling_Outcome__0__1_
  commentId: M:Lemonad.ErrorHandling.Outcome`2.op_Implicit(System.Threading.Tasks.Task{`0})~Lemonad.ErrorHandling.Outcome{`0,`1}
  name.vb: Widening(Task(Of T) to Outcome(Of T, TError))
  fullName: Lemonad.ErrorHandling.Outcome<T, TError>.Implicit(System.Threading.Tasks.Task<T> to Lemonad.ErrorHandling.Outcome<T, TError>)
  fullName.vb: Lemonad.ErrorHandling.Outcome(Of T, TError).Widening(System.Threading.Tasks.Task(Of T) to Lemonad.ErrorHandling.Outcome(Of T, TError))
  nameWithType: Outcome<T, TError>.Implicit(Task<T> to Outcome<T, TError>)
  nameWithType.vb: Outcome(Of T, TError).Widening(Task(Of T) to Outcome(Of T, TError))
- uid: Lemonad.ErrorHandling.Outcome`2.op_Implicit(System.Threading.Tasks.Task{`1})~Lemonad.ErrorHandling.Outcome{`0,`1}
  name: Implicit(Task<TError> to Outcome<T, TError>)
  href: api/Lemonad.ErrorHandling.Outcome-2.html#Lemonad_ErrorHandling_Outcome_2_op_Implicit_System_Threading_Tasks_Task__1___Lemonad_ErrorHandling_Outcome__0__1_
  commentId: M:Lemonad.ErrorHandling.Outcome`2.op_Implicit(System.Threading.Tasks.Task{`1})~Lemonad.ErrorHandling.Outcome{`0,`1}
  name.vb: Widening(Task(Of TError) to Outcome(Of T, TError))
  fullName: Lemonad.ErrorHandling.Outcome<T, TError>.Implicit(System.Threading.Tasks.Task<TError> to Lemonad.ErrorHandling.Outcome<T, TError>)
  fullName.vb: Lemonad.ErrorHandling.Outcome(Of T, TError).Widening(System.Threading.Tasks.Task(Of TError) to Lemonad.ErrorHandling.Outcome(Of T, TError))
  nameWithType: Outcome<T, TError>.Implicit(Task<TError> to Outcome<T, TError>)
  nameWithType.vb: Outcome(Of T, TError).Widening(Task(Of TError) to Outcome(Of T, TError))
- uid: Lemonad.ErrorHandling.Outcome`2.op_Implicit(System.Threading.Tasks.Task{Lemonad.ErrorHandling.Result{`0,`1}})~Lemonad.ErrorHandling.Outcome{`0,`1}
  name: Implicit(Task<Result<T, TError>> to Outcome<T, TError>)
  href: api/Lemonad.ErrorHandling.Outcome-2.html#Lemonad_ErrorHandling_Outcome_2_op_Implicit_System_Threading_Tasks_Task_Lemonad_ErrorHandling_Result__0__1____Lemonad_ErrorHandling_Outcome__0__1_
  commentId: M:Lemonad.ErrorHandling.Outcome`2.op_Implicit(System.Threading.Tasks.Task{Lemonad.ErrorHandling.Result{`0,`1}})~Lemonad.ErrorHandling.Outcome{`0,`1}
  name.vb: Widening(Task(Of Result(Of T, TError)) to Outcome(Of T, TError))
  fullName: Lemonad.ErrorHandling.Outcome<T, TError>.Implicit(System.Threading.Tasks.Task<Lemonad.ErrorHandling.Result<T, TError>> to Lemonad.ErrorHandling.Outcome<T, TError>)
  fullName.vb: Lemonad.ErrorHandling.Outcome(Of T, TError).Widening(System.Threading.Tasks.Task(Of Lemonad.ErrorHandling.Result(Of T, TError)) to Lemonad.ErrorHandling.Outcome(Of T, TError))
  nameWithType: Outcome<T, TError>.Implicit(Task<Result<T, TError>> to Outcome<T, TError>)
  nameWithType.vb: Outcome(Of T, TError).Widening(Task(Of Result(Of T, TError)) to Outcome(Of T, TError))
- uid: Lemonad.ErrorHandling.Outcome`2.op_Implicit*
  name: Implicit
  href: api/Lemonad.ErrorHandling.Outcome-2.html#Lemonad_ErrorHandling_Outcome_2_op_Implicit_
  commentId: Overload:Lemonad.ErrorHandling.Outcome`2.op_Implicit
  isSpec: "True"
  name.vb: Widening
  fullName: Lemonad.ErrorHandling.Outcome<T, TError>.Implicit
  fullName.vb: Lemonad.ErrorHandling.Outcome(Of T, TError).Widening
  nameWithType: Outcome<T, TError>.Implicit
  nameWithType.vb: Outcome(Of T, TError).Widening
- uid: Lemonad.ErrorHandling.Outcome`2.SafeCast*
  name: SafeCast
  href: api/Lemonad.ErrorHandling.Outcome-2.html#Lemonad_ErrorHandling_Outcome_2_SafeCast_
  commentId: Overload:Lemonad.ErrorHandling.Outcome`2.SafeCast
  isSpec: "True"
  fullName: Lemonad.ErrorHandling.Outcome<T, TError>.SafeCast
  fullName.vb: Lemonad.ErrorHandling.Outcome(Of T, TError).SafeCast
  nameWithType: Outcome<T, TError>.SafeCast
  nameWithType.vb: Outcome(Of T, TError).SafeCast
- uid: Lemonad.ErrorHandling.Outcome`2.SafeCast``1(System.Func{`1})
  name: SafeCast<TResult>(Func<TError>)
  href: api/Lemonad.ErrorHandling.Outcome-2.html#Lemonad_ErrorHandling_Outcome_2_SafeCast__1_System_Func__1__
  commentId: M:Lemonad.ErrorHandling.Outcome`2.SafeCast``1(System.Func{`1})
  name.vb: SafeCast(Of TResult)(Func(Of TError))
  fullName: Lemonad.ErrorHandling.Outcome<T, TError>.SafeCast<TResult>(System.Func<TError>)
  fullName.vb: Lemonad.ErrorHandling.Outcome(Of T, TError).SafeCast(Of TResult)(System.Func(Of TError))
  nameWithType: Outcome<T, TError>.SafeCast<TResult>(Func<TError>)
  nameWithType.vb: Outcome(Of T, TError).SafeCast(Of TResult)(Func(Of TError))
- uid: Lemonad.ErrorHandling.Outcome`2.Zip*
  name: Zip
  href: api/Lemonad.ErrorHandling.Outcome-2.html#Lemonad_ErrorHandling_Outcome_2_Zip_
  commentId: Overload:Lemonad.ErrorHandling.Outcome`2.Zip
  isSpec: "True"
  fullName: Lemonad.ErrorHandling.Outcome<T, TError>.Zip
  fullName.vb: Lemonad.ErrorHandling.Outcome(Of T, TError).Zip
  nameWithType: Outcome<T, TError>.Zip
  nameWithType.vb: Outcome(Of T, TError).Zip
- uid: Lemonad.ErrorHandling.Outcome`2.Zip``2(Lemonad.ErrorHandling.Outcome{``0,`1},System.Func{`0,``0,``1})
  name: Zip<TOther, TResult>(Outcome<TOther, TError>, Func<T, TOther, TResult>)
  href: api/Lemonad.ErrorHandling.Outcome-2.html#Lemonad_ErrorHandling_Outcome_2_Zip__2_Lemonad_ErrorHandling_Outcome___0__1__System_Func__0___0___1__
  commentId: M:Lemonad.ErrorHandling.Outcome`2.Zip``2(Lemonad.ErrorHandling.Outcome{``0,`1},System.Func{`0,``0,``1})
  name.vb: Zip(Of TOther, TResult)(Outcome(Of TOther, TError), Func(Of T, TOther, TResult))
  fullName: Lemonad.ErrorHandling.Outcome<T, TError>.Zip<TOther, TResult>(Lemonad.ErrorHandling.Outcome<TOther, TError>, System.Func<T, TOther, TResult>)
  fullName.vb: Lemonad.ErrorHandling.Outcome(Of T, TError).Zip(Of TOther, TResult)(Lemonad.ErrorHandling.Outcome(Of TOther, TError), System.Func(Of T, TOther, TResult))
  nameWithType: Outcome<T, TError>.Zip<TOther, TResult>(Outcome<TOther, TError>, Func<T, TOther, TResult>)
  nameWithType.vb: Outcome(Of T, TError).Zip(Of TOther, TResult)(Outcome(Of TOther, TError), Func(Of T, TOther, TResult))
- uid: Lemonad.ErrorHandling.Outcome`2.Zip``2(Lemonad.ErrorHandling.Result{``0,`1},System.Func{`0,``0,``1})
  name: Zip<TOther, TResult>(Result<TOther, TError>, Func<T, TOther, TResult>)
  href: api/Lemonad.ErrorHandling.Outcome-2.html#Lemonad_ErrorHandling_Outcome_2_Zip__2_Lemonad_ErrorHandling_Result___0__1__System_Func__0___0___1__
  commentId: M:Lemonad.ErrorHandling.Outcome`2.Zip``2(Lemonad.ErrorHandling.Result{``0,`1},System.Func{`0,``0,``1})
  name.vb: Zip(Of TOther, TResult)(Result(Of TOther, TError), Func(Of T, TOther, TResult))
  fullName: Lemonad.ErrorHandling.Outcome<T, TError>.Zip<TOther, TResult>(Lemonad.ErrorHandling.Result<TOther, TError>, System.Func<T, TOther, TResult>)
  fullName.vb: Lemonad.ErrorHandling.Outcome(Of T, TError).Zip(Of TOther, TResult)(Lemonad.ErrorHandling.Result(Of TOther, TError), System.Func(Of T, TOther, TResult))
  nameWithType: Outcome<T, TError>.Zip<TOther, TResult>(Result<TOther, TError>, Func<T, TOther, TResult>)
  nameWithType.vb: Outcome(Of T, TError).Zip(Of TOther, TResult)(Result(Of TOther, TError), Func(Of T, TOther, TResult))
- uid: Lemonad.ErrorHandling.Outcome`2.Zip``2(System.Threading.Tasks.Task{Lemonad.ErrorHandling.Result{``0,`1}},System.Func{`0,``0,``1})
  name: Zip<TOther, TResult>(Task<Result<TOther, TError>>, Func<T, TOther, TResult>)
  href: api/Lemonad.ErrorHandling.Outcome-2.html#Lemonad_ErrorHandling_Outcome_2_Zip__2_System_Threading_Tasks_Task_Lemonad_ErrorHandling_Result___0__1___System_Func__0___0___1__
  commentId: M:Lemonad.ErrorHandling.Outcome`2.Zip``2(System.Threading.Tasks.Task{Lemonad.ErrorHandling.Result{``0,`1}},System.Func{`0,``0,``1})
  name.vb: Zip(Of TOther, TResult)(Task(Of Result(Of TOther, TError)), Func(Of T, TOther, TResult))
  fullName: Lemonad.ErrorHandling.Outcome<T, TError>.Zip<TOther, TResult>(System.Threading.Tasks.Task<Lemonad.ErrorHandling.Result<TOther, TError>>, System.Func<T, TOther, TResult>)
  fullName.vb: Lemonad.ErrorHandling.Outcome(Of T, TError).Zip(Of TOther, TResult)(System.Threading.Tasks.Task(Of Lemonad.ErrorHandling.Result(Of TOther, TError)), System.Func(Of T, TOther, TResult))
  nameWithType: Outcome<T, TError>.Zip<TOther, TResult>(Task<Result<TOther, TError>>, Func<T, TOther, TResult>)
  nameWithType.vb: Outcome(Of T, TError).Zip(Of TOther, TResult)(Task(Of Result(Of TOther, TError)), Func(Of T, TOther, TResult))
- uid: Lemonad.ErrorHandling.Parsers
  name: Lemonad.ErrorHandling.Parsers
  href: api/Lemonad.ErrorHandling.Parsers.html
  commentId: N:Lemonad.ErrorHandling.Parsers
  fullName: Lemonad.ErrorHandling.Parsers
  nameWithType: Lemonad.ErrorHandling.Parsers
- uid: Lemonad.ErrorHandling.Parsers.MaybeParsers
  name: MaybeParsers
  href: api/Lemonad.ErrorHandling.Parsers.MaybeParsers.html
  commentId: T:Lemonad.ErrorHandling.Parsers.MaybeParsers
  fullName: Lemonad.ErrorHandling.Parsers.MaybeParsers
  nameWithType: MaybeParsers
- uid: Lemonad.ErrorHandling.Parsers.MaybeParsers.Bool(System.String)
  name: Bool(String)
  href: api/Lemonad.ErrorHandling.Parsers.MaybeParsers.html#Lemonad_ErrorHandling_Parsers_MaybeParsers_Bool_System_String_
  commentId: M:Lemonad.ErrorHandling.Parsers.MaybeParsers.Bool(System.String)
  fullName: Lemonad.ErrorHandling.Parsers.MaybeParsers.Bool(System.String)
  nameWithType: MaybeParsers.Bool(String)
- uid: Lemonad.ErrorHandling.Parsers.MaybeParsers.Bool*
  name: Bool
  href: api/Lemonad.ErrorHandling.Parsers.MaybeParsers.html#Lemonad_ErrorHandling_Parsers_MaybeParsers_Bool_
  commentId: Overload:Lemonad.ErrorHandling.Parsers.MaybeParsers.Bool
  isSpec: "True"
  fullName: Lemonad.ErrorHandling.Parsers.MaybeParsers.Bool
  nameWithType: MaybeParsers.Bool
- uid: Lemonad.ErrorHandling.Parsers.MaybeParsers.DateTime(System.String)
  name: DateTime(String)
  href: api/Lemonad.ErrorHandling.Parsers.MaybeParsers.html#Lemonad_ErrorHandling_Parsers_MaybeParsers_DateTime_System_String_
  commentId: M:Lemonad.ErrorHandling.Parsers.MaybeParsers.DateTime(System.String)
  fullName: Lemonad.ErrorHandling.Parsers.MaybeParsers.DateTime(System.String)
  nameWithType: MaybeParsers.DateTime(String)
- uid: Lemonad.ErrorHandling.Parsers.MaybeParsers.DateTime(System.String,System.Globalization.DateTimeStyles,System.IFormatProvider)
  name: DateTime(String, DateTimeStyles, IFormatProvider)
  href: api/Lemonad.ErrorHandling.Parsers.MaybeParsers.html#Lemonad_ErrorHandling_Parsers_MaybeParsers_DateTime_System_String_System_Globalization_DateTimeStyles_System_IFormatProvider_
  commentId: M:Lemonad.ErrorHandling.Parsers.MaybeParsers.DateTime(System.String,System.Globalization.DateTimeStyles,System.IFormatProvider)
  fullName: Lemonad.ErrorHandling.Parsers.MaybeParsers.DateTime(System.String, System.Globalization.DateTimeStyles, System.IFormatProvider)
  nameWithType: MaybeParsers.DateTime(String, DateTimeStyles, IFormatProvider)
- uid: Lemonad.ErrorHandling.Parsers.MaybeParsers.DateTime*
  name: DateTime
  href: api/Lemonad.ErrorHandling.Parsers.MaybeParsers.html#Lemonad_ErrorHandling_Parsers_MaybeParsers_DateTime_
  commentId: Overload:Lemonad.ErrorHandling.Parsers.MaybeParsers.DateTime
  isSpec: "True"
  fullName: Lemonad.ErrorHandling.Parsers.MaybeParsers.DateTime
  nameWithType: MaybeParsers.DateTime
- uid: Lemonad.ErrorHandling.Parsers.MaybeParsers.DateTimeExact(System.String,System.String,System.Globalization.DateTimeStyles,System.IFormatProvider)
  name: DateTimeExact(String, String, DateTimeStyles, IFormatProvider)
  href: api/Lemonad.ErrorHandling.Parsers.MaybeParsers.html#Lemonad_ErrorHandling_Parsers_MaybeParsers_DateTimeExact_System_String_System_String_System_Globalization_DateTimeStyles_System_IFormatProvider_
  commentId: M:Lemonad.ErrorHandling.Parsers.MaybeParsers.DateTimeExact(System.String,System.String,System.Globalization.DateTimeStyles,System.IFormatProvider)
  fullName: Lemonad.ErrorHandling.Parsers.MaybeParsers.DateTimeExact(System.String, System.String, System.Globalization.DateTimeStyles, System.IFormatProvider)
  nameWithType: MaybeParsers.DateTimeExact(String, String, DateTimeStyles, IFormatProvider)
- uid: Lemonad.ErrorHandling.Parsers.MaybeParsers.DateTimeExact(System.String,System.String[],System.Globalization.DateTimeStyles,System.IFormatProvider)
  name: DateTimeExact(String, String[], DateTimeStyles, IFormatProvider)
  href: api/Lemonad.ErrorHandling.Parsers.MaybeParsers.html#Lemonad_ErrorHandling_Parsers_MaybeParsers_DateTimeExact_System_String_System_String___System_Globalization_DateTimeStyles_System_IFormatProvider_
  commentId: M:Lemonad.ErrorHandling.Parsers.MaybeParsers.DateTimeExact(System.String,System.String[],System.Globalization.DateTimeStyles,System.IFormatProvider)
  name.vb: DateTimeExact(String, String(), DateTimeStyles, IFormatProvider)
  fullName: Lemonad.ErrorHandling.Parsers.MaybeParsers.DateTimeExact(System.String, System.String[], System.Globalization.DateTimeStyles, System.IFormatProvider)
  fullName.vb: Lemonad.ErrorHandling.Parsers.MaybeParsers.DateTimeExact(System.String, System.String(), System.Globalization.DateTimeStyles, System.IFormatProvider)
  nameWithType: MaybeParsers.DateTimeExact(String, String[], DateTimeStyles, IFormatProvider)
  nameWithType.vb: MaybeParsers.DateTimeExact(String, String(), DateTimeStyles, IFormatProvider)
- uid: Lemonad.ErrorHandling.Parsers.MaybeParsers.DateTimeExact*
  name: DateTimeExact
  href: api/Lemonad.ErrorHandling.Parsers.MaybeParsers.html#Lemonad_ErrorHandling_Parsers_MaybeParsers_DateTimeExact_
  commentId: Overload:Lemonad.ErrorHandling.Parsers.MaybeParsers.DateTimeExact
  isSpec: "True"
  fullName: Lemonad.ErrorHandling.Parsers.MaybeParsers.DateTimeExact
  nameWithType: MaybeParsers.DateTimeExact
- uid: Lemonad.ErrorHandling.Parsers.MaybeParsers.Decimal(System.String)
  name: Decimal(String)
  href: api/Lemonad.ErrorHandling.Parsers.MaybeParsers.html#Lemonad_ErrorHandling_Parsers_MaybeParsers_Decimal_System_String_
  commentId: M:Lemonad.ErrorHandling.Parsers.MaybeParsers.Decimal(System.String)
  fullName: Lemonad.ErrorHandling.Parsers.MaybeParsers.Decimal(System.String)
  nameWithType: MaybeParsers.Decimal(String)
- uid: Lemonad.ErrorHandling.Parsers.MaybeParsers.Decimal(System.String,System.Globalization.NumberStyles,System.IFormatProvider)
  name: Decimal(String, NumberStyles, IFormatProvider)
  href: api/Lemonad.ErrorHandling.Parsers.MaybeParsers.html#Lemonad_ErrorHandling_Parsers_MaybeParsers_Decimal_System_String_System_Globalization_NumberStyles_System_IFormatProvider_
  commentId: M:Lemonad.ErrorHandling.Parsers.MaybeParsers.Decimal(System.String,System.Globalization.NumberStyles,System.IFormatProvider)
  fullName: Lemonad.ErrorHandling.Parsers.MaybeParsers.Decimal(System.String, System.Globalization.NumberStyles, System.IFormatProvider)
  nameWithType: MaybeParsers.Decimal(String, NumberStyles, IFormatProvider)
- uid: Lemonad.ErrorHandling.Parsers.MaybeParsers.Decimal*
  name: Decimal
  href: api/Lemonad.ErrorHandling.Parsers.MaybeParsers.html#Lemonad_ErrorHandling_Parsers_MaybeParsers_Decimal_
  commentId: Overload:Lemonad.ErrorHandling.Parsers.MaybeParsers.Decimal
  isSpec: "True"
  fullName: Lemonad.ErrorHandling.Parsers.MaybeParsers.Decimal
  nameWithType: MaybeParsers.Decimal
- uid: Lemonad.ErrorHandling.Parsers.MaybeParsers.Double(System.String)
  name: Double(String)
  href: api/Lemonad.ErrorHandling.Parsers.MaybeParsers.html#Lemonad_ErrorHandling_Parsers_MaybeParsers_Double_System_String_
  commentId: M:Lemonad.ErrorHandling.Parsers.MaybeParsers.Double(System.String)
  fullName: Lemonad.ErrorHandling.Parsers.MaybeParsers.Double(System.String)
  nameWithType: MaybeParsers.Double(String)
- uid: Lemonad.ErrorHandling.Parsers.MaybeParsers.Double(System.String,System.Globalization.NumberStyles,System.IFormatProvider)
  name: Double(String, NumberStyles, IFormatProvider)
  href: api/Lemonad.ErrorHandling.Parsers.MaybeParsers.html#Lemonad_ErrorHandling_Parsers_MaybeParsers_Double_System_String_System_Globalization_NumberStyles_System_IFormatProvider_
  commentId: M:Lemonad.ErrorHandling.Parsers.MaybeParsers.Double(System.String,System.Globalization.NumberStyles,System.IFormatProvider)
  fullName: Lemonad.ErrorHandling.Parsers.MaybeParsers.Double(System.String, System.Globalization.NumberStyles, System.IFormatProvider)
  nameWithType: MaybeParsers.Double(String, NumberStyles, IFormatProvider)
- uid: Lemonad.ErrorHandling.Parsers.MaybeParsers.Double*
  name: Double
  href: api/Lemonad.ErrorHandling.Parsers.MaybeParsers.html#Lemonad_ErrorHandling_Parsers_MaybeParsers_Double_
  commentId: Overload:Lemonad.ErrorHandling.Parsers.MaybeParsers.Double
  isSpec: "True"
  fullName: Lemonad.ErrorHandling.Parsers.MaybeParsers.Double
  nameWithType: MaybeParsers.Double
- uid: Lemonad.ErrorHandling.Parsers.MaybeParsers.Enum*
  name: Enum
  href: api/Lemonad.ErrorHandling.Parsers.MaybeParsers.html#Lemonad_ErrorHandling_Parsers_MaybeParsers_Enum_
  commentId: Overload:Lemonad.ErrorHandling.Parsers.MaybeParsers.Enum
  isSpec: "True"
  fullName: Lemonad.ErrorHandling.Parsers.MaybeParsers.Enum
  nameWithType: MaybeParsers.Enum
- uid: Lemonad.ErrorHandling.Parsers.MaybeParsers.Enum``1(System.String)
  name: Enum<TEnum>(String)
  href: api/Lemonad.ErrorHandling.Parsers.MaybeParsers.html#Lemonad_ErrorHandling_Parsers_MaybeParsers_Enum__1_System_String_
  commentId: M:Lemonad.ErrorHandling.Parsers.MaybeParsers.Enum``1(System.String)
  name.vb: Enum(Of TEnum)(String)
  fullName: Lemonad.ErrorHandling.Parsers.MaybeParsers.Enum<TEnum>(System.String)
  fullName.vb: Lemonad.ErrorHandling.Parsers.MaybeParsers.Enum(Of TEnum)(System.String)
  nameWithType: MaybeParsers.Enum<TEnum>(String)
  nameWithType.vb: MaybeParsers.Enum(Of TEnum)(String)
- uid: Lemonad.ErrorHandling.Parsers.MaybeParsers.Enum``1(System.String,System.Boolean)
  name: Enum<TEnum>(String, Boolean)
  href: api/Lemonad.ErrorHandling.Parsers.MaybeParsers.html#Lemonad_ErrorHandling_Parsers_MaybeParsers_Enum__1_System_String_System_Boolean_
  commentId: M:Lemonad.ErrorHandling.Parsers.MaybeParsers.Enum``1(System.String,System.Boolean)
  name.vb: Enum(Of TEnum)(String, Boolean)
  fullName: Lemonad.ErrorHandling.Parsers.MaybeParsers.Enum<TEnum>(System.String, System.Boolean)
  fullName.vb: Lemonad.ErrorHandling.Parsers.MaybeParsers.Enum(Of TEnum)(System.String, System.Boolean)
  nameWithType: MaybeParsers.Enum<TEnum>(String, Boolean)
  nameWithType.vb: MaybeParsers.Enum(Of TEnum)(String, Boolean)
- uid: Lemonad.ErrorHandling.Parsers.MaybeParsers.Int(System.String)
  name: Int(String)
  href: api/Lemonad.ErrorHandling.Parsers.MaybeParsers.html#Lemonad_ErrorHandling_Parsers_MaybeParsers_Int_System_String_
  commentId: M:Lemonad.ErrorHandling.Parsers.MaybeParsers.Int(System.String)
  fullName: Lemonad.ErrorHandling.Parsers.MaybeParsers.Int(System.String)
  nameWithType: MaybeParsers.Int(String)
- uid: Lemonad.ErrorHandling.Parsers.MaybeParsers.Int(System.String,System.Globalization.NumberStyles,System.IFormatProvider)
  name: Int(String, NumberStyles, IFormatProvider)
  href: api/Lemonad.ErrorHandling.Parsers.MaybeParsers.html#Lemonad_ErrorHandling_Parsers_MaybeParsers_Int_System_String_System_Globalization_NumberStyles_System_IFormatProvider_
  commentId: M:Lemonad.ErrorHandling.Parsers.MaybeParsers.Int(System.String,System.Globalization.NumberStyles,System.IFormatProvider)
  fullName: Lemonad.ErrorHandling.Parsers.MaybeParsers.Int(System.String, System.Globalization.NumberStyles, System.IFormatProvider)
  nameWithType: MaybeParsers.Int(String, NumberStyles, IFormatProvider)
- uid: Lemonad.ErrorHandling.Parsers.MaybeParsers.Int*
  name: Int
  href: api/Lemonad.ErrorHandling.Parsers.MaybeParsers.html#Lemonad_ErrorHandling_Parsers_MaybeParsers_Int_
  commentId: Overload:Lemonad.ErrorHandling.Parsers.MaybeParsers.Int
  isSpec: "True"
  fullName: Lemonad.ErrorHandling.Parsers.MaybeParsers.Int
  nameWithType: MaybeParsers.Int
- uid: Lemonad.ErrorHandling.Parsers.MaybeParsers.Long(System.String)
  name: Long(String)
  href: api/Lemonad.ErrorHandling.Parsers.MaybeParsers.html#Lemonad_ErrorHandling_Parsers_MaybeParsers_Long_System_String_
  commentId: M:Lemonad.ErrorHandling.Parsers.MaybeParsers.Long(System.String)
  fullName: Lemonad.ErrorHandling.Parsers.MaybeParsers.Long(System.String)
  nameWithType: MaybeParsers.Long(String)
- uid: Lemonad.ErrorHandling.Parsers.MaybeParsers.Long(System.String,System.Globalization.NumberStyles,System.IFormatProvider)
  name: Long(String, NumberStyles, IFormatProvider)
  href: api/Lemonad.ErrorHandling.Parsers.MaybeParsers.html#Lemonad_ErrorHandling_Parsers_MaybeParsers_Long_System_String_System_Globalization_NumberStyles_System_IFormatProvider_
  commentId: M:Lemonad.ErrorHandling.Parsers.MaybeParsers.Long(System.String,System.Globalization.NumberStyles,System.IFormatProvider)
  fullName: Lemonad.ErrorHandling.Parsers.MaybeParsers.Long(System.String, System.Globalization.NumberStyles, System.IFormatProvider)
  nameWithType: MaybeParsers.Long(String, NumberStyles, IFormatProvider)
- uid: Lemonad.ErrorHandling.Parsers.MaybeParsers.Long*
  name: Long
  href: api/Lemonad.ErrorHandling.Parsers.MaybeParsers.html#Lemonad_ErrorHandling_Parsers_MaybeParsers_Long_
  commentId: Overload:Lemonad.ErrorHandling.Parsers.MaybeParsers.Long
  isSpec: "True"
  fullName: Lemonad.ErrorHandling.Parsers.MaybeParsers.Long
  nameWithType: MaybeParsers.Long
- uid: Lemonad.ErrorHandling.Parsers.ResultParsers
  name: ResultParsers
  href: api/Lemonad.ErrorHandling.Parsers.ResultParsers.html
  commentId: T:Lemonad.ErrorHandling.Parsers.ResultParsers
  fullName: Lemonad.ErrorHandling.Parsers.ResultParsers
  nameWithType: ResultParsers
- uid: Lemonad.ErrorHandling.Parsers.ResultParsers.Bool(System.String)
  name: Bool(String)
  href: api/Lemonad.ErrorHandling.Parsers.ResultParsers.html#Lemonad_ErrorHandling_Parsers_ResultParsers_Bool_System_String_
  commentId: M:Lemonad.ErrorHandling.Parsers.ResultParsers.Bool(System.String)
  fullName: Lemonad.ErrorHandling.Parsers.ResultParsers.Bool(System.String)
  nameWithType: ResultParsers.Bool(String)
- uid: Lemonad.ErrorHandling.Parsers.ResultParsers.Bool*
  name: Bool
  href: api/Lemonad.ErrorHandling.Parsers.ResultParsers.html#Lemonad_ErrorHandling_Parsers_ResultParsers_Bool_
  commentId: Overload:Lemonad.ErrorHandling.Parsers.ResultParsers.Bool
  isSpec: "True"
  fullName: Lemonad.ErrorHandling.Parsers.ResultParsers.Bool
  nameWithType: ResultParsers.Bool
- uid: Lemonad.ErrorHandling.Parsers.ResultParsers.DateTime(System.String)
  name: DateTime(String)
  href: api/Lemonad.ErrorHandling.Parsers.ResultParsers.html#Lemonad_ErrorHandling_Parsers_ResultParsers_DateTime_System_String_
  commentId: M:Lemonad.ErrorHandling.Parsers.ResultParsers.DateTime(System.String)
  fullName: Lemonad.ErrorHandling.Parsers.ResultParsers.DateTime(System.String)
  nameWithType: ResultParsers.DateTime(String)
- uid: Lemonad.ErrorHandling.Parsers.ResultParsers.DateTime(System.String,System.Globalization.DateTimeStyles,System.IFormatProvider)
  name: DateTime(String, DateTimeStyles, IFormatProvider)
  href: api/Lemonad.ErrorHandling.Parsers.ResultParsers.html#Lemonad_ErrorHandling_Parsers_ResultParsers_DateTime_System_String_System_Globalization_DateTimeStyles_System_IFormatProvider_
  commentId: M:Lemonad.ErrorHandling.Parsers.ResultParsers.DateTime(System.String,System.Globalization.DateTimeStyles,System.IFormatProvider)
  fullName: Lemonad.ErrorHandling.Parsers.ResultParsers.DateTime(System.String, System.Globalization.DateTimeStyles, System.IFormatProvider)
  nameWithType: ResultParsers.DateTime(String, DateTimeStyles, IFormatProvider)
- uid: Lemonad.ErrorHandling.Parsers.ResultParsers.DateTime*
  name: DateTime
  href: api/Lemonad.ErrorHandling.Parsers.ResultParsers.html#Lemonad_ErrorHandling_Parsers_ResultParsers_DateTime_
  commentId: Overload:Lemonad.ErrorHandling.Parsers.ResultParsers.DateTime
  isSpec: "True"
  fullName: Lemonad.ErrorHandling.Parsers.ResultParsers.DateTime
  nameWithType: ResultParsers.DateTime
- uid: Lemonad.ErrorHandling.Parsers.ResultParsers.DateTimeExact(System.String,System.String,System.Globalization.DateTimeStyles,System.IFormatProvider)
  name: DateTimeExact(String, String, DateTimeStyles, IFormatProvider)
  href: api/Lemonad.ErrorHandling.Parsers.ResultParsers.html#Lemonad_ErrorHandling_Parsers_ResultParsers_DateTimeExact_System_String_System_String_System_Globalization_DateTimeStyles_System_IFormatProvider_
  commentId: M:Lemonad.ErrorHandling.Parsers.ResultParsers.DateTimeExact(System.String,System.String,System.Globalization.DateTimeStyles,System.IFormatProvider)
  fullName: Lemonad.ErrorHandling.Parsers.ResultParsers.DateTimeExact(System.String, System.String, System.Globalization.DateTimeStyles, System.IFormatProvider)
  nameWithType: ResultParsers.DateTimeExact(String, String, DateTimeStyles, IFormatProvider)
- uid: Lemonad.ErrorHandling.Parsers.ResultParsers.DateTimeExact(System.String,System.String[],System.Globalization.DateTimeStyles,System.IFormatProvider)
  name: DateTimeExact(String, String[], DateTimeStyles, IFormatProvider)
  href: api/Lemonad.ErrorHandling.Parsers.ResultParsers.html#Lemonad_ErrorHandling_Parsers_ResultParsers_DateTimeExact_System_String_System_String___System_Globalization_DateTimeStyles_System_IFormatProvider_
  commentId: M:Lemonad.ErrorHandling.Parsers.ResultParsers.DateTimeExact(System.String,System.String[],System.Globalization.DateTimeStyles,System.IFormatProvider)
  name.vb: DateTimeExact(String, String(), DateTimeStyles, IFormatProvider)
  fullName: Lemonad.ErrorHandling.Parsers.ResultParsers.DateTimeExact(System.String, System.String[], System.Globalization.DateTimeStyles, System.IFormatProvider)
  fullName.vb: Lemonad.ErrorHandling.Parsers.ResultParsers.DateTimeExact(System.String, System.String(), System.Globalization.DateTimeStyles, System.IFormatProvider)
  nameWithType: ResultParsers.DateTimeExact(String, String[], DateTimeStyles, IFormatProvider)
  nameWithType.vb: ResultParsers.DateTimeExact(String, String(), DateTimeStyles, IFormatProvider)
- uid: Lemonad.ErrorHandling.Parsers.ResultParsers.DateTimeExact*
  name: DateTimeExact
  href: api/Lemonad.ErrorHandling.Parsers.ResultParsers.html#Lemonad_ErrorHandling_Parsers_ResultParsers_DateTimeExact_
  commentId: Overload:Lemonad.ErrorHandling.Parsers.ResultParsers.DateTimeExact
  isSpec: "True"
  fullName: Lemonad.ErrorHandling.Parsers.ResultParsers.DateTimeExact
  nameWithType: ResultParsers.DateTimeExact
- uid: Lemonad.ErrorHandling.Parsers.ResultParsers.Decimal(System.String)
  name: Decimal(String)
  href: api/Lemonad.ErrorHandling.Parsers.ResultParsers.html#Lemonad_ErrorHandling_Parsers_ResultParsers_Decimal_System_String_
  commentId: M:Lemonad.ErrorHandling.Parsers.ResultParsers.Decimal(System.String)
  fullName: Lemonad.ErrorHandling.Parsers.ResultParsers.Decimal(System.String)
  nameWithType: ResultParsers.Decimal(String)
- uid: Lemonad.ErrorHandling.Parsers.ResultParsers.Decimal(System.String,System.Globalization.NumberStyles,System.IFormatProvider)
  name: Decimal(String, NumberStyles, IFormatProvider)
  href: api/Lemonad.ErrorHandling.Parsers.ResultParsers.html#Lemonad_ErrorHandling_Parsers_ResultParsers_Decimal_System_String_System_Globalization_NumberStyles_System_IFormatProvider_
  commentId: M:Lemonad.ErrorHandling.Parsers.ResultParsers.Decimal(System.String,System.Globalization.NumberStyles,System.IFormatProvider)
  fullName: Lemonad.ErrorHandling.Parsers.ResultParsers.Decimal(System.String, System.Globalization.NumberStyles, System.IFormatProvider)
  nameWithType: ResultParsers.Decimal(String, NumberStyles, IFormatProvider)
- uid: Lemonad.ErrorHandling.Parsers.ResultParsers.Decimal*
  name: Decimal
  href: api/Lemonad.ErrorHandling.Parsers.ResultParsers.html#Lemonad_ErrorHandling_Parsers_ResultParsers_Decimal_
  commentId: Overload:Lemonad.ErrorHandling.Parsers.ResultParsers.Decimal
  isSpec: "True"
  fullName: Lemonad.ErrorHandling.Parsers.ResultParsers.Decimal
  nameWithType: ResultParsers.Decimal
- uid: Lemonad.ErrorHandling.Parsers.ResultParsers.Double(System.String)
  name: Double(String)
  href: api/Lemonad.ErrorHandling.Parsers.ResultParsers.html#Lemonad_ErrorHandling_Parsers_ResultParsers_Double_System_String_
  commentId: M:Lemonad.ErrorHandling.Parsers.ResultParsers.Double(System.String)
  fullName: Lemonad.ErrorHandling.Parsers.ResultParsers.Double(System.String)
  nameWithType: ResultParsers.Double(String)
- uid: Lemonad.ErrorHandling.Parsers.ResultParsers.Double(System.String,System.Globalization.NumberStyles,System.IFormatProvider)
  name: Double(String, NumberStyles, IFormatProvider)
  href: api/Lemonad.ErrorHandling.Parsers.ResultParsers.html#Lemonad_ErrorHandling_Parsers_ResultParsers_Double_System_String_System_Globalization_NumberStyles_System_IFormatProvider_
  commentId: M:Lemonad.ErrorHandling.Parsers.ResultParsers.Double(System.String,System.Globalization.NumberStyles,System.IFormatProvider)
  fullName: Lemonad.ErrorHandling.Parsers.ResultParsers.Double(System.String, System.Globalization.NumberStyles, System.IFormatProvider)
  nameWithType: ResultParsers.Double(String, NumberStyles, IFormatProvider)
- uid: Lemonad.ErrorHandling.Parsers.ResultParsers.Double*
  name: Double
  href: api/Lemonad.ErrorHandling.Parsers.ResultParsers.html#Lemonad_ErrorHandling_Parsers_ResultParsers_Double_
  commentId: Overload:Lemonad.ErrorHandling.Parsers.ResultParsers.Double
  isSpec: "True"
  fullName: Lemonad.ErrorHandling.Parsers.ResultParsers.Double
  nameWithType: ResultParsers.Double
- uid: Lemonad.ErrorHandling.Parsers.ResultParsers.Enum*
  name: Enum
  href: api/Lemonad.ErrorHandling.Parsers.ResultParsers.html#Lemonad_ErrorHandling_Parsers_ResultParsers_Enum_
  commentId: Overload:Lemonad.ErrorHandling.Parsers.ResultParsers.Enum
  isSpec: "True"
  fullName: Lemonad.ErrorHandling.Parsers.ResultParsers.Enum
  nameWithType: ResultParsers.Enum
- uid: Lemonad.ErrorHandling.Parsers.ResultParsers.Enum``1(System.String)
  name: Enum<TEnum>(String)
  href: api/Lemonad.ErrorHandling.Parsers.ResultParsers.html#Lemonad_ErrorHandling_Parsers_ResultParsers_Enum__1_System_String_
  commentId: M:Lemonad.ErrorHandling.Parsers.ResultParsers.Enum``1(System.String)
  name.vb: Enum(Of TEnum)(String)
  fullName: Lemonad.ErrorHandling.Parsers.ResultParsers.Enum<TEnum>(System.String)
  fullName.vb: Lemonad.ErrorHandling.Parsers.ResultParsers.Enum(Of TEnum)(System.String)
  nameWithType: ResultParsers.Enum<TEnum>(String)
  nameWithType.vb: ResultParsers.Enum(Of TEnum)(String)
- uid: Lemonad.ErrorHandling.Parsers.ResultParsers.Enum``1(System.String,System.Boolean)
  name: Enum<TEnum>(String, Boolean)
  href: api/Lemonad.ErrorHandling.Parsers.ResultParsers.html#Lemonad_ErrorHandling_Parsers_ResultParsers_Enum__1_System_String_System_Boolean_
  commentId: M:Lemonad.ErrorHandling.Parsers.ResultParsers.Enum``1(System.String,System.Boolean)
  name.vb: Enum(Of TEnum)(String, Boolean)
  fullName: Lemonad.ErrorHandling.Parsers.ResultParsers.Enum<TEnum>(System.String, System.Boolean)
  fullName.vb: Lemonad.ErrorHandling.Parsers.ResultParsers.Enum(Of TEnum)(System.String, System.Boolean)
  nameWithType: ResultParsers.Enum<TEnum>(String, Boolean)
  nameWithType.vb: ResultParsers.Enum(Of TEnum)(String, Boolean)
- uid: Lemonad.ErrorHandling.Parsers.ResultParsers.Int(System.String)
  name: Int(String)
  href: api/Lemonad.ErrorHandling.Parsers.ResultParsers.html#Lemonad_ErrorHandling_Parsers_ResultParsers_Int_System_String_
  commentId: M:Lemonad.ErrorHandling.Parsers.ResultParsers.Int(System.String)
  fullName: Lemonad.ErrorHandling.Parsers.ResultParsers.Int(System.String)
  nameWithType: ResultParsers.Int(String)
- uid: Lemonad.ErrorHandling.Parsers.ResultParsers.Int(System.String,System.Globalization.NumberStyles,System.IFormatProvider)
  name: Int(String, NumberStyles, IFormatProvider)
  href: api/Lemonad.ErrorHandling.Parsers.ResultParsers.html#Lemonad_ErrorHandling_Parsers_ResultParsers_Int_System_String_System_Globalization_NumberStyles_System_IFormatProvider_
  commentId: M:Lemonad.ErrorHandling.Parsers.ResultParsers.Int(System.String,System.Globalization.NumberStyles,System.IFormatProvider)
  fullName: Lemonad.ErrorHandling.Parsers.ResultParsers.Int(System.String, System.Globalization.NumberStyles, System.IFormatProvider)
  nameWithType: ResultParsers.Int(String, NumberStyles, IFormatProvider)
- uid: Lemonad.ErrorHandling.Parsers.ResultParsers.Int*
  name: Int
  href: api/Lemonad.ErrorHandling.Parsers.ResultParsers.html#Lemonad_ErrorHandling_Parsers_ResultParsers_Int_
  commentId: Overload:Lemonad.ErrorHandling.Parsers.ResultParsers.Int
  isSpec: "True"
  fullName: Lemonad.ErrorHandling.Parsers.ResultParsers.Int
  nameWithType: ResultParsers.Int
- uid: Lemonad.ErrorHandling.Parsers.ResultParsers.Long(System.String)
  name: Long(String)
  href: api/Lemonad.ErrorHandling.Parsers.ResultParsers.html#Lemonad_ErrorHandling_Parsers_ResultParsers_Long_System_String_
  commentId: M:Lemonad.ErrorHandling.Parsers.ResultParsers.Long(System.String)
  fullName: Lemonad.ErrorHandling.Parsers.ResultParsers.Long(System.String)
  nameWithType: ResultParsers.Long(String)
- uid: Lemonad.ErrorHandling.Parsers.ResultParsers.Long(System.String,System.Globalization.NumberStyles,System.IFormatProvider)
  name: Long(String, NumberStyles, IFormatProvider)
  href: api/Lemonad.ErrorHandling.Parsers.ResultParsers.html#Lemonad_ErrorHandling_Parsers_ResultParsers_Long_System_String_System_Globalization_NumberStyles_System_IFormatProvider_
  commentId: M:Lemonad.ErrorHandling.Parsers.ResultParsers.Long(System.String,System.Globalization.NumberStyles,System.IFormatProvider)
  fullName: Lemonad.ErrorHandling.Parsers.ResultParsers.Long(System.String, System.Globalization.NumberStyles, System.IFormatProvider)
  nameWithType: ResultParsers.Long(String, NumberStyles, IFormatProvider)
- uid: Lemonad.ErrorHandling.Parsers.ResultParsers.Long*
  name: Long
  href: api/Lemonad.ErrorHandling.Parsers.ResultParsers.html#Lemonad_ErrorHandling_Parsers_ResultParsers_Long_
  commentId: Overload:Lemonad.ErrorHandling.Parsers.ResultParsers.Long
  isSpec: "True"
  fullName: Lemonad.ErrorHandling.Parsers.ResultParsers.Long
  nameWithType: ResultParsers.Long
- uid: Lemonad.ErrorHandling.Result`2
  name: Result<T, TError>
  href: api/Lemonad.ErrorHandling.Result-2.html
  commentId: T:Lemonad.ErrorHandling.Result`2
  name.vb: Result(Of T, TError)
  fullName: Lemonad.ErrorHandling.Result<T, TError>
  fullName.vb: Lemonad.ErrorHandling.Result(Of T, TError)
  nameWithType: Result<T, TError>
  nameWithType.vb: Result(Of T, TError)
- uid: Lemonad.ErrorHandling.Result`2.AsEnumerable
  name: AsEnumerable
  href: api/Lemonad.ErrorHandling.Result-2.html#Lemonad_ErrorHandling_Result_2_AsEnumerable
  commentId: P:Lemonad.ErrorHandling.Result`2.AsEnumerable
  fullName: Lemonad.ErrorHandling.Result<T, TError>.AsEnumerable
  fullName.vb: Lemonad.ErrorHandling.Result(Of T, TError).AsEnumerable
  nameWithType: Result<T, TError>.AsEnumerable
  nameWithType.vb: Result(Of T, TError).AsEnumerable
- uid: Lemonad.ErrorHandling.Result`2.AsEnumerable*
  name: AsEnumerable
  href: api/Lemonad.ErrorHandling.Result-2.html#Lemonad_ErrorHandling_Result_2_AsEnumerable_
  commentId: Overload:Lemonad.ErrorHandling.Result`2.AsEnumerable
  isSpec: "True"
  fullName: Lemonad.ErrorHandling.Result<T, TError>.AsEnumerable
  fullName.vb: Lemonad.ErrorHandling.Result(Of T, TError).AsEnumerable
  nameWithType: Result<T, TError>.AsEnumerable
  nameWithType.vb: Result(Of T, TError).AsEnumerable
- uid: Lemonad.ErrorHandling.Result`2.AsErrorEnumerable
  name: AsErrorEnumerable
  href: api/Lemonad.ErrorHandling.Result-2.html#Lemonad_ErrorHandling_Result_2_AsErrorEnumerable
  commentId: P:Lemonad.ErrorHandling.Result`2.AsErrorEnumerable
  fullName: Lemonad.ErrorHandling.Result<T, TError>.AsErrorEnumerable
  fullName.vb: Lemonad.ErrorHandling.Result(Of T, TError).AsErrorEnumerable
  nameWithType: Result<T, TError>.AsErrorEnumerable
  nameWithType.vb: Result(Of T, TError).AsErrorEnumerable
- uid: Lemonad.ErrorHandling.Result`2.AsErrorEnumerable*
  name: AsErrorEnumerable
  href: api/Lemonad.ErrorHandling.Result-2.html#Lemonad_ErrorHandling_Result_2_AsErrorEnumerable_
  commentId: Overload:Lemonad.ErrorHandling.Result`2.AsErrorEnumerable
  isSpec: "True"
  fullName: Lemonad.ErrorHandling.Result<T, TError>.AsErrorEnumerable
  fullName.vb: Lemonad.ErrorHandling.Result(Of T, TError).AsErrorEnumerable
  nameWithType: Result<T, TError>.AsErrorEnumerable
  nameWithType.vb: Result(Of T, TError).AsErrorEnumerable
- uid: Lemonad.ErrorHandling.Result`2.Cast*
  name: Cast
  href: api/Lemonad.ErrorHandling.Result-2.html#Lemonad_ErrorHandling_Result_2_Cast_
  commentId: Overload:Lemonad.ErrorHandling.Result`2.Cast
  isSpec: "True"
  fullName: Lemonad.ErrorHandling.Result<T, TError>.Cast
  fullName.vb: Lemonad.ErrorHandling.Result(Of T, TError).Cast
  nameWithType: Result<T, TError>.Cast
  nameWithType.vb: Result(Of T, TError).Cast
- uid: Lemonad.ErrorHandling.Result`2.Cast``1
  name: Cast<TResult>()
  href: api/Lemonad.ErrorHandling.Result-2.html#Lemonad_ErrorHandling_Result_2_Cast__1
  commentId: M:Lemonad.ErrorHandling.Result`2.Cast``1
  name.vb: Cast(Of TResult)()
  fullName: Lemonad.ErrorHandling.Result<T, TError>.Cast<TResult>()
  fullName.vb: Lemonad.ErrorHandling.Result(Of T, TError).Cast(Of TResult)()
  nameWithType: Result<T, TError>.Cast<TResult>()
  nameWithType.vb: Result(Of T, TError).Cast(Of TResult)()
- uid: Lemonad.ErrorHandling.Result`2.CastError*
  name: CastError
  href: api/Lemonad.ErrorHandling.Result-2.html#Lemonad_ErrorHandling_Result_2_CastError_
  commentId: Overload:Lemonad.ErrorHandling.Result`2.CastError
  isSpec: "True"
  fullName: Lemonad.ErrorHandling.Result<T, TError>.CastError
  fullName.vb: Lemonad.ErrorHandling.Result(Of T, TError).CastError
  nameWithType: Result<T, TError>.CastError
  nameWithType.vb: Result(Of T, TError).CastError
- uid: Lemonad.ErrorHandling.Result`2.CastError``1
  name: CastError<TResult>()
  href: api/Lemonad.ErrorHandling.Result-2.html#Lemonad_ErrorHandling_Result_2_CastError__1
  commentId: M:Lemonad.ErrorHandling.Result`2.CastError``1
  name.vb: CastError(Of TResult)()
  fullName: Lemonad.ErrorHandling.Result<T, TError>.CastError<TResult>()
  fullName.vb: Lemonad.ErrorHandling.Result(Of T, TError).CastError(Of TResult)()
  nameWithType: Result<T, TError>.CastError<TResult>()
  nameWithType.vb: Result(Of T, TError).CastError(Of TResult)()
- uid: Lemonad.ErrorHandling.Result`2.CompareTo(Lemonad.ErrorHandling.Result{`0,`1})
  name: CompareTo(Result<T, TError>)
  href: api/Lemonad.ErrorHandling.Result-2.html#Lemonad_ErrorHandling_Result_2_CompareTo_Lemonad_ErrorHandling_Result__0__1__
  commentId: M:Lemonad.ErrorHandling.Result`2.CompareTo(Lemonad.ErrorHandling.Result{`0,`1})
  name.vb: CompareTo(Result(Of T, TError))
  fullName: Lemonad.ErrorHandling.Result<T, TError>.CompareTo(Lemonad.ErrorHandling.Result<T, TError>)
  fullName.vb: Lemonad.ErrorHandling.Result(Of T, TError).CompareTo(Lemonad.ErrorHandling.Result(Of T, TError))
  nameWithType: Result<T, TError>.CompareTo(Result<T, TError>)
  nameWithType.vb: Result(Of T, TError).CompareTo(Result(Of T, TError))
- uid: Lemonad.ErrorHandling.Result`2.CompareTo*
  name: CompareTo
  href: api/Lemonad.ErrorHandling.Result-2.html#Lemonad_ErrorHandling_Result_2_CompareTo_
  commentId: Overload:Lemonad.ErrorHandling.Result`2.CompareTo
  isSpec: "True"
  fullName: Lemonad.ErrorHandling.Result<T, TError>.CompareTo
  fullName.vb: Lemonad.ErrorHandling.Result(Of T, TError).CompareTo
  nameWithType: Result<T, TError>.CompareTo
  nameWithType.vb: Result(Of T, TError).CompareTo
- uid: Lemonad.ErrorHandling.Result`2.Do(System.Action)
  name: Do(Action)
  href: api/Lemonad.ErrorHandling.Result-2.html#Lemonad_ErrorHandling_Result_2_Do_System_Action_
  commentId: M:Lemonad.ErrorHandling.Result`2.Do(System.Action)
  fullName: Lemonad.ErrorHandling.Result<T, TError>.Do(System.Action)
  fullName.vb: Lemonad.ErrorHandling.Result(Of T, TError).Do(System.Action)
  nameWithType: Result<T, TError>.Do(Action)
  nameWithType.vb: Result(Of T, TError).Do(Action)
- uid: Lemonad.ErrorHandling.Result`2.Do*
  name: Do
  href: api/Lemonad.ErrorHandling.Result-2.html#Lemonad_ErrorHandling_Result_2_Do_
  commentId: Overload:Lemonad.ErrorHandling.Result`2.Do
  isSpec: "True"
  fullName: Lemonad.ErrorHandling.Result<T, TError>.Do
  fullName.vb: Lemonad.ErrorHandling.Result(Of T, TError).Do
  nameWithType: Result<T, TError>.Do
  nameWithType.vb: Result(Of T, TError).Do
- uid: Lemonad.ErrorHandling.Result`2.DoWith(System.Action{`0})
  name: DoWith(Action<T>)
  href: api/Lemonad.ErrorHandling.Result-2.html#Lemonad_ErrorHandling_Result_2_DoWith_System_Action__0__
  commentId: M:Lemonad.ErrorHandling.Result`2.DoWith(System.Action{`0})
  name.vb: DoWith(Action(Of T))
  fullName: Lemonad.ErrorHandling.Result<T, TError>.DoWith(System.Action<T>)
  fullName.vb: Lemonad.ErrorHandling.Result(Of T, TError).DoWith(System.Action(Of T))
  nameWithType: Result<T, TError>.DoWith(Action<T>)
  nameWithType.vb: Result(Of T, TError).DoWith(Action(Of T))
- uid: Lemonad.ErrorHandling.Result`2.DoWith*
  name: DoWith
  href: api/Lemonad.ErrorHandling.Result-2.html#Lemonad_ErrorHandling_Result_2_DoWith_
  commentId: Overload:Lemonad.ErrorHandling.Result`2.DoWith
  isSpec: "True"
  fullName: Lemonad.ErrorHandling.Result<T, TError>.DoWith
  fullName.vb: Lemonad.ErrorHandling.Result(Of T, TError).DoWith
  nameWithType: Result<T, TError>.DoWith
  nameWithType.vb: Result(Of T, TError).DoWith
- uid: Lemonad.ErrorHandling.Result`2.DoWithError(System.Action{`1})
  name: DoWithError(Action<TError>)
  href: api/Lemonad.ErrorHandling.Result-2.html#Lemonad_ErrorHandling_Result_2_DoWithError_System_Action__1__
  commentId: M:Lemonad.ErrorHandling.Result`2.DoWithError(System.Action{`1})
  name.vb: DoWithError(Action(Of TError))
  fullName: Lemonad.ErrorHandling.Result<T, TError>.DoWithError(System.Action<TError>)
  fullName.vb: Lemonad.ErrorHandling.Result(Of T, TError).DoWithError(System.Action(Of TError))
  nameWithType: Result<T, TError>.DoWithError(Action<TError>)
  nameWithType.vb: Result(Of T, TError).DoWithError(Action(Of TError))
- uid: Lemonad.ErrorHandling.Result`2.DoWithError*
  name: DoWithError
  href: api/Lemonad.ErrorHandling.Result-2.html#Lemonad_ErrorHandling_Result_2_DoWithError_
  commentId: Overload:Lemonad.ErrorHandling.Result`2.DoWithError
  isSpec: "True"
  fullName: Lemonad.ErrorHandling.Result<T, TError>.DoWithError
  fullName.vb: Lemonad.ErrorHandling.Result(Of T, TError).DoWithError
  nameWithType: Result<T, TError>.DoWithError
  nameWithType.vb: Result(Of T, TError).DoWithError
- uid: Lemonad.ErrorHandling.Result`2.Equals(Lemonad.ErrorHandling.Result{`0,`1})
  name: Equals(Result<T, TError>)
  href: api/Lemonad.ErrorHandling.Result-2.html#Lemonad_ErrorHandling_Result_2_Equals_Lemonad_ErrorHandling_Result__0__1__
  commentId: M:Lemonad.ErrorHandling.Result`2.Equals(Lemonad.ErrorHandling.Result{`0,`1})
  name.vb: Equals(Result(Of T, TError))
  fullName: Lemonad.ErrorHandling.Result<T, TError>.Equals(Lemonad.ErrorHandling.Result<T, TError>)
  fullName.vb: Lemonad.ErrorHandling.Result(Of T, TError).Equals(Lemonad.ErrorHandling.Result(Of T, TError))
  nameWithType: Result<T, TError>.Equals(Result<T, TError>)
  nameWithType.vb: Result(Of T, TError).Equals(Result(Of T, TError))
- uid: Lemonad.ErrorHandling.Result`2.Equals(System.Object)
  name: Equals(Object)
  href: api/Lemonad.ErrorHandling.Result-2.html#Lemonad_ErrorHandling_Result_2_Equals_System_Object_
  commentId: M:Lemonad.ErrorHandling.Result`2.Equals(System.Object)
  fullName: Lemonad.ErrorHandling.Result<T, TError>.Equals(System.Object)
  fullName.vb: Lemonad.ErrorHandling.Result(Of T, TError).Equals(System.Object)
  nameWithType: Result<T, TError>.Equals(Object)
  nameWithType.vb: Result(Of T, TError).Equals(Object)
- uid: Lemonad.ErrorHandling.Result`2.Equals*
  name: Equals
  href: api/Lemonad.ErrorHandling.Result-2.html#Lemonad_ErrorHandling_Result_2_Equals_
  commentId: Overload:Lemonad.ErrorHandling.Result`2.Equals
  isSpec: "True"
  fullName: Lemonad.ErrorHandling.Result<T, TError>.Equals
  fullName.vb: Lemonad.ErrorHandling.Result(Of T, TError).Equals
  nameWithType: Result<T, TError>.Equals
  nameWithType.vb: Result(Of T, TError).Equals
- uid: Lemonad.ErrorHandling.Result`2.Filter(System.Func{`0,System.Boolean},System.Func{`1})
  name: Filter(Func<T, Boolean>, Func<TError>)
  href: api/Lemonad.ErrorHandling.Result-2.html#Lemonad_ErrorHandling_Result_2_Filter_System_Func__0_System_Boolean__System_Func__1__
  commentId: M:Lemonad.ErrorHandling.Result`2.Filter(System.Func{`0,System.Boolean},System.Func{`1})
  name.vb: Filter(Func(Of T, Boolean), Func(Of TError))
  fullName: Lemonad.ErrorHandling.Result<T, TError>.Filter(System.Func<T, System.Boolean>, System.Func<TError>)
  fullName.vb: Lemonad.ErrorHandling.Result(Of T, TError).Filter(System.Func(Of T, System.Boolean), System.Func(Of TError))
  nameWithType: Result<T, TError>.Filter(Func<T, Boolean>, Func<TError>)
  nameWithType.vb: Result(Of T, TError).Filter(Func(Of T, Boolean), Func(Of TError))
- uid: Lemonad.ErrorHandling.Result`2.Filter(System.Func{`0,System.Boolean},System.Func{Lemonad.ErrorHandling.Maybe{`0},`1})
  name: Filter(Func<T, Boolean>, Func<Maybe<T>, TError>)
  href: api/Lemonad.ErrorHandling.Result-2.html#Lemonad_ErrorHandling_Result_2_Filter_System_Func__0_System_Boolean__System_Func_Lemonad_ErrorHandling_Maybe__0___1__
  commentId: M:Lemonad.ErrorHandling.Result`2.Filter(System.Func{`0,System.Boolean},System.Func{Lemonad.ErrorHandling.Maybe{`0},`1})
  name.vb: Filter(Func(Of T, Boolean), Func(Of Maybe(Of T), TError))
  fullName: Lemonad.ErrorHandling.Result<T, TError>.Filter(System.Func<T, System.Boolean>, System.Func<Lemonad.ErrorHandling.Maybe<T>, TError>)
  fullName.vb: Lemonad.ErrorHandling.Result(Of T, TError).Filter(System.Func(Of T, System.Boolean), System.Func(Of Lemonad.ErrorHandling.Maybe(Of T), TError))
  nameWithType: Result<T, TError>.Filter(Func<T, Boolean>, Func<Maybe<T>, TError>)
  nameWithType.vb: Result(Of T, TError).Filter(Func(Of T, Boolean), Func(Of Maybe(Of T), TError))
- uid: Lemonad.ErrorHandling.Result`2.Filter(System.Func{`0,System.Threading.Tasks.Task{System.Boolean}},System.Func{`1})
  name: Filter(Func<T, Task<Boolean>>, Func<TError>)
  href: api/Lemonad.ErrorHandling.Result-2.html#Lemonad_ErrorHandling_Result_2_Filter_System_Func__0_System_Threading_Tasks_Task_System_Boolean___System_Func__1__
  commentId: M:Lemonad.ErrorHandling.Result`2.Filter(System.Func{`0,System.Threading.Tasks.Task{System.Boolean}},System.Func{`1})
  name.vb: Filter(Func(Of T, Task(Of Boolean)), Func(Of TError))
  fullName: Lemonad.ErrorHandling.Result<T, TError>.Filter(System.Func<T, System.Threading.Tasks.Task<System.Boolean>>, System.Func<TError>)
  fullName.vb: Lemonad.ErrorHandling.Result(Of T, TError).Filter(System.Func(Of T, System.Threading.Tasks.Task(Of System.Boolean)), System.Func(Of TError))
  nameWithType: Result<T, TError>.Filter(Func<T, Task<Boolean>>, Func<TError>)
  nameWithType.vb: Result(Of T, TError).Filter(Func(Of T, Task(Of Boolean)), Func(Of TError))
- uid: Lemonad.ErrorHandling.Result`2.Filter(System.Func{`0,System.Threading.Tasks.Task{System.Boolean}},System.Func{Lemonad.ErrorHandling.Maybe{`0},`1})
  name: Filter(Func<T, Task<Boolean>>, Func<Maybe<T>, TError>)
  href: api/Lemonad.ErrorHandling.Result-2.html#Lemonad_ErrorHandling_Result_2_Filter_System_Func__0_System_Threading_Tasks_Task_System_Boolean___System_Func_Lemonad_ErrorHandling_Maybe__0___1__
  commentId: M:Lemonad.ErrorHandling.Result`2.Filter(System.Func{`0,System.Threading.Tasks.Task{System.Boolean}},System.Func{Lemonad.ErrorHandling.Maybe{`0},`1})
  name.vb: Filter(Func(Of T, Task(Of Boolean)), Func(Of Maybe(Of T), TError))
  fullName: Lemonad.ErrorHandling.Result<T, TError>.Filter(System.Func<T, System.Threading.Tasks.Task<System.Boolean>>, System.Func<Lemonad.ErrorHandling.Maybe<T>, TError>)
  fullName.vb: Lemonad.ErrorHandling.Result(Of T, TError).Filter(System.Func(Of T, System.Threading.Tasks.Task(Of System.Boolean)), System.Func(Of Lemonad.ErrorHandling.Maybe(Of T), TError))
  nameWithType: Result<T, TError>.Filter(Func<T, Task<Boolean>>, Func<Maybe<T>, TError>)
  nameWithType.vb: Result(Of T, TError).Filter(Func(Of T, Task(Of Boolean)), Func(Of Maybe(Of T), TError))
- uid: Lemonad.ErrorHandling.Result`2.Filter*
  name: Filter
  href: api/Lemonad.ErrorHandling.Result-2.html#Lemonad_ErrorHandling_Result_2_Filter_
  commentId: Overload:Lemonad.ErrorHandling.Result`2.Filter
  isSpec: "True"
  fullName: Lemonad.ErrorHandling.Result<T, TError>.Filter
  fullName.vb: Lemonad.ErrorHandling.Result(Of T, TError).Filter
  nameWithType: Result<T, TError>.Filter
  nameWithType.vb: Result(Of T, TError).Filter
- uid: Lemonad.ErrorHandling.Result`2.FlatMap*
  name: FlatMap
  href: api/Lemonad.ErrorHandling.Result-2.html#Lemonad_ErrorHandling_Result_2_FlatMap_
  commentId: Overload:Lemonad.ErrorHandling.Result`2.FlatMap
  isSpec: "True"
  fullName: Lemonad.ErrorHandling.Result<T, TError>.FlatMap
  fullName.vb: Lemonad.ErrorHandling.Result(Of T, TError).FlatMap
  nameWithType: Result<T, TError>.FlatMap
  nameWithType.vb: Result(Of T, TError).FlatMap
- uid: Lemonad.ErrorHandling.Result`2.FlatMap``1(System.Func{`0,Lemonad.ErrorHandling.Outcome{``0,`1}})
  name: FlatMap<TResult>(Func<T, Outcome<TResult, TError>>)
  href: api/Lemonad.ErrorHandling.Result-2.html#Lemonad_ErrorHandling_Result_2_FlatMap__1_System_Func__0_Lemonad_ErrorHandling_Outcome___0__1___
  commentId: M:Lemonad.ErrorHandling.Result`2.FlatMap``1(System.Func{`0,Lemonad.ErrorHandling.Outcome{``0,`1}})
  name.vb: FlatMap(Of TResult)(Func(Of T, Outcome(Of TResult, TError)))
  fullName: Lemonad.ErrorHandling.Result<T, TError>.FlatMap<TResult>(System.Func<T, Lemonad.ErrorHandling.Outcome<TResult, TError>>)
  fullName.vb: Lemonad.ErrorHandling.Result(Of T, TError).FlatMap(Of TResult)(System.Func(Of T, Lemonad.ErrorHandling.Outcome(Of TResult, TError)))
  nameWithType: Result<T, TError>.FlatMap<TResult>(Func<T, Outcome<TResult, TError>>)
  nameWithType.vb: Result(Of T, TError).FlatMap(Of TResult)(Func(Of T, Outcome(Of TResult, TError)))
- uid: Lemonad.ErrorHandling.Result`2.FlatMap``1(System.Func{`0,Lemonad.ErrorHandling.Result{``0,`1}})
  name: FlatMap<TResult>(Func<T, Result<TResult, TError>>)
  href: api/Lemonad.ErrorHandling.Result-2.html#Lemonad_ErrorHandling_Result_2_FlatMap__1_System_Func__0_Lemonad_ErrorHandling_Result___0__1___
  commentId: M:Lemonad.ErrorHandling.Result`2.FlatMap``1(System.Func{`0,Lemonad.ErrorHandling.Result{``0,`1}})
  name.vb: FlatMap(Of TResult)(Func(Of T, Result(Of TResult, TError)))
  fullName: Lemonad.ErrorHandling.Result<T, TError>.FlatMap<TResult>(System.Func<T, Lemonad.ErrorHandling.Result<TResult, TError>>)
  fullName.vb: Lemonad.ErrorHandling.Result(Of T, TError).FlatMap(Of TResult)(System.Func(Of T, Lemonad.ErrorHandling.Result(Of TResult, TError)))
  nameWithType: Result<T, TError>.FlatMap<TResult>(Func<T, Result<TResult, TError>>)
  nameWithType.vb: Result(Of T, TError).FlatMap(Of TResult)(Func(Of T, Result(Of TResult, TError)))
- uid: Lemonad.ErrorHandling.Result`2.FlatMap``1(System.Func{`0,System.Threading.Tasks.Task{Lemonad.ErrorHandling.Result{``0,`1}}})
  name: FlatMap<TResult>(Func<T, Task<Result<TResult, TError>>>)
  href: api/Lemonad.ErrorHandling.Result-2.html#Lemonad_ErrorHandling_Result_2_FlatMap__1_System_Func__0_System_Threading_Tasks_Task_Lemonad_ErrorHandling_Result___0__1____
  commentId: M:Lemonad.ErrorHandling.Result`2.FlatMap``1(System.Func{`0,System.Threading.Tasks.Task{Lemonad.ErrorHandling.Result{``0,`1}}})
  name.vb: FlatMap(Of TResult)(Func(Of T, Task(Of Result(Of TResult, TError))))
  fullName: Lemonad.ErrorHandling.Result<T, TError>.FlatMap<TResult>(System.Func<T, System.Threading.Tasks.Task<Lemonad.ErrorHandling.Result<TResult, TError>>>)
  fullName.vb: Lemonad.ErrorHandling.Result(Of T, TError).FlatMap(Of TResult)(System.Func(Of T, System.Threading.Tasks.Task(Of Lemonad.ErrorHandling.Result(Of TResult, TError))))
  nameWithType: Result<T, TError>.FlatMap<TResult>(Func<T, Task<Result<TResult, TError>>>)
  nameWithType.vb: Result(Of T, TError).FlatMap(Of TResult)(Func(Of T, Task(Of Result(Of TResult, TError))))
- uid: Lemonad.ErrorHandling.Result`2.FlatMap``2(System.Func{`0,Lemonad.ErrorHandling.Outcome{``0,``1}},System.Func{``1,`1})
  name: FlatMap<TResult, TErrorResult>(Func<T, Outcome<TResult, TErrorResult>>, Func<TErrorResult, TError>)
  href: api/Lemonad.ErrorHandling.Result-2.html#Lemonad_ErrorHandling_Result_2_FlatMap__2_System_Func__0_Lemonad_ErrorHandling_Outcome___0___1___System_Func___1__1__
  commentId: M:Lemonad.ErrorHandling.Result`2.FlatMap``2(System.Func{`0,Lemonad.ErrorHandling.Outcome{``0,``1}},System.Func{``1,`1})
  name.vb: FlatMap(Of TResult, TErrorResult)(Func(Of T, Outcome(Of TResult, TErrorResult)), Func(Of TErrorResult, TError))
  fullName: Lemonad.ErrorHandling.Result<T, TError>.FlatMap<TResult, TErrorResult>(System.Func<T, Lemonad.ErrorHandling.Outcome<TResult, TErrorResult>>, System.Func<TErrorResult, TError>)
  fullName.vb: Lemonad.ErrorHandling.Result(Of T, TError).FlatMap(Of TResult, TErrorResult)(System.Func(Of T, Lemonad.ErrorHandling.Outcome(Of TResult, TErrorResult)), System.Func(Of TErrorResult, TError))
  nameWithType: Result<T, TError>.FlatMap<TResult, TErrorResult>(Func<T, Outcome<TResult, TErrorResult>>, Func<TErrorResult, TError>)
  nameWithType.vb: Result(Of T, TError).FlatMap(Of TResult, TErrorResult)(Func(Of T, Outcome(Of TResult, TErrorResult)), Func(Of TErrorResult, TError))
- uid: Lemonad.ErrorHandling.Result`2.FlatMap``2(System.Func{`0,Lemonad.ErrorHandling.Outcome{``0,`1}},System.Func{`0,``0,``1})
  name: FlatMap<TSelector, TResult>(Func<T, Outcome<TSelector, TError>>, Func<T, TSelector, TResult>)
  href: api/Lemonad.ErrorHandling.Result-2.html#Lemonad_ErrorHandling_Result_2_FlatMap__2_System_Func__0_Lemonad_ErrorHandling_Outcome___0__1___System_Func__0___0___1__
  commentId: M:Lemonad.ErrorHandling.Result`2.FlatMap``2(System.Func{`0,Lemonad.ErrorHandling.Outcome{``0,`1}},System.Func{`0,``0,``1})
  name.vb: FlatMap(Of TSelector, TResult)(Func(Of T, Outcome(Of TSelector, TError)), Func(Of T, TSelector, TResult))
  fullName: Lemonad.ErrorHandling.Result<T, TError>.FlatMap<TSelector, TResult>(System.Func<T, Lemonad.ErrorHandling.Outcome<TSelector, TError>>, System.Func<T, TSelector, TResult>)
  fullName.vb: Lemonad.ErrorHandling.Result(Of T, TError).FlatMap(Of TSelector, TResult)(System.Func(Of T, Lemonad.ErrorHandling.Outcome(Of TSelector, TError)), System.Func(Of T, TSelector, TResult))
  nameWithType: Result<T, TError>.FlatMap<TSelector, TResult>(Func<T, Outcome<TSelector, TError>>, Func<T, TSelector, TResult>)
  nameWithType.vb: Result(Of T, TError).FlatMap(Of TSelector, TResult)(Func(Of T, Outcome(Of TSelector, TError)), Func(Of T, TSelector, TResult))
- uid: Lemonad.ErrorHandling.Result`2.FlatMap``2(System.Func{`0,Lemonad.ErrorHandling.Result{``0,``1}},System.Func{``1,`1})
  name: FlatMap<TResult, TErrorResult>(Func<T, Result<TResult, TErrorResult>>, Func<TErrorResult, TError>)
  href: api/Lemonad.ErrorHandling.Result-2.html#Lemonad_ErrorHandling_Result_2_FlatMap__2_System_Func__0_Lemonad_ErrorHandling_Result___0___1___System_Func___1__1__
  commentId: M:Lemonad.ErrorHandling.Result`2.FlatMap``2(System.Func{`0,Lemonad.ErrorHandling.Result{``0,``1}},System.Func{``1,`1})
  name.vb: FlatMap(Of TResult, TErrorResult)(Func(Of T, Result(Of TResult, TErrorResult)), Func(Of TErrorResult, TError))
  fullName: Lemonad.ErrorHandling.Result<T, TError>.FlatMap<TResult, TErrorResult>(System.Func<T, Lemonad.ErrorHandling.Result<TResult, TErrorResult>>, System.Func<TErrorResult, TError>)
  fullName.vb: Lemonad.ErrorHandling.Result(Of T, TError).FlatMap(Of TResult, TErrorResult)(System.Func(Of T, Lemonad.ErrorHandling.Result(Of TResult, TErrorResult)), System.Func(Of TErrorResult, TError))
  nameWithType: Result<T, TError>.FlatMap<TResult, TErrorResult>(Func<T, Result<TResult, TErrorResult>>, Func<TErrorResult, TError>)
  nameWithType.vb: Result(Of T, TError).FlatMap(Of TResult, TErrorResult)(Func(Of T, Result(Of TResult, TErrorResult)), Func(Of TErrorResult, TError))
- uid: Lemonad.ErrorHandling.Result`2.FlatMap``2(System.Func{`0,Lemonad.ErrorHandling.Result{``0,`1}},System.Func{`0,``0,``1})
  name: FlatMap<TSelector, TResult>(Func<T, Result<TSelector, TError>>, Func<T, TSelector, TResult>)
  href: api/Lemonad.ErrorHandling.Result-2.html#Lemonad_ErrorHandling_Result_2_FlatMap__2_System_Func__0_Lemonad_ErrorHandling_Result___0__1___System_Func__0___0___1__
  commentId: M:Lemonad.ErrorHandling.Result`2.FlatMap``2(System.Func{`0,Lemonad.ErrorHandling.Result{``0,`1}},System.Func{`0,``0,``1})
  name.vb: FlatMap(Of TSelector, TResult)(Func(Of T, Result(Of TSelector, TError)), Func(Of T, TSelector, TResult))
  fullName: Lemonad.ErrorHandling.Result<T, TError>.FlatMap<TSelector, TResult>(System.Func<T, Lemonad.ErrorHandling.Result<TSelector, TError>>, System.Func<T, TSelector, TResult>)
  fullName.vb: Lemonad.ErrorHandling.Result(Of T, TError).FlatMap(Of TSelector, TResult)(System.Func(Of T, Lemonad.ErrorHandling.Result(Of TSelector, TError)), System.Func(Of T, TSelector, TResult))
  nameWithType: Result<T, TError>.FlatMap<TSelector, TResult>(Func<T, Result<TSelector, TError>>, Func<T, TSelector, TResult>)
  nameWithType.vb: Result(Of T, TError).FlatMap(Of TSelector, TResult)(Func(Of T, Result(Of TSelector, TError)), Func(Of T, TSelector, TResult))
- uid: Lemonad.ErrorHandling.Result`2.FlatMap``2(System.Func{`0,System.Threading.Tasks.Task{Lemonad.ErrorHandling.Result{``0,``1}}},System.Func{``1,`1})
  name: FlatMap<TResult, TErrorResult>(Func<T, Task<Result<TResult, TErrorResult>>>, Func<TErrorResult, TError>)
  href: api/Lemonad.ErrorHandling.Result-2.html#Lemonad_ErrorHandling_Result_2_FlatMap__2_System_Func__0_System_Threading_Tasks_Task_Lemonad_ErrorHandling_Result___0___1____System_Func___1__1__
  commentId: M:Lemonad.ErrorHandling.Result`2.FlatMap``2(System.Func{`0,System.Threading.Tasks.Task{Lemonad.ErrorHandling.Result{``0,``1}}},System.Func{``1,`1})
  name.vb: FlatMap(Of TResult, TErrorResult)(Func(Of T, Task(Of Result(Of TResult, TErrorResult))), Func(Of TErrorResult, TError))
  fullName: Lemonad.ErrorHandling.Result<T, TError>.FlatMap<TResult, TErrorResult>(System.Func<T, System.Threading.Tasks.Task<Lemonad.ErrorHandling.Result<TResult, TErrorResult>>>, System.Func<TErrorResult, TError>)
  fullName.vb: Lemonad.ErrorHandling.Result(Of T, TError).FlatMap(Of TResult, TErrorResult)(System.Func(Of T, System.Threading.Tasks.Task(Of Lemonad.ErrorHandling.Result(Of TResult, TErrorResult))), System.Func(Of TErrorResult, TError))
  nameWithType: Result<T, TError>.FlatMap<TResult, TErrorResult>(Func<T, Task<Result<TResult, TErrorResult>>>, Func<TErrorResult, TError>)
  nameWithType.vb: Result(Of T, TError).FlatMap(Of TResult, TErrorResult)(Func(Of T, Task(Of Result(Of TResult, TErrorResult))), Func(Of TErrorResult, TError))
- uid: Lemonad.ErrorHandling.Result`2.FlatMap``2(System.Func{`0,System.Threading.Tasks.Task{Lemonad.ErrorHandling.Result{``0,`1}}},System.Func{`0,``0,``1})
  name: FlatMap<TSelector, TResult>(Func<T, Task<Result<TSelector, TError>>>, Func<T, TSelector, TResult>)
  href: api/Lemonad.ErrorHandling.Result-2.html#Lemonad_ErrorHandling_Result_2_FlatMap__2_System_Func__0_System_Threading_Tasks_Task_Lemonad_ErrorHandling_Result___0__1____System_Func__0___0___1__
  commentId: M:Lemonad.ErrorHandling.Result`2.FlatMap``2(System.Func{`0,System.Threading.Tasks.Task{Lemonad.ErrorHandling.Result{``0,`1}}},System.Func{`0,``0,``1})
  name.vb: FlatMap(Of TSelector, TResult)(Func(Of T, Task(Of Result(Of TSelector, TError))), Func(Of T, TSelector, TResult))
  fullName: Lemonad.ErrorHandling.Result<T, TError>.FlatMap<TSelector, TResult>(System.Func<T, System.Threading.Tasks.Task<Lemonad.ErrorHandling.Result<TSelector, TError>>>, System.Func<T, TSelector, TResult>)
  fullName.vb: Lemonad.ErrorHandling.Result(Of T, TError).FlatMap(Of TSelector, TResult)(System.Func(Of T, System.Threading.Tasks.Task(Of Lemonad.ErrorHandling.Result(Of TSelector, TError))), System.Func(Of T, TSelector, TResult))
  nameWithType: Result<T, TError>.FlatMap<TSelector, TResult>(Func<T, Task<Result<TSelector, TError>>>, Func<T, TSelector, TResult>)
  nameWithType.vb: Result(Of T, TError).FlatMap(Of TSelector, TResult)(Func(Of T, Task(Of Result(Of TSelector, TError))), Func(Of T, TSelector, TResult))
- uid: Lemonad.ErrorHandling.Result`2.FlatMap``3(System.Func{`0,Lemonad.ErrorHandling.Outcome{``0,``2}},System.Func{`0,``0,``1},System.Func{``2,`1})
  name: FlatMap<TFlatMap, TResult, TErrorResult>(Func<T, Outcome<TFlatMap, TErrorResult>>, Func<T, TFlatMap, TResult>, Func<TErrorResult, TError>)
  href: api/Lemonad.ErrorHandling.Result-2.html#Lemonad_ErrorHandling_Result_2_FlatMap__3_System_Func__0_Lemonad_ErrorHandling_Outcome___0___2___System_Func__0___0___1__System_Func___2__1__
  commentId: M:Lemonad.ErrorHandling.Result`2.FlatMap``3(System.Func{`0,Lemonad.ErrorHandling.Outcome{``0,``2}},System.Func{`0,``0,``1},System.Func{``2,`1})
  name.vb: FlatMap(Of TFlatMap, TResult, TErrorResult)(Func(Of T, Outcome(Of TFlatMap, TErrorResult)), Func(Of T, TFlatMap, TResult), Func(Of TErrorResult, TError))
  fullName: Lemonad.ErrorHandling.Result<T, TError>.FlatMap<TFlatMap, TResult, TErrorResult>(System.Func<T, Lemonad.ErrorHandling.Outcome<TFlatMap, TErrorResult>>, System.Func<T, TFlatMap, TResult>, System.Func<TErrorResult, TError>)
  fullName.vb: Lemonad.ErrorHandling.Result(Of T, TError).FlatMap(Of TFlatMap, TResult, TErrorResult)(System.Func(Of T, Lemonad.ErrorHandling.Outcome(Of TFlatMap, TErrorResult)), System.Func(Of T, TFlatMap, TResult), System.Func(Of TErrorResult, TError))
  nameWithType: Result<T, TError>.FlatMap<TFlatMap, TResult, TErrorResult>(Func<T, Outcome<TFlatMap, TErrorResult>>, Func<T, TFlatMap, TResult>, Func<TErrorResult, TError>)
  nameWithType.vb: Result(Of T, TError).FlatMap(Of TFlatMap, TResult, TErrorResult)(Func(Of T, Outcome(Of TFlatMap, TErrorResult)), Func(Of T, TFlatMap, TResult), Func(Of TErrorResult, TError))
- uid: Lemonad.ErrorHandling.Result`2.FlatMap``3(System.Func{`0,Lemonad.ErrorHandling.Result{``0,``2}},System.Func{`0,``0,``1},System.Func{``2,`1})
  name: FlatMap<TFlatMap, TResult, TErrorResult>(Func<T, Result<TFlatMap, TErrorResult>>, Func<T, TFlatMap, TResult>, Func<TErrorResult, TError>)
  href: api/Lemonad.ErrorHandling.Result-2.html#Lemonad_ErrorHandling_Result_2_FlatMap__3_System_Func__0_Lemonad_ErrorHandling_Result___0___2___System_Func__0___0___1__System_Func___2__1__
  commentId: M:Lemonad.ErrorHandling.Result`2.FlatMap``3(System.Func{`0,Lemonad.ErrorHandling.Result{``0,``2}},System.Func{`0,``0,``1},System.Func{``2,`1})
  name.vb: FlatMap(Of TFlatMap, TResult, TErrorResult)(Func(Of T, Result(Of TFlatMap, TErrorResult)), Func(Of T, TFlatMap, TResult), Func(Of TErrorResult, TError))
  fullName: Lemonad.ErrorHandling.Result<T, TError>.FlatMap<TFlatMap, TResult, TErrorResult>(System.Func<T, Lemonad.ErrorHandling.Result<TFlatMap, TErrorResult>>, System.Func<T, TFlatMap, TResult>, System.Func<TErrorResult, TError>)
  fullName.vb: Lemonad.ErrorHandling.Result(Of T, TError).FlatMap(Of TFlatMap, TResult, TErrorResult)(System.Func(Of T, Lemonad.ErrorHandling.Result(Of TFlatMap, TErrorResult)), System.Func(Of T, TFlatMap, TResult), System.Func(Of TErrorResult, TError))
  nameWithType: Result<T, TError>.FlatMap<TFlatMap, TResult, TErrorResult>(Func<T, Result<TFlatMap, TErrorResult>>, Func<T, TFlatMap, TResult>, Func<TErrorResult, TError>)
  nameWithType.vb: Result(Of T, TError).FlatMap(Of TFlatMap, TResult, TErrorResult)(Func(Of T, Result(Of TFlatMap, TErrorResult)), Func(Of T, TFlatMap, TResult), Func(Of TErrorResult, TError))
- uid: Lemonad.ErrorHandling.Result`2.FlatMap``3(System.Func{`0,System.Threading.Tasks.Task{Lemonad.ErrorHandling.Result{``0,``2}}},System.Func{`0,``0,``1},System.Func{``2,`1})
  name: FlatMap<TFlatMap, TResult, TErrorResult>(Func<T, Task<Result<TFlatMap, TErrorResult>>>, Func<T, TFlatMap, TResult>, Func<TErrorResult, TError>)
  href: api/Lemonad.ErrorHandling.Result-2.html#Lemonad_ErrorHandling_Result_2_FlatMap__3_System_Func__0_System_Threading_Tasks_Task_Lemonad_ErrorHandling_Result___0___2____System_Func__0___0___1__System_Func___2__1__
  commentId: M:Lemonad.ErrorHandling.Result`2.FlatMap``3(System.Func{`0,System.Threading.Tasks.Task{Lemonad.ErrorHandling.Result{``0,``2}}},System.Func{`0,``0,``1},System.Func{``2,`1})
  name.vb: FlatMap(Of TFlatMap, TResult, TErrorResult)(Func(Of T, Task(Of Result(Of TFlatMap, TErrorResult))), Func(Of T, TFlatMap, TResult), Func(Of TErrorResult, TError))
  fullName: Lemonad.ErrorHandling.Result<T, TError>.FlatMap<TFlatMap, TResult, TErrorResult>(System.Func<T, System.Threading.Tasks.Task<Lemonad.ErrorHandling.Result<TFlatMap, TErrorResult>>>, System.Func<T, TFlatMap, TResult>, System.Func<TErrorResult, TError>)
  fullName.vb: Lemonad.ErrorHandling.Result(Of T, TError).FlatMap(Of TFlatMap, TResult, TErrorResult)(System.Func(Of T, System.Threading.Tasks.Task(Of Lemonad.ErrorHandling.Result(Of TFlatMap, TErrorResult))), System.Func(Of T, TFlatMap, TResult), System.Func(Of TErrorResult, TError))
  nameWithType: Result<T, TError>.FlatMap<TFlatMap, TResult, TErrorResult>(Func<T, Task<Result<TFlatMap, TErrorResult>>>, Func<T, TFlatMap, TResult>, Func<TErrorResult, TError>)
  nameWithType.vb: Result(Of T, TError).FlatMap(Of TFlatMap, TResult, TErrorResult)(Func(Of T, Task(Of Result(Of TFlatMap, TErrorResult))), Func(Of T, TFlatMap, TResult), Func(Of TErrorResult, TError))
- uid: Lemonad.ErrorHandling.Result`2.Flatten*
  name: Flatten
  href: api/Lemonad.ErrorHandling.Result-2.html#Lemonad_ErrorHandling_Result_2_Flatten_
  commentId: Overload:Lemonad.ErrorHandling.Result`2.Flatten
  isSpec: "True"
  fullName: Lemonad.ErrorHandling.Result<T, TError>.Flatten
  fullName.vb: Lemonad.ErrorHandling.Result(Of T, TError).Flatten
  nameWithType: Result<T, TError>.Flatten
  nameWithType.vb: Result(Of T, TError).Flatten
- uid: Lemonad.ErrorHandling.Result`2.Flatten``1(System.Func{`0,Lemonad.ErrorHandling.Outcome{``0,`1}})
  name: Flatten<TResult>(Func<T, Outcome<TResult, TError>>)
  href: api/Lemonad.ErrorHandling.Result-2.html#Lemonad_ErrorHandling_Result_2_Flatten__1_System_Func__0_Lemonad_ErrorHandling_Outcome___0__1___
  commentId: M:Lemonad.ErrorHandling.Result`2.Flatten``1(System.Func{`0,Lemonad.ErrorHandling.Outcome{``0,`1}})
  name.vb: Flatten(Of TResult)(Func(Of T, Outcome(Of TResult, TError)))
  fullName: Lemonad.ErrorHandling.Result<T, TError>.Flatten<TResult>(System.Func<T, Lemonad.ErrorHandling.Outcome<TResult, TError>>)
  fullName.vb: Lemonad.ErrorHandling.Result(Of T, TError).Flatten(Of TResult)(System.Func(Of T, Lemonad.ErrorHandling.Outcome(Of TResult, TError)))
  nameWithType: Result<T, TError>.Flatten<TResult>(Func<T, Outcome<TResult, TError>>)
  nameWithType.vb: Result(Of T, TError).Flatten(Of TResult)(Func(Of T, Outcome(Of TResult, TError)))
- uid: Lemonad.ErrorHandling.Result`2.Flatten``1(System.Func{`0,Lemonad.ErrorHandling.Result{``0,`1}})
  name: Flatten<TResult>(Func<T, Result<TResult, TError>>)
  href: api/Lemonad.ErrorHandling.Result-2.html#Lemonad_ErrorHandling_Result_2_Flatten__1_System_Func__0_Lemonad_ErrorHandling_Result___0__1___
  commentId: M:Lemonad.ErrorHandling.Result`2.Flatten``1(System.Func{`0,Lemonad.ErrorHandling.Result{``0,`1}})
  name.vb: Flatten(Of TResult)(Func(Of T, Result(Of TResult, TError)))
  fullName: Lemonad.ErrorHandling.Result<T, TError>.Flatten<TResult>(System.Func<T, Lemonad.ErrorHandling.Result<TResult, TError>>)
  fullName.vb: Lemonad.ErrorHandling.Result(Of T, TError).Flatten(Of TResult)(System.Func(Of T, Lemonad.ErrorHandling.Result(Of TResult, TError)))
  nameWithType: Result<T, TError>.Flatten<TResult>(Func<T, Result<TResult, TError>>)
  nameWithType.vb: Result(Of T, TError).Flatten(Of TResult)(Func(Of T, Result(Of TResult, TError)))
- uid: Lemonad.ErrorHandling.Result`2.Flatten``1(System.Func{`0,System.Threading.Tasks.Task{Lemonad.ErrorHandling.Result{``0,`1}}})
  name: Flatten<TResult>(Func<T, Task<Result<TResult, TError>>>)
  href: api/Lemonad.ErrorHandling.Result-2.html#Lemonad_ErrorHandling_Result_2_Flatten__1_System_Func__0_System_Threading_Tasks_Task_Lemonad_ErrorHandling_Result___0__1____
  commentId: M:Lemonad.ErrorHandling.Result`2.Flatten``1(System.Func{`0,System.Threading.Tasks.Task{Lemonad.ErrorHandling.Result{``0,`1}}})
  name.vb: Flatten(Of TResult)(Func(Of T, Task(Of Result(Of TResult, TError))))
  fullName: Lemonad.ErrorHandling.Result<T, TError>.Flatten<TResult>(System.Func<T, System.Threading.Tasks.Task<Lemonad.ErrorHandling.Result<TResult, TError>>>)
  fullName.vb: Lemonad.ErrorHandling.Result(Of T, TError).Flatten(Of TResult)(System.Func(Of T, System.Threading.Tasks.Task(Of Lemonad.ErrorHandling.Result(Of TResult, TError))))
  nameWithType: Result<T, TError>.Flatten<TResult>(Func<T, Task<Result<TResult, TError>>>)
  nameWithType.vb: Result(Of T, TError).Flatten(Of TResult)(Func(Of T, Task(Of Result(Of TResult, TError))))
- uid: Lemonad.ErrorHandling.Result`2.Flatten``2(System.Func{`0,Lemonad.ErrorHandling.Outcome{``0,``1}},System.Func{``1,`1})
  name: Flatten<TResult, TErrorResult>(Func<T, Outcome<TResult, TErrorResult>>, Func<TErrorResult, TError>)
  href: api/Lemonad.ErrorHandling.Result-2.html#Lemonad_ErrorHandling_Result_2_Flatten__2_System_Func__0_Lemonad_ErrorHandling_Outcome___0___1___System_Func___1__1__
  commentId: M:Lemonad.ErrorHandling.Result`2.Flatten``2(System.Func{`0,Lemonad.ErrorHandling.Outcome{``0,``1}},System.Func{``1,`1})
  name.vb: Flatten(Of TResult, TErrorResult)(Func(Of T, Outcome(Of TResult, TErrorResult)), Func(Of TErrorResult, TError))
  fullName: Lemonad.ErrorHandling.Result<T, TError>.Flatten<TResult, TErrorResult>(System.Func<T, Lemonad.ErrorHandling.Outcome<TResult, TErrorResult>>, System.Func<TErrorResult, TError>)
  fullName.vb: Lemonad.ErrorHandling.Result(Of T, TError).Flatten(Of TResult, TErrorResult)(System.Func(Of T, Lemonad.ErrorHandling.Outcome(Of TResult, TErrorResult)), System.Func(Of TErrorResult, TError))
  nameWithType: Result<T, TError>.Flatten<TResult, TErrorResult>(Func<T, Outcome<TResult, TErrorResult>>, Func<TErrorResult, TError>)
  nameWithType.vb: Result(Of T, TError).Flatten(Of TResult, TErrorResult)(Func(Of T, Outcome(Of TResult, TErrorResult)), Func(Of TErrorResult, TError))
- uid: Lemonad.ErrorHandling.Result`2.Flatten``2(System.Func{`0,Lemonad.ErrorHandling.Result{``0,``1}},System.Func{``1,`1})
  name: Flatten<TResult, TErrorResult>(Func<T, Result<TResult, TErrorResult>>, Func<TErrorResult, TError>)
  href: api/Lemonad.ErrorHandling.Result-2.html#Lemonad_ErrorHandling_Result_2_Flatten__2_System_Func__0_Lemonad_ErrorHandling_Result___0___1___System_Func___1__1__
  commentId: M:Lemonad.ErrorHandling.Result`2.Flatten``2(System.Func{`0,Lemonad.ErrorHandling.Result{``0,``1}},System.Func{``1,`1})
  name.vb: Flatten(Of TResult, TErrorResult)(Func(Of T, Result(Of TResult, TErrorResult)), Func(Of TErrorResult, TError))
  fullName: Lemonad.ErrorHandling.Result<T, TError>.Flatten<TResult, TErrorResult>(System.Func<T, Lemonad.ErrorHandling.Result<TResult, TErrorResult>>, System.Func<TErrorResult, TError>)
  fullName.vb: Lemonad.ErrorHandling.Result(Of T, TError).Flatten(Of TResult, TErrorResult)(System.Func(Of T, Lemonad.ErrorHandling.Result(Of TResult, TErrorResult)), System.Func(Of TErrorResult, TError))
  nameWithType: Result<T, TError>.Flatten<TResult, TErrorResult>(Func<T, Result<TResult, TErrorResult>>, Func<TErrorResult, TError>)
  nameWithType.vb: Result(Of T, TError).Flatten(Of TResult, TErrorResult)(Func(Of T, Result(Of TResult, TErrorResult)), Func(Of TErrorResult, TError))
- uid: Lemonad.ErrorHandling.Result`2.Flatten``2(System.Func{`0,System.Threading.Tasks.Task{Lemonad.ErrorHandling.Result{``0,``1}}},System.Func{``1,`1})
  name: Flatten<TResult, TErrorResult>(Func<T, Task<Result<TResult, TErrorResult>>>, Func<TErrorResult, TError>)
  href: api/Lemonad.ErrorHandling.Result-2.html#Lemonad_ErrorHandling_Result_2_Flatten__2_System_Func__0_System_Threading_Tasks_Task_Lemonad_ErrorHandling_Result___0___1____System_Func___1__1__
  commentId: M:Lemonad.ErrorHandling.Result`2.Flatten``2(System.Func{`0,System.Threading.Tasks.Task{Lemonad.ErrorHandling.Result{``0,``1}}},System.Func{``1,`1})
  name.vb: Flatten(Of TResult, TErrorResult)(Func(Of T, Task(Of Result(Of TResult, TErrorResult))), Func(Of TErrorResult, TError))
  fullName: Lemonad.ErrorHandling.Result<T, TError>.Flatten<TResult, TErrorResult>(System.Func<T, System.Threading.Tasks.Task<Lemonad.ErrorHandling.Result<TResult, TErrorResult>>>, System.Func<TErrorResult, TError>)
  fullName.vb: Lemonad.ErrorHandling.Result(Of T, TError).Flatten(Of TResult, TErrorResult)(System.Func(Of T, System.Threading.Tasks.Task(Of Lemonad.ErrorHandling.Result(Of TResult, TErrorResult))), System.Func(Of TErrorResult, TError))
  nameWithType: Result<T, TError>.Flatten<TResult, TErrorResult>(Func<T, Task<Result<TResult, TErrorResult>>>, Func<TErrorResult, TError>)
  nameWithType.vb: Result(Of T, TError).Flatten(Of TResult, TErrorResult)(Func(Of T, Task(Of Result(Of TResult, TErrorResult))), Func(Of TErrorResult, TError))
- uid: Lemonad.ErrorHandling.Result`2.FullCast*
  name: FullCast
  href: api/Lemonad.ErrorHandling.Result-2.html#Lemonad_ErrorHandling_Result_2_FullCast_
  commentId: Overload:Lemonad.ErrorHandling.Result`2.FullCast
  isSpec: "True"
  fullName: Lemonad.ErrorHandling.Result<T, TError>.FullCast
  fullName.vb: Lemonad.ErrorHandling.Result(Of T, TError).FullCast
  nameWithType: Result<T, TError>.FullCast
  nameWithType.vb: Result(Of T, TError).FullCast
- uid: Lemonad.ErrorHandling.Result`2.FullCast``1
  name: FullCast<TResult>()
  href: api/Lemonad.ErrorHandling.Result-2.html#Lemonad_ErrorHandling_Result_2_FullCast__1
  commentId: M:Lemonad.ErrorHandling.Result`2.FullCast``1
  name.vb: FullCast(Of TResult)()
  fullName: Lemonad.ErrorHandling.Result<T, TError>.FullCast<TResult>()
  fullName.vb: Lemonad.ErrorHandling.Result(Of T, TError).FullCast(Of TResult)()
  nameWithType: Result<T, TError>.FullCast<TResult>()
  nameWithType.vb: Result(Of T, TError).FullCast(Of TResult)()
- uid: Lemonad.ErrorHandling.Result`2.FullCast``2
  name: FullCast<TResult, TErrorResult>()
  href: api/Lemonad.ErrorHandling.Result-2.html#Lemonad_ErrorHandling_Result_2_FullCast__2
  commentId: M:Lemonad.ErrorHandling.Result`2.FullCast``2
  name.vb: FullCast(Of TResult, TErrorResult)()
  fullName: Lemonad.ErrorHandling.Result<T, TError>.FullCast<TResult, TErrorResult>()
  fullName.vb: Lemonad.ErrorHandling.Result(Of T, TError).FullCast(Of TResult, TErrorResult)()
  nameWithType: Result<T, TError>.FullCast<TResult, TErrorResult>()
  nameWithType.vb: Result(Of T, TError).FullCast(Of TResult, TErrorResult)()
- uid: Lemonad.ErrorHandling.Result`2.FullFlatMap*
  name: FullFlatMap
  href: api/Lemonad.ErrorHandling.Result-2.html#Lemonad_ErrorHandling_Result_2_FullFlatMap_
  commentId: Overload:Lemonad.ErrorHandling.Result`2.FullFlatMap
  isSpec: "True"
  fullName: Lemonad.ErrorHandling.Result<T, TError>.FullFlatMap
  fullName.vb: Lemonad.ErrorHandling.Result(Of T, TError).FullFlatMap
  nameWithType: Result<T, TError>.FullFlatMap
  nameWithType.vb: Result(Of T, TError).FullFlatMap
- uid: Lemonad.ErrorHandling.Result`2.FullFlatMap``2(System.Func{`0,Lemonad.ErrorHandling.Outcome{``0,``1}},System.Func{`1,``1})
  name: FullFlatMap<TResult, TErrorResult>(Func<T, Outcome<TResult, TErrorResult>>, Func<TError, TErrorResult>)
  href: api/Lemonad.ErrorHandling.Result-2.html#Lemonad_ErrorHandling_Result_2_FullFlatMap__2_System_Func__0_Lemonad_ErrorHandling_Outcome___0___1___System_Func__1___1__
  commentId: M:Lemonad.ErrorHandling.Result`2.FullFlatMap``2(System.Func{`0,Lemonad.ErrorHandling.Outcome{``0,``1}},System.Func{`1,``1})
  name.vb: FullFlatMap(Of TResult, TErrorResult)(Func(Of T, Outcome(Of TResult, TErrorResult)), Func(Of TError, TErrorResult))
  fullName: Lemonad.ErrorHandling.Result<T, TError>.FullFlatMap<TResult, TErrorResult>(System.Func<T, Lemonad.ErrorHandling.Outcome<TResult, TErrorResult>>, System.Func<TError, TErrorResult>)
  fullName.vb: Lemonad.ErrorHandling.Result(Of T, TError).FullFlatMap(Of TResult, TErrorResult)(System.Func(Of T, Lemonad.ErrorHandling.Outcome(Of TResult, TErrorResult)), System.Func(Of TError, TErrorResult))
  nameWithType: Result<T, TError>.FullFlatMap<TResult, TErrorResult>(Func<T, Outcome<TResult, TErrorResult>>, Func<TError, TErrorResult>)
  nameWithType.vb: Result(Of T, TError).FullFlatMap(Of TResult, TErrorResult)(Func(Of T, Outcome(Of TResult, TErrorResult)), Func(Of TError, TErrorResult))
- uid: Lemonad.ErrorHandling.Result`2.FullFlatMap``2(System.Func{`0,Lemonad.ErrorHandling.Result{``0,``1}},System.Func{`1,``1})
  name: FullFlatMap<TResult, TErrorResult>(Func<T, Result<TResult, TErrorResult>>, Func<TError, TErrorResult>)
  href: api/Lemonad.ErrorHandling.Result-2.html#Lemonad_ErrorHandling_Result_2_FullFlatMap__2_System_Func__0_Lemonad_ErrorHandling_Result___0___1___System_Func__1___1__
  commentId: M:Lemonad.ErrorHandling.Result`2.FullFlatMap``2(System.Func{`0,Lemonad.ErrorHandling.Result{``0,``1}},System.Func{`1,``1})
  name.vb: FullFlatMap(Of TResult, TErrorResult)(Func(Of T, Result(Of TResult, TErrorResult)), Func(Of TError, TErrorResult))
  fullName: Lemonad.ErrorHandling.Result<T, TError>.FullFlatMap<TResult, TErrorResult>(System.Func<T, Lemonad.ErrorHandling.Result<TResult, TErrorResult>>, System.Func<TError, TErrorResult>)
  fullName.vb: Lemonad.ErrorHandling.Result(Of T, TError).FullFlatMap(Of TResult, TErrorResult)(System.Func(Of T, Lemonad.ErrorHandling.Result(Of TResult, TErrorResult)), System.Func(Of TError, TErrorResult))
  nameWithType: Result<T, TError>.FullFlatMap<TResult, TErrorResult>(Func<T, Result<TResult, TErrorResult>>, Func<TError, TErrorResult>)
  nameWithType.vb: Result(Of T, TError).FullFlatMap(Of TResult, TErrorResult)(Func(Of T, Result(Of TResult, TErrorResult)), Func(Of TError, TErrorResult))
- uid: Lemonad.ErrorHandling.Result`2.FullFlatMap``2(System.Func{`0,System.Threading.Tasks.Task{Lemonad.ErrorHandling.Result{``0,``1}}},System.Func{`1,``1})
  name: FullFlatMap<TResult, TErrorResult>(Func<T, Task<Result<TResult, TErrorResult>>>, Func<TError, TErrorResult>)
  href: api/Lemonad.ErrorHandling.Result-2.html#Lemonad_ErrorHandling_Result_2_FullFlatMap__2_System_Func__0_System_Threading_Tasks_Task_Lemonad_ErrorHandling_Result___0___1____System_Func__1___1__
  commentId: M:Lemonad.ErrorHandling.Result`2.FullFlatMap``2(System.Func{`0,System.Threading.Tasks.Task{Lemonad.ErrorHandling.Result{``0,``1}}},System.Func{`1,``1})
  name.vb: FullFlatMap(Of TResult, TErrorResult)(Func(Of T, Task(Of Result(Of TResult, TErrorResult))), Func(Of TError, TErrorResult))
  fullName: Lemonad.ErrorHandling.Result<T, TError>.FullFlatMap<TResult, TErrorResult>(System.Func<T, System.Threading.Tasks.Task<Lemonad.ErrorHandling.Result<TResult, TErrorResult>>>, System.Func<TError, TErrorResult>)
  fullName.vb: Lemonad.ErrorHandling.Result(Of T, TError).FullFlatMap(Of TResult, TErrorResult)(System.Func(Of T, System.Threading.Tasks.Task(Of Lemonad.ErrorHandling.Result(Of TResult, TErrorResult))), System.Func(Of TError, TErrorResult))
  nameWithType: Result<T, TError>.FullFlatMap<TResult, TErrorResult>(Func<T, Task<Result<TResult, TErrorResult>>>, Func<TError, TErrorResult>)
  nameWithType.vb: Result(Of T, TError).FullFlatMap(Of TResult, TErrorResult)(Func(Of T, Task(Of Result(Of TResult, TErrorResult))), Func(Of TError, TErrorResult))
- uid: Lemonad.ErrorHandling.Result`2.FullFlatMap``3(System.Func{`0,Lemonad.ErrorHandling.Outcome{``0,``2}},System.Func{`0,``0,``1},System.Func{`1,``2})
  name: FullFlatMap<TFlatMap, TResult, TErrorResult>(Func<T, Outcome<TFlatMap, TErrorResult>>, Func<T, TFlatMap, TResult>, Func<TError, TErrorResult>)
  href: api/Lemonad.ErrorHandling.Result-2.html#Lemonad_ErrorHandling_Result_2_FullFlatMap__3_System_Func__0_Lemonad_ErrorHandling_Outcome___0___2___System_Func__0___0___1__System_Func__1___2__
  commentId: M:Lemonad.ErrorHandling.Result`2.FullFlatMap``3(System.Func{`0,Lemonad.ErrorHandling.Outcome{``0,``2}},System.Func{`0,``0,``1},System.Func{`1,``2})
  name.vb: FullFlatMap(Of TFlatMap, TResult, TErrorResult)(Func(Of T, Outcome(Of TFlatMap, TErrorResult)), Func(Of T, TFlatMap, TResult), Func(Of TError, TErrorResult))
  fullName: Lemonad.ErrorHandling.Result<T, TError>.FullFlatMap<TFlatMap, TResult, TErrorResult>(System.Func<T, Lemonad.ErrorHandling.Outcome<TFlatMap, TErrorResult>>, System.Func<T, TFlatMap, TResult>, System.Func<TError, TErrorResult>)
  fullName.vb: Lemonad.ErrorHandling.Result(Of T, TError).FullFlatMap(Of TFlatMap, TResult, TErrorResult)(System.Func(Of T, Lemonad.ErrorHandling.Outcome(Of TFlatMap, TErrorResult)), System.Func(Of T, TFlatMap, TResult), System.Func(Of TError, TErrorResult))
  nameWithType: Result<T, TError>.FullFlatMap<TFlatMap, TResult, TErrorResult>(Func<T, Outcome<TFlatMap, TErrorResult>>, Func<T, TFlatMap, TResult>, Func<TError, TErrorResult>)
  nameWithType.vb: Result(Of T, TError).FullFlatMap(Of TFlatMap, TResult, TErrorResult)(Func(Of T, Outcome(Of TFlatMap, TErrorResult)), Func(Of T, TFlatMap, TResult), Func(Of TError, TErrorResult))
- uid: Lemonad.ErrorHandling.Result`2.FullFlatMap``3(System.Func{`0,Lemonad.ErrorHandling.Result{``0,``2}},System.Func{`0,``0,``1},System.Func{`1,``2})
  name: FullFlatMap<TFlatMap, TResult, TErrorResult>(Func<T, Result<TFlatMap, TErrorResult>>, Func<T, TFlatMap, TResult>, Func<TError, TErrorResult>)
  href: api/Lemonad.ErrorHandling.Result-2.html#Lemonad_ErrorHandling_Result_2_FullFlatMap__3_System_Func__0_Lemonad_ErrorHandling_Result___0___2___System_Func__0___0___1__System_Func__1___2__
  commentId: M:Lemonad.ErrorHandling.Result`2.FullFlatMap``3(System.Func{`0,Lemonad.ErrorHandling.Result{``0,``2}},System.Func{`0,``0,``1},System.Func{`1,``2})
  name.vb: FullFlatMap(Of TFlatMap, TResult, TErrorResult)(Func(Of T, Result(Of TFlatMap, TErrorResult)), Func(Of T, TFlatMap, TResult), Func(Of TError, TErrorResult))
  fullName: Lemonad.ErrorHandling.Result<T, TError>.FullFlatMap<TFlatMap, TResult, TErrorResult>(System.Func<T, Lemonad.ErrorHandling.Result<TFlatMap, TErrorResult>>, System.Func<T, TFlatMap, TResult>, System.Func<TError, TErrorResult>)
  fullName.vb: Lemonad.ErrorHandling.Result(Of T, TError).FullFlatMap(Of TFlatMap, TResult, TErrorResult)(System.Func(Of T, Lemonad.ErrorHandling.Result(Of TFlatMap, TErrorResult)), System.Func(Of T, TFlatMap, TResult), System.Func(Of TError, TErrorResult))
  nameWithType: Result<T, TError>.FullFlatMap<TFlatMap, TResult, TErrorResult>(Func<T, Result<TFlatMap, TErrorResult>>, Func<T, TFlatMap, TResult>, Func<TError, TErrorResult>)
  nameWithType.vb: Result(Of T, TError).FullFlatMap(Of TFlatMap, TResult, TErrorResult)(Func(Of T, Result(Of TFlatMap, TErrorResult)), Func(Of T, TFlatMap, TResult), Func(Of TError, TErrorResult))
- uid: Lemonad.ErrorHandling.Result`2.FullFlatMap``3(System.Func{`0,System.Threading.Tasks.Task{Lemonad.ErrorHandling.Result{``0,``2}}},System.Func{`0,``0,``1},System.Func{`1,``2})
  name: FullFlatMap<TFlatMap, TResult, TErrorResult>(Func<T, Task<Result<TFlatMap, TErrorResult>>>, Func<T, TFlatMap, TResult>, Func<TError, TErrorResult>)
  href: api/Lemonad.ErrorHandling.Result-2.html#Lemonad_ErrorHandling_Result_2_FullFlatMap__3_System_Func__0_System_Threading_Tasks_Task_Lemonad_ErrorHandling_Result___0___2____System_Func__0___0___1__System_Func__1___2__
  commentId: M:Lemonad.ErrorHandling.Result`2.FullFlatMap``3(System.Func{`0,System.Threading.Tasks.Task{Lemonad.ErrorHandling.Result{``0,``2}}},System.Func{`0,``0,``1},System.Func{`1,``2})
  name.vb: FullFlatMap(Of TFlatMap, TResult, TErrorResult)(Func(Of T, Task(Of Result(Of TFlatMap, TErrorResult))), Func(Of T, TFlatMap, TResult), Func(Of TError, TErrorResult))
  fullName: Lemonad.ErrorHandling.Result<T, TError>.FullFlatMap<TFlatMap, TResult, TErrorResult>(System.Func<T, System.Threading.Tasks.Task<Lemonad.ErrorHandling.Result<TFlatMap, TErrorResult>>>, System.Func<T, TFlatMap, TResult>, System.Func<TError, TErrorResult>)
  fullName.vb: Lemonad.ErrorHandling.Result(Of T, TError).FullFlatMap(Of TFlatMap, TResult, TErrorResult)(System.Func(Of T, System.Threading.Tasks.Task(Of Lemonad.ErrorHandling.Result(Of TFlatMap, TErrorResult))), System.Func(Of T, TFlatMap, TResult), System.Func(Of TError, TErrorResult))
  nameWithType: Result<T, TError>.FullFlatMap<TFlatMap, TResult, TErrorResult>(Func<T, Task<Result<TFlatMap, TErrorResult>>>, Func<T, TFlatMap, TResult>, Func<TError, TErrorResult>)
  nameWithType.vb: Result(Of T, TError).FullFlatMap(Of TFlatMap, TResult, TErrorResult)(Func(Of T, Task(Of Result(Of TFlatMap, TErrorResult))), Func(Of T, TFlatMap, TResult), Func(Of TError, TErrorResult))
- uid: Lemonad.ErrorHandling.Result`2.FullMap*
  name: FullMap
  href: api/Lemonad.ErrorHandling.Result-2.html#Lemonad_ErrorHandling_Result_2_FullMap_
  commentId: Overload:Lemonad.ErrorHandling.Result`2.FullMap
  isSpec: "True"
  fullName: Lemonad.ErrorHandling.Result<T, TError>.FullMap
  fullName.vb: Lemonad.ErrorHandling.Result(Of T, TError).FullMap
  nameWithType: Result<T, TError>.FullMap
  nameWithType.vb: Result(Of T, TError).FullMap
- uid: Lemonad.ErrorHandling.Result`2.FullMap``2(System.Func{`0,``0},System.Func{`1,``1})
  name: FullMap<TResult, TErrorResult>(Func<T, TResult>, Func<TError, TErrorResult>)
  href: api/Lemonad.ErrorHandling.Result-2.html#Lemonad_ErrorHandling_Result_2_FullMap__2_System_Func__0___0__System_Func__1___1__
  commentId: M:Lemonad.ErrorHandling.Result`2.FullMap``2(System.Func{`0,``0},System.Func{`1,``1})
  name.vb: FullMap(Of TResult, TErrorResult)(Func(Of T, TResult), Func(Of TError, TErrorResult))
  fullName: Lemonad.ErrorHandling.Result<T, TError>.FullMap<TResult, TErrorResult>(System.Func<T, TResult>, System.Func<TError, TErrorResult>)
  fullName.vb: Lemonad.ErrorHandling.Result(Of T, TError).FullMap(Of TResult, TErrorResult)(System.Func(Of T, TResult), System.Func(Of TError, TErrorResult))
  nameWithType: Result<T, TError>.FullMap<TResult, TErrorResult>(Func<T, TResult>, Func<TError, TErrorResult>)
  nameWithType.vb: Result(Of T, TError).FullMap(Of TResult, TErrorResult)(Func(Of T, TResult), Func(Of TError, TErrorResult))
- uid: Lemonad.ErrorHandling.Result`2.GetHashCode
  name: GetHashCode()
  href: api/Lemonad.ErrorHandling.Result-2.html#Lemonad_ErrorHandling_Result_2_GetHashCode
  commentId: M:Lemonad.ErrorHandling.Result`2.GetHashCode
  fullName: Lemonad.ErrorHandling.Result<T, TError>.GetHashCode()
  fullName.vb: Lemonad.ErrorHandling.Result(Of T, TError).GetHashCode()
  nameWithType: Result<T, TError>.GetHashCode()
  nameWithType.vb: Result(Of T, TError).GetHashCode()
- uid: Lemonad.ErrorHandling.Result`2.GetHashCode*
  name: GetHashCode
  href: api/Lemonad.ErrorHandling.Result-2.html#Lemonad_ErrorHandling_Result_2_GetHashCode_
  commentId: Overload:Lemonad.ErrorHandling.Result`2.GetHashCode
  isSpec: "True"
  fullName: Lemonad.ErrorHandling.Result<T, TError>.GetHashCode
  fullName.vb: Lemonad.ErrorHandling.Result(Of T, TError).GetHashCode
  nameWithType: Result<T, TError>.GetHashCode
  nameWithType.vb: Result(Of T, TError).GetHashCode
- uid: Lemonad.ErrorHandling.Result`2.HasError
  name: HasError
  href: api/Lemonad.ErrorHandling.Result-2.html#Lemonad_ErrorHandling_Result_2_HasError
  commentId: P:Lemonad.ErrorHandling.Result`2.HasError
  fullName: Lemonad.ErrorHandling.Result<T, TError>.HasError
  fullName.vb: Lemonad.ErrorHandling.Result(Of T, TError).HasError
  nameWithType: Result<T, TError>.HasError
  nameWithType.vb: Result(Of T, TError).HasError
- uid: Lemonad.ErrorHandling.Result`2.HasError*
  name: HasError
  href: api/Lemonad.ErrorHandling.Result-2.html#Lemonad_ErrorHandling_Result_2_HasError_
  commentId: Overload:Lemonad.ErrorHandling.Result`2.HasError
  isSpec: "True"
  fullName: Lemonad.ErrorHandling.Result<T, TError>.HasError
  fullName.vb: Lemonad.ErrorHandling.Result(Of T, TError).HasError
  nameWithType: Result<T, TError>.HasError
  nameWithType.vb: Result(Of T, TError).HasError
- uid: Lemonad.ErrorHandling.Result`2.HasValue
  name: HasValue
  href: api/Lemonad.ErrorHandling.Result-2.html#Lemonad_ErrorHandling_Result_2_HasValue
  commentId: P:Lemonad.ErrorHandling.Result`2.HasValue
  fullName: Lemonad.ErrorHandling.Result<T, TError>.HasValue
  fullName.vb: Lemonad.ErrorHandling.Result(Of T, TError).HasValue
  nameWithType: Result<T, TError>.HasValue
  nameWithType.vb: Result(Of T, TError).HasValue
- uid: Lemonad.ErrorHandling.Result`2.HasValue*
  name: HasValue
  href: api/Lemonad.ErrorHandling.Result-2.html#Lemonad_ErrorHandling_Result_2_HasValue_
  commentId: Overload:Lemonad.ErrorHandling.Result`2.HasValue
  isSpec: "True"
  fullName: Lemonad.ErrorHandling.Result<T, TError>.HasValue
  fullName.vb: Lemonad.ErrorHandling.Result(Of T, TError).HasValue
  nameWithType: Result<T, TError>.HasValue
  nameWithType.vb: Result(Of T, TError).HasValue
- uid: Lemonad.ErrorHandling.Result`2.IsErrorWhen(System.Func{`0,System.Boolean},System.Func{`1})
  name: IsErrorWhen(Func<T, Boolean>, Func<TError>)
  href: api/Lemonad.ErrorHandling.Result-2.html#Lemonad_ErrorHandling_Result_2_IsErrorWhen_System_Func__0_System_Boolean__System_Func__1__
  commentId: M:Lemonad.ErrorHandling.Result`2.IsErrorWhen(System.Func{`0,System.Boolean},System.Func{`1})
  name.vb: IsErrorWhen(Func(Of T, Boolean), Func(Of TError))
  fullName: Lemonad.ErrorHandling.Result<T, TError>.IsErrorWhen(System.Func<T, System.Boolean>, System.Func<TError>)
  fullName.vb: Lemonad.ErrorHandling.Result(Of T, TError).IsErrorWhen(System.Func(Of T, System.Boolean), System.Func(Of TError))
  nameWithType: Result<T, TError>.IsErrorWhen(Func<T, Boolean>, Func<TError>)
  nameWithType.vb: Result(Of T, TError).IsErrorWhen(Func(Of T, Boolean), Func(Of TError))
- uid: Lemonad.ErrorHandling.Result`2.IsErrorWhen(System.Func{`0,System.Boolean},System.Func{Lemonad.ErrorHandling.Maybe{`0},`1})
  name: IsErrorWhen(Func<T, Boolean>, Func<Maybe<T>, TError>)
  href: api/Lemonad.ErrorHandling.Result-2.html#Lemonad_ErrorHandling_Result_2_IsErrorWhen_System_Func__0_System_Boolean__System_Func_Lemonad_ErrorHandling_Maybe__0___1__
  commentId: M:Lemonad.ErrorHandling.Result`2.IsErrorWhen(System.Func{`0,System.Boolean},System.Func{Lemonad.ErrorHandling.Maybe{`0},`1})
  name.vb: IsErrorWhen(Func(Of T, Boolean), Func(Of Maybe(Of T), TError))
  fullName: Lemonad.ErrorHandling.Result<T, TError>.IsErrorWhen(System.Func<T, System.Boolean>, System.Func<Lemonad.ErrorHandling.Maybe<T>, TError>)
  fullName.vb: Lemonad.ErrorHandling.Result(Of T, TError).IsErrorWhen(System.Func(Of T, System.Boolean), System.Func(Of Lemonad.ErrorHandling.Maybe(Of T), TError))
  nameWithType: Result<T, TError>.IsErrorWhen(Func<T, Boolean>, Func<Maybe<T>, TError>)
  nameWithType.vb: Result(Of T, TError).IsErrorWhen(Func(Of T, Boolean), Func(Of Maybe(Of T), TError))
- uid: Lemonad.ErrorHandling.Result`2.IsErrorWhen(System.Func{`0,System.Threading.Tasks.Task{System.Boolean}},System.Func{`1})
  name: IsErrorWhen(Func<T, Task<Boolean>>, Func<TError>)
  href: api/Lemonad.ErrorHandling.Result-2.html#Lemonad_ErrorHandling_Result_2_IsErrorWhen_System_Func__0_System_Threading_Tasks_Task_System_Boolean___System_Func__1__
  commentId: M:Lemonad.ErrorHandling.Result`2.IsErrorWhen(System.Func{`0,System.Threading.Tasks.Task{System.Boolean}},System.Func{`1})
  name.vb: IsErrorWhen(Func(Of T, Task(Of Boolean)), Func(Of TError))
  fullName: Lemonad.ErrorHandling.Result<T, TError>.IsErrorWhen(System.Func<T, System.Threading.Tasks.Task<System.Boolean>>, System.Func<TError>)
  fullName.vb: Lemonad.ErrorHandling.Result(Of T, TError).IsErrorWhen(System.Func(Of T, System.Threading.Tasks.Task(Of System.Boolean)), System.Func(Of TError))
  nameWithType: Result<T, TError>.IsErrorWhen(Func<T, Task<Boolean>>, Func<TError>)
  nameWithType.vb: Result(Of T, TError).IsErrorWhen(Func(Of T, Task(Of Boolean)), Func(Of TError))
- uid: Lemonad.ErrorHandling.Result`2.IsErrorWhen(System.Func{`0,System.Threading.Tasks.Task{System.Boolean}},System.Func{Lemonad.ErrorHandling.Maybe{`0},`1})
  name: IsErrorWhen(Func<T, Task<Boolean>>, Func<Maybe<T>, TError>)
  href: api/Lemonad.ErrorHandling.Result-2.html#Lemonad_ErrorHandling_Result_2_IsErrorWhen_System_Func__0_System_Threading_Tasks_Task_System_Boolean___System_Func_Lemonad_ErrorHandling_Maybe__0___1__
  commentId: M:Lemonad.ErrorHandling.Result`2.IsErrorWhen(System.Func{`0,System.Threading.Tasks.Task{System.Boolean}},System.Func{Lemonad.ErrorHandling.Maybe{`0},`1})
  name.vb: IsErrorWhen(Func(Of T, Task(Of Boolean)), Func(Of Maybe(Of T), TError))
  fullName: Lemonad.ErrorHandling.Result<T, TError>.IsErrorWhen(System.Func<T, System.Threading.Tasks.Task<System.Boolean>>, System.Func<Lemonad.ErrorHandling.Maybe<T>, TError>)
  fullName.vb: Lemonad.ErrorHandling.Result(Of T, TError).IsErrorWhen(System.Func(Of T, System.Threading.Tasks.Task(Of System.Boolean)), System.Func(Of Lemonad.ErrorHandling.Maybe(Of T), TError))
  nameWithType: Result<T, TError>.IsErrorWhen(Func<T, Task<Boolean>>, Func<Maybe<T>, TError>)
  nameWithType.vb: Result(Of T, TError).IsErrorWhen(Func(Of T, Task(Of Boolean)), Func(Of Maybe(Of T), TError))
- uid: Lemonad.ErrorHandling.Result`2.IsErrorWhen*
  name: IsErrorWhen
  href: api/Lemonad.ErrorHandling.Result-2.html#Lemonad_ErrorHandling_Result_2_IsErrorWhen_
  commentId: Overload:Lemonad.ErrorHandling.Result`2.IsErrorWhen
  isSpec: "True"
  fullName: Lemonad.ErrorHandling.Result<T, TError>.IsErrorWhen
  fullName.vb: Lemonad.ErrorHandling.Result(Of T, TError).IsErrorWhen
  nameWithType: Result<T, TError>.IsErrorWhen
  nameWithType.vb: Result(Of T, TError).IsErrorWhen
- uid: Lemonad.ErrorHandling.Result`2.IsErrorWhenNull(System.Func{`1})
  name: IsErrorWhenNull(Func<TError>)
  href: api/Lemonad.ErrorHandling.Result-2.html#Lemonad_ErrorHandling_Result_2_IsErrorWhenNull_System_Func__1__
  commentId: M:Lemonad.ErrorHandling.Result`2.IsErrorWhenNull(System.Func{`1})
  name.vb: IsErrorWhenNull(Func(Of TError))
  fullName: Lemonad.ErrorHandling.Result<T, TError>.IsErrorWhenNull(System.Func<TError>)
  fullName.vb: Lemonad.ErrorHandling.Result(Of T, TError).IsErrorWhenNull(System.Func(Of TError))
  nameWithType: Result<T, TError>.IsErrorWhenNull(Func<TError>)
  nameWithType.vb: Result(Of T, TError).IsErrorWhenNull(Func(Of TError))
- uid: Lemonad.ErrorHandling.Result`2.IsErrorWhenNull(System.Func{Lemonad.ErrorHandling.Maybe{`0},`1})
  name: IsErrorWhenNull(Func<Maybe<T>, TError>)
  href: api/Lemonad.ErrorHandling.Result-2.html#Lemonad_ErrorHandling_Result_2_IsErrorWhenNull_System_Func_Lemonad_ErrorHandling_Maybe__0___1__
  commentId: M:Lemonad.ErrorHandling.Result`2.IsErrorWhenNull(System.Func{Lemonad.ErrorHandling.Maybe{`0},`1})
  name.vb: IsErrorWhenNull(Func(Of Maybe(Of T), TError))
  fullName: Lemonad.ErrorHandling.Result<T, TError>.IsErrorWhenNull(System.Func<Lemonad.ErrorHandling.Maybe<T>, TError>)
  fullName.vb: Lemonad.ErrorHandling.Result(Of T, TError).IsErrorWhenNull(System.Func(Of Lemonad.ErrorHandling.Maybe(Of T), TError))
  nameWithType: Result<T, TError>.IsErrorWhenNull(Func<Maybe<T>, TError>)
  nameWithType.vb: Result(Of T, TError).IsErrorWhenNull(Func(Of Maybe(Of T), TError))
- uid: Lemonad.ErrorHandling.Result`2.IsErrorWhenNull*
  name: IsErrorWhenNull
  href: api/Lemonad.ErrorHandling.Result-2.html#Lemonad_ErrorHandling_Result_2_IsErrorWhenNull_
  commentId: Overload:Lemonad.ErrorHandling.Result`2.IsErrorWhenNull
  isSpec: "True"
  fullName: Lemonad.ErrorHandling.Result<T, TError>.IsErrorWhenNull
  fullName.vb: Lemonad.ErrorHandling.Result(Of T, TError).IsErrorWhenNull
  nameWithType: Result<T, TError>.IsErrorWhenNull
  nameWithType.vb: Result(Of T, TError).IsErrorWhenNull
- uid: Lemonad.ErrorHandling.Result`2.Join*
  name: Join
  href: api/Lemonad.ErrorHandling.Result-2.html#Lemonad_ErrorHandling_Result_2_Join_
  commentId: Overload:Lemonad.ErrorHandling.Result`2.Join
  isSpec: "True"
  fullName: Lemonad.ErrorHandling.Result<T, TError>.Join
  fullName.vb: Lemonad.ErrorHandling.Result(Of T, TError).Join
  nameWithType: Result<T, TError>.Join
  nameWithType.vb: Result(Of T, TError).Join
- uid: Lemonad.ErrorHandling.Result`2.Join``3(Lemonad.ErrorHandling.Outcome{``0,`1},System.Func{`0,``1},System.Func{``0,``1},System.Func{`0,``0,``2},System.Func{`1})
  name: Join<TInner, TKey, TResult>(Outcome<TInner, TError>, Func<T, TKey>, Func<TInner, TKey>, Func<T, TInner, TResult>, Func<TError>)
  href: api/Lemonad.ErrorHandling.Result-2.html#Lemonad_ErrorHandling_Result_2_Join__3_Lemonad_ErrorHandling_Outcome___0__1__System_Func__0___1__System_Func___0___1__System_Func__0___0___2__System_Func__1__
  commentId: M:Lemonad.ErrorHandling.Result`2.Join``3(Lemonad.ErrorHandling.Outcome{``0,`1},System.Func{`0,``1},System.Func{``0,``1},System.Func{`0,``0,``2},System.Func{`1})
  name.vb: Join(Of TInner, TKey, TResult)(Outcome(Of TInner, TError), Func(Of T, TKey), Func(Of TInner, TKey), Func(Of T, TInner, TResult), Func(Of TError))
  fullName: Lemonad.ErrorHandling.Result<T, TError>.Join<TInner, TKey, TResult>(Lemonad.ErrorHandling.Outcome<TInner, TError>, System.Func<T, TKey>, System.Func<TInner, TKey>, System.Func<T, TInner, TResult>, System.Func<TError>)
  fullName.vb: Lemonad.ErrorHandling.Result(Of T, TError).Join(Of TInner, TKey, TResult)(Lemonad.ErrorHandling.Outcome(Of TInner, TError), System.Func(Of T, TKey), System.Func(Of TInner, TKey), System.Func(Of T, TInner, TResult), System.Func(Of TError))
  nameWithType: Result<T, TError>.Join<TInner, TKey, TResult>(Outcome<TInner, TError>, Func<T, TKey>, Func<TInner, TKey>, Func<T, TInner, TResult>, Func<TError>)
  nameWithType.vb: Result(Of T, TError).Join(Of TInner, TKey, TResult)(Outcome(Of TInner, TError), Func(Of T, TKey), Func(Of TInner, TKey), Func(Of T, TInner, TResult), Func(Of TError))
- uid: Lemonad.ErrorHandling.Result`2.Join``3(Lemonad.ErrorHandling.Outcome{``0,`1},System.Func{`0,``1},System.Func{``0,``1},System.Func{`0,``0,``2},System.Func{`1},System.Collections.Generic.IEqualityComparer{``1})
  name: Join<TInner, TKey, TResult>(Outcome<TInner, TError>, Func<T, TKey>, Func<TInner, TKey>, Func<T, TInner, TResult>, Func<TError>, IEqualityComparer<TKey>)
  href: api/Lemonad.ErrorHandling.Result-2.html#Lemonad_ErrorHandling_Result_2_Join__3_Lemonad_ErrorHandling_Outcome___0__1__System_Func__0___1__System_Func___0___1__System_Func__0___0___2__System_Func__1__System_Collections_Generic_IEqualityComparer___1__
  commentId: M:Lemonad.ErrorHandling.Result`2.Join``3(Lemonad.ErrorHandling.Outcome{``0,`1},System.Func{`0,``1},System.Func{``0,``1},System.Func{`0,``0,``2},System.Func{`1},System.Collections.Generic.IEqualityComparer{``1})
  name.vb: Join(Of TInner, TKey, TResult)(Outcome(Of TInner, TError), Func(Of T, TKey), Func(Of TInner, TKey), Func(Of T, TInner, TResult), Func(Of TError), IEqualityComparer(Of TKey))
  fullName: Lemonad.ErrorHandling.Result<T, TError>.Join<TInner, TKey, TResult>(Lemonad.ErrorHandling.Outcome<TInner, TError>, System.Func<T, TKey>, System.Func<TInner, TKey>, System.Func<T, TInner, TResult>, System.Func<TError>, System.Collections.Generic.IEqualityComparer<TKey>)
  fullName.vb: Lemonad.ErrorHandling.Result(Of T, TError).Join(Of TInner, TKey, TResult)(Lemonad.ErrorHandling.Outcome(Of TInner, TError), System.Func(Of T, TKey), System.Func(Of TInner, TKey), System.Func(Of T, TInner, TResult), System.Func(Of TError), System.Collections.Generic.IEqualityComparer(Of TKey))
  nameWithType: Result<T, TError>.Join<TInner, TKey, TResult>(Outcome<TInner, TError>, Func<T, TKey>, Func<TInner, TKey>, Func<T, TInner, TResult>, Func<TError>, IEqualityComparer<TKey>)
  nameWithType.vb: Result(Of T, TError).Join(Of TInner, TKey, TResult)(Outcome(Of TInner, TError), Func(Of T, TKey), Func(Of TInner, TKey), Func(Of T, TInner, TResult), Func(Of TError), IEqualityComparer(Of TKey))
- uid: Lemonad.ErrorHandling.Result`2.Join``3(Lemonad.ErrorHandling.Result{``0,`1},System.Func{`0,``1},System.Func{``0,``1},System.Func{`0,``0,``2},System.Func{`1})
  name: Join<TInner, TKey, TResult>(Result<TInner, TError>, Func<T, TKey>, Func<TInner, TKey>, Func<T, TInner, TResult>, Func<TError>)
  href: api/Lemonad.ErrorHandling.Result-2.html#Lemonad_ErrorHandling_Result_2_Join__3_Lemonad_ErrorHandling_Result___0__1__System_Func__0___1__System_Func___0___1__System_Func__0___0___2__System_Func__1__
  commentId: M:Lemonad.ErrorHandling.Result`2.Join``3(Lemonad.ErrorHandling.Result{``0,`1},System.Func{`0,``1},System.Func{``0,``1},System.Func{`0,``0,``2},System.Func{`1})
  name.vb: Join(Of TInner, TKey, TResult)(Result(Of TInner, TError), Func(Of T, TKey), Func(Of TInner, TKey), Func(Of T, TInner, TResult), Func(Of TError))
  fullName: Lemonad.ErrorHandling.Result<T, TError>.Join<TInner, TKey, TResult>(Lemonad.ErrorHandling.Result<TInner, TError>, System.Func<T, TKey>, System.Func<TInner, TKey>, System.Func<T, TInner, TResult>, System.Func<TError>)
  fullName.vb: Lemonad.ErrorHandling.Result(Of T, TError).Join(Of TInner, TKey, TResult)(Lemonad.ErrorHandling.Result(Of TInner, TError), System.Func(Of T, TKey), System.Func(Of TInner, TKey), System.Func(Of T, TInner, TResult), System.Func(Of TError))
  nameWithType: Result<T, TError>.Join<TInner, TKey, TResult>(Result<TInner, TError>, Func<T, TKey>, Func<TInner, TKey>, Func<T, TInner, TResult>, Func<TError>)
  nameWithType.vb: Result(Of T, TError).Join(Of TInner, TKey, TResult)(Result(Of TInner, TError), Func(Of T, TKey), Func(Of TInner, TKey), Func(Of T, TInner, TResult), Func(Of TError))
- uid: Lemonad.ErrorHandling.Result`2.Join``3(Lemonad.ErrorHandling.Result{``0,`1},System.Func{`0,``1},System.Func{``0,``1},System.Func{`0,``0,``2},System.Func{`1},System.Collections.Generic.IEqualityComparer{``1})
  name: Join<TInner, TKey, TResult>(Result<TInner, TError>, Func<T, TKey>, Func<TInner, TKey>, Func<T, TInner, TResult>, Func<TError>, IEqualityComparer<TKey>)
  href: api/Lemonad.ErrorHandling.Result-2.html#Lemonad_ErrorHandling_Result_2_Join__3_Lemonad_ErrorHandling_Result___0__1__System_Func__0___1__System_Func___0___1__System_Func__0___0___2__System_Func__1__System_Collections_Generic_IEqualityComparer___1__
  commentId: M:Lemonad.ErrorHandling.Result`2.Join``3(Lemonad.ErrorHandling.Result{``0,`1},System.Func{`0,``1},System.Func{``0,``1},System.Func{`0,``0,``2},System.Func{`1},System.Collections.Generic.IEqualityComparer{``1})
  name.vb: Join(Of TInner, TKey, TResult)(Result(Of TInner, TError), Func(Of T, TKey), Func(Of TInner, TKey), Func(Of T, TInner, TResult), Func(Of TError), IEqualityComparer(Of TKey))
  fullName: Lemonad.ErrorHandling.Result<T, TError>.Join<TInner, TKey, TResult>(Lemonad.ErrorHandling.Result<TInner, TError>, System.Func<T, TKey>, System.Func<TInner, TKey>, System.Func<T, TInner, TResult>, System.Func<TError>, System.Collections.Generic.IEqualityComparer<TKey>)
  fullName.vb: Lemonad.ErrorHandling.Result(Of T, TError).Join(Of TInner, TKey, TResult)(Lemonad.ErrorHandling.Result(Of TInner, TError), System.Func(Of T, TKey), System.Func(Of TInner, TKey), System.Func(Of T, TInner, TResult), System.Func(Of TError), System.Collections.Generic.IEqualityComparer(Of TKey))
  nameWithType: Result<T, TError>.Join<TInner, TKey, TResult>(Result<TInner, TError>, Func<T, TKey>, Func<TInner, TKey>, Func<T, TInner, TResult>, Func<TError>, IEqualityComparer<TKey>)
  nameWithType.vb: Result(Of T, TError).Join(Of TInner, TKey, TResult)(Result(Of TInner, TError), Func(Of T, TKey), Func(Of TInner, TKey), Func(Of T, TInner, TResult), Func(Of TError), IEqualityComparer(Of TKey))
- uid: Lemonad.ErrorHandling.Result`2.Join``3(System.Threading.Tasks.Task{Lemonad.ErrorHandling.Result{``0,`1}},System.Func{`0,``1},System.Func{``0,``1},System.Func{`0,``0,``2},System.Func{`1})
  name: Join<TInner, TKey, TResult>(Task<Result<TInner, TError>>, Func<T, TKey>, Func<TInner, TKey>, Func<T, TInner, TResult>, Func<TError>)
  href: api/Lemonad.ErrorHandling.Result-2.html#Lemonad_ErrorHandling_Result_2_Join__3_System_Threading_Tasks_Task_Lemonad_ErrorHandling_Result___0__1___System_Func__0___1__System_Func___0___1__System_Func__0___0___2__System_Func__1__
  commentId: M:Lemonad.ErrorHandling.Result`2.Join``3(System.Threading.Tasks.Task{Lemonad.ErrorHandling.Result{``0,`1}},System.Func{`0,``1},System.Func{``0,``1},System.Func{`0,``0,``2},System.Func{`1})
  name.vb: Join(Of TInner, TKey, TResult)(Task(Of Result(Of TInner, TError)), Func(Of T, TKey), Func(Of TInner, TKey), Func(Of T, TInner, TResult), Func(Of TError))
  fullName: Lemonad.ErrorHandling.Result<T, TError>.Join<TInner, TKey, TResult>(System.Threading.Tasks.Task<Lemonad.ErrorHandling.Result<TInner, TError>>, System.Func<T, TKey>, System.Func<TInner, TKey>, System.Func<T, TInner, TResult>, System.Func<TError>)
  fullName.vb: Lemonad.ErrorHandling.Result(Of T, TError).Join(Of TInner, TKey, TResult)(System.Threading.Tasks.Task(Of Lemonad.ErrorHandling.Result(Of TInner, TError)), System.Func(Of T, TKey), System.Func(Of TInner, TKey), System.Func(Of T, TInner, TResult), System.Func(Of TError))
  nameWithType: Result<T, TError>.Join<TInner, TKey, TResult>(Task<Result<TInner, TError>>, Func<T, TKey>, Func<TInner, TKey>, Func<T, TInner, TResult>, Func<TError>)
  nameWithType.vb: Result(Of T, TError).Join(Of TInner, TKey, TResult)(Task(Of Result(Of TInner, TError)), Func(Of T, TKey), Func(Of TInner, TKey), Func(Of T, TInner, TResult), Func(Of TError))
- uid: Lemonad.ErrorHandling.Result`2.Join``3(System.Threading.Tasks.Task{Lemonad.ErrorHandling.Result{``0,`1}},System.Func{`0,``1},System.Func{``0,``1},System.Func{`0,``0,``2},System.Func{`1},System.Collections.Generic.IEqualityComparer{``1})
  name: Join<TInner, TKey, TResult>(Task<Result<TInner, TError>>, Func<T, TKey>, Func<TInner, TKey>, Func<T, TInner, TResult>, Func<TError>, IEqualityComparer<TKey>)
  href: api/Lemonad.ErrorHandling.Result-2.html#Lemonad_ErrorHandling_Result_2_Join__3_System_Threading_Tasks_Task_Lemonad_ErrorHandling_Result___0__1___System_Func__0___1__System_Func___0___1__System_Func__0___0___2__System_Func__1__System_Collections_Generic_IEqualityComparer___1__
  commentId: M:Lemonad.ErrorHandling.Result`2.Join``3(System.Threading.Tasks.Task{Lemonad.ErrorHandling.Result{``0,`1}},System.Func{`0,``1},System.Func{``0,``1},System.Func{`0,``0,``2},System.Func{`1},System.Collections.Generic.IEqualityComparer{``1})
  name.vb: Join(Of TInner, TKey, TResult)(Task(Of Result(Of TInner, TError)), Func(Of T, TKey), Func(Of TInner, TKey), Func(Of T, TInner, TResult), Func(Of TError), IEqualityComparer(Of TKey))
  fullName: Lemonad.ErrorHandling.Result<T, TError>.Join<TInner, TKey, TResult>(System.Threading.Tasks.Task<Lemonad.ErrorHandling.Result<TInner, TError>>, System.Func<T, TKey>, System.Func<TInner, TKey>, System.Func<T, TInner, TResult>, System.Func<TError>, System.Collections.Generic.IEqualityComparer<TKey>)
  fullName.vb: Lemonad.ErrorHandling.Result(Of T, TError).Join(Of TInner, TKey, TResult)(System.Threading.Tasks.Task(Of Lemonad.ErrorHandling.Result(Of TInner, TError)), System.Func(Of T, TKey), System.Func(Of TInner, TKey), System.Func(Of T, TInner, TResult), System.Func(Of TError), System.Collections.Generic.IEqualityComparer(Of TKey))
  nameWithType: Result<T, TError>.Join<TInner, TKey, TResult>(Task<Result<TInner, TError>>, Func<T, TKey>, Func<TInner, TKey>, Func<T, TInner, TResult>, Func<TError>, IEqualityComparer<TKey>)
  nameWithType.vb: Result(Of T, TError).Join(Of TInner, TKey, TResult)(Task(Of Result(Of TInner, TError)), Func(Of T, TKey), Func(Of TInner, TKey), Func(Of T, TInner, TResult), Func(Of TError), IEqualityComparer(Of TKey))
- uid: Lemonad.ErrorHandling.Result`2.Map*
  name: Map
  href: api/Lemonad.ErrorHandling.Result-2.html#Lemonad_ErrorHandling_Result_2_Map_
  commentId: Overload:Lemonad.ErrorHandling.Result`2.Map
  isSpec: "True"
  fullName: Lemonad.ErrorHandling.Result<T, TError>.Map
  fullName.vb: Lemonad.ErrorHandling.Result(Of T, TError).Map
  nameWithType: Result<T, TError>.Map
  nameWithType.vb: Result(Of T, TError).Map
- uid: Lemonad.ErrorHandling.Result`2.Map``1(System.Func{`0,``0})
  name: Map<TResult>(Func<T, TResult>)
  href: api/Lemonad.ErrorHandling.Result-2.html#Lemonad_ErrorHandling_Result_2_Map__1_System_Func__0___0__
  commentId: M:Lemonad.ErrorHandling.Result`2.Map``1(System.Func{`0,``0})
  name.vb: Map(Of TResult)(Func(Of T, TResult))
  fullName: Lemonad.ErrorHandling.Result<T, TError>.Map<TResult>(System.Func<T, TResult>)
  fullName.vb: Lemonad.ErrorHandling.Result(Of T, TError).Map(Of TResult)(System.Func(Of T, TResult))
  nameWithType: Result<T, TError>.Map<TResult>(Func<T, TResult>)
  nameWithType.vb: Result(Of T, TError).Map(Of TResult)(Func(Of T, TResult))
- uid: Lemonad.ErrorHandling.Result`2.Map``1(System.Func{`0,System.Threading.Tasks.Task{``0}})
  name: Map<TResult>(Func<T, Task<TResult>>)
  href: api/Lemonad.ErrorHandling.Result-2.html#Lemonad_ErrorHandling_Result_2_Map__1_System_Func__0_System_Threading_Tasks_Task___0___
  commentId: M:Lemonad.ErrorHandling.Result`2.Map``1(System.Func{`0,System.Threading.Tasks.Task{``0}})
  name.vb: Map(Of TResult)(Func(Of T, Task(Of TResult)))
  fullName: Lemonad.ErrorHandling.Result<T, TError>.Map<TResult>(System.Func<T, System.Threading.Tasks.Task<TResult>>)
  fullName.vb: Lemonad.ErrorHandling.Result(Of T, TError).Map(Of TResult)(System.Func(Of T, System.Threading.Tasks.Task(Of TResult)))
  nameWithType: Result<T, TError>.Map<TResult>(Func<T, Task<TResult>>)
  nameWithType.vb: Result(Of T, TError).Map(Of TResult)(Func(Of T, Task(Of TResult)))
- uid: Lemonad.ErrorHandling.Result`2.MapError*
  name: MapError
  href: api/Lemonad.ErrorHandling.Result-2.html#Lemonad_ErrorHandling_Result_2_MapError_
  commentId: Overload:Lemonad.ErrorHandling.Result`2.MapError
  isSpec: "True"
  fullName: Lemonad.ErrorHandling.Result<T, TError>.MapError
  fullName.vb: Lemonad.ErrorHandling.Result(Of T, TError).MapError
  nameWithType: Result<T, TError>.MapError
  nameWithType.vb: Result(Of T, TError).MapError
- uid: Lemonad.ErrorHandling.Result`2.MapError``1(System.Func{`1,``0})
  name: MapError<TErrorResult>(Func<TError, TErrorResult>)
  href: api/Lemonad.ErrorHandling.Result-2.html#Lemonad_ErrorHandling_Result_2_MapError__1_System_Func__1___0__
  commentId: M:Lemonad.ErrorHandling.Result`2.MapError``1(System.Func{`1,``0})
  name.vb: MapError(Of TErrorResult)(Func(Of TError, TErrorResult))
  fullName: Lemonad.ErrorHandling.Result<T, TError>.MapError<TErrorResult>(System.Func<TError, TErrorResult>)
  fullName.vb: Lemonad.ErrorHandling.Result(Of T, TError).MapError(Of TErrorResult)(System.Func(Of TError, TErrorResult))
  nameWithType: Result<T, TError>.MapError<TErrorResult>(Func<TError, TErrorResult>)
  nameWithType.vb: Result(Of T, TError).MapError(Of TErrorResult)(Func(Of TError, TErrorResult))
- uid: Lemonad.ErrorHandling.Result`2.MapError``1(System.Func{`1,System.Threading.Tasks.Task{``0}})
  name: MapError<TErrorResult>(Func<TError, Task<TErrorResult>>)
  href: api/Lemonad.ErrorHandling.Result-2.html#Lemonad_ErrorHandling_Result_2_MapError__1_System_Func__1_System_Threading_Tasks_Task___0___
  commentId: M:Lemonad.ErrorHandling.Result`2.MapError``1(System.Func{`1,System.Threading.Tasks.Task{``0}})
  name.vb: MapError(Of TErrorResult)(Func(Of TError, Task(Of TErrorResult)))
  fullName: Lemonad.ErrorHandling.Result<T, TError>.MapError<TErrorResult>(System.Func<TError, System.Threading.Tasks.Task<TErrorResult>>)
  fullName.vb: Lemonad.ErrorHandling.Result(Of T, TError).MapError(Of TErrorResult)(System.Func(Of TError, System.Threading.Tasks.Task(Of TErrorResult)))
  nameWithType: Result<T, TError>.MapError<TErrorResult>(Func<TError, Task<TErrorResult>>)
  nameWithType.vb: Result(Of T, TError).MapError(Of TErrorResult)(Func(Of TError, Task(Of TErrorResult)))
- uid: Lemonad.ErrorHandling.Result`2.Match(System.Action{`0},System.Action{`1})
  name: Match(Action<T>, Action<TError>)
  href: api/Lemonad.ErrorHandling.Result-2.html#Lemonad_ErrorHandling_Result_2_Match_System_Action__0__System_Action__1__
  commentId: M:Lemonad.ErrorHandling.Result`2.Match(System.Action{`0},System.Action{`1})
  name.vb: Match(Action(Of T), Action(Of TError))
  fullName: Lemonad.ErrorHandling.Result<T, TError>.Match(System.Action<T>, System.Action<TError>)
  fullName.vb: Lemonad.ErrorHandling.Result(Of T, TError).Match(System.Action(Of T), System.Action(Of TError))
  nameWithType: Result<T, TError>.Match(Action<T>, Action<TError>)
  nameWithType.vb: Result(Of T, TError).Match(Action(Of T), Action(Of TError))
- uid: Lemonad.ErrorHandling.Result`2.Match*
  name: Match
  href: api/Lemonad.ErrorHandling.Result-2.html#Lemonad_ErrorHandling_Result_2_Match_
  commentId: Overload:Lemonad.ErrorHandling.Result`2.Match
  isSpec: "True"
  fullName: Lemonad.ErrorHandling.Result<T, TError>.Match
  fullName.vb: Lemonad.ErrorHandling.Result(Of T, TError).Match
  nameWithType: Result<T, TError>.Match
  nameWithType.vb: Result(Of T, TError).Match
- uid: Lemonad.ErrorHandling.Result`2.Match``1(System.Func{`0,``0},System.Func{`1,``0})
  name: Match<TResult>(Func<T, TResult>, Func<TError, TResult>)
  href: api/Lemonad.ErrorHandling.Result-2.html#Lemonad_ErrorHandling_Result_2_Match__1_System_Func__0___0__System_Func__1___0__
  commentId: M:Lemonad.ErrorHandling.Result`2.Match``1(System.Func{`0,``0},System.Func{`1,``0})
  name.vb: Match(Of TResult)(Func(Of T, TResult), Func(Of TError, TResult))
  fullName: Lemonad.ErrorHandling.Result<T, TError>.Match<TResult>(System.Func<T, TResult>, System.Func<TError, TResult>)
  fullName.vb: Lemonad.ErrorHandling.Result(Of T, TError).Match(Of TResult)(System.Func(Of T, TResult), System.Func(Of TError, TResult))
  nameWithType: Result<T, TError>.Match<TResult>(Func<T, TResult>, Func<TError, TResult>)
  nameWithType.vb: Result(Of T, TError).Match(Of TResult)(Func(Of T, TResult), Func(Of TError, TResult))
- uid: Lemonad.ErrorHandling.Result`2.Multiple(System.Func{Lemonad.ErrorHandling.Result{`0,`1},Lemonad.ErrorHandling.Result{`0,`1}}[])
  name: Multiple(Func<Result<T, TError>, Result<T, TError>>[])
  href: api/Lemonad.ErrorHandling.Result-2.html#Lemonad_ErrorHandling_Result_2_Multiple_System_Func_Lemonad_ErrorHandling_Result__0__1__Lemonad_ErrorHandling_Result__0__1_____
  commentId: M:Lemonad.ErrorHandling.Result`2.Multiple(System.Func{Lemonad.ErrorHandling.Result{`0,`1},Lemonad.ErrorHandling.Result{`0,`1}}[])
  name.vb: Multiple(Func(Of Result(Of T, TError), Result(Of T, TError))())
  fullName: Lemonad.ErrorHandling.Result<T, TError>.Multiple(System.Func<Lemonad.ErrorHandling.Result<T, TError>, Lemonad.ErrorHandling.Result<T, TError>>[])
  fullName.vb: Lemonad.ErrorHandling.Result(Of T, TError).Multiple(System.Func(Of Lemonad.ErrorHandling.Result(Of T, TError), Lemonad.ErrorHandling.Result(Of T, TError))())
  nameWithType: Result<T, TError>.Multiple(Func<Result<T, TError>, Result<T, TError>>[])
  nameWithType.vb: Result(Of T, TError).Multiple(Func(Of Result(Of T, TError), Result(Of T, TError))())
- uid: Lemonad.ErrorHandling.Result`2.Multiple*
  name: Multiple
  href: api/Lemonad.ErrorHandling.Result-2.html#Lemonad_ErrorHandling_Result_2_Multiple_
  commentId: Overload:Lemonad.ErrorHandling.Result`2.Multiple
  isSpec: "True"
  fullName: Lemonad.ErrorHandling.Result<T, TError>.Multiple
  fullName.vb: Lemonad.ErrorHandling.Result(Of T, TError).Multiple
  nameWithType: Result<T, TError>.Multiple
  nameWithType.vb: Result(Of T, TError).Multiple
- uid: Lemonad.ErrorHandling.Result`2.op_Equality(Lemonad.ErrorHandling.Result{`0,`1},Lemonad.ErrorHandling.Result{`0,`1})
  name: Equality(Result<T, TError>, Result<T, TError>)
  href: api/Lemonad.ErrorHandling.Result-2.html#Lemonad_ErrorHandling_Result_2_op_Equality_Lemonad_ErrorHandling_Result__0__1__Lemonad_ErrorHandling_Result__0__1__
  commentId: M:Lemonad.ErrorHandling.Result`2.op_Equality(Lemonad.ErrorHandling.Result{`0,`1},Lemonad.ErrorHandling.Result{`0,`1})
  name.vb: Equality(Result(Of T, TError), Result(Of T, TError))
  fullName: Lemonad.ErrorHandling.Result<T, TError>.Equality(Lemonad.ErrorHandling.Result<T, TError>, Lemonad.ErrorHandling.Result<T, TError>)
  fullName.vb: Lemonad.ErrorHandling.Result(Of T, TError).Equality(Lemonad.ErrorHandling.Result(Of T, TError), Lemonad.ErrorHandling.Result(Of T, TError))
  nameWithType: Result<T, TError>.Equality(Result<T, TError>, Result<T, TError>)
  nameWithType.vb: Result(Of T, TError).Equality(Result(Of T, TError), Result(Of T, TError))
- uid: Lemonad.ErrorHandling.Result`2.op_Equality*
  name: Equality
  href: api/Lemonad.ErrorHandling.Result-2.html#Lemonad_ErrorHandling_Result_2_op_Equality_
  commentId: Overload:Lemonad.ErrorHandling.Result`2.op_Equality
  isSpec: "True"
  fullName: Lemonad.ErrorHandling.Result<T, TError>.Equality
  fullName.vb: Lemonad.ErrorHandling.Result(Of T, TError).Equality
  nameWithType: Result<T, TError>.Equality
  nameWithType.vb: Result(Of T, TError).Equality
- uid: Lemonad.ErrorHandling.Result`2.op_GreaterThan(Lemonad.ErrorHandling.Result{`0,`1},Lemonad.ErrorHandling.Result{`0,`1})
  name: GreaterThan(Result<T, TError>, Result<T, TError>)
  href: api/Lemonad.ErrorHandling.Result-2.html#Lemonad_ErrorHandling_Result_2_op_GreaterThan_Lemonad_ErrorHandling_Result__0__1__Lemonad_ErrorHandling_Result__0__1__
  commentId: M:Lemonad.ErrorHandling.Result`2.op_GreaterThan(Lemonad.ErrorHandling.Result{`0,`1},Lemonad.ErrorHandling.Result{`0,`1})
  name.vb: GreaterThan(Result(Of T, TError), Result(Of T, TError))
  fullName: Lemonad.ErrorHandling.Result<T, TError>.GreaterThan(Lemonad.ErrorHandling.Result<T, TError>, Lemonad.ErrorHandling.Result<T, TError>)
  fullName.vb: Lemonad.ErrorHandling.Result(Of T, TError).GreaterThan(Lemonad.ErrorHandling.Result(Of T, TError), Lemonad.ErrorHandling.Result(Of T, TError))
  nameWithType: Result<T, TError>.GreaterThan(Result<T, TError>, Result<T, TError>)
  nameWithType.vb: Result(Of T, TError).GreaterThan(Result(Of T, TError), Result(Of T, TError))
- uid: Lemonad.ErrorHandling.Result`2.op_GreaterThan*
  name: GreaterThan
  href: api/Lemonad.ErrorHandling.Result-2.html#Lemonad_ErrorHandling_Result_2_op_GreaterThan_
  commentId: Overload:Lemonad.ErrorHandling.Result`2.op_GreaterThan
  isSpec: "True"
  fullName: Lemonad.ErrorHandling.Result<T, TError>.GreaterThan
  fullName.vb: Lemonad.ErrorHandling.Result(Of T, TError).GreaterThan
  nameWithType: Result<T, TError>.GreaterThan
  nameWithType.vb: Result(Of T, TError).GreaterThan
- uid: Lemonad.ErrorHandling.Result`2.op_GreaterThanOrEqual(Lemonad.ErrorHandling.Result{`0,`1},Lemonad.ErrorHandling.Result{`0,`1})
  name: GreaterThanOrEqual(Result<T, TError>, Result<T, TError>)
  href: api/Lemonad.ErrorHandling.Result-2.html#Lemonad_ErrorHandling_Result_2_op_GreaterThanOrEqual_Lemonad_ErrorHandling_Result__0__1__Lemonad_ErrorHandling_Result__0__1__
  commentId: M:Lemonad.ErrorHandling.Result`2.op_GreaterThanOrEqual(Lemonad.ErrorHandling.Result{`0,`1},Lemonad.ErrorHandling.Result{`0,`1})
  name.vb: GreaterThanOrEqual(Result(Of T, TError), Result(Of T, TError))
  fullName: Lemonad.ErrorHandling.Result<T, TError>.GreaterThanOrEqual(Lemonad.ErrorHandling.Result<T, TError>, Lemonad.ErrorHandling.Result<T, TError>)
  fullName.vb: Lemonad.ErrorHandling.Result(Of T, TError).GreaterThanOrEqual(Lemonad.ErrorHandling.Result(Of T, TError), Lemonad.ErrorHandling.Result(Of T, TError))
  nameWithType: Result<T, TError>.GreaterThanOrEqual(Result<T, TError>, Result<T, TError>)
  nameWithType.vb: Result(Of T, TError).GreaterThanOrEqual(Result(Of T, TError), Result(Of T, TError))
- uid: Lemonad.ErrorHandling.Result`2.op_GreaterThanOrEqual*
  name: GreaterThanOrEqual
  href: api/Lemonad.ErrorHandling.Result-2.html#Lemonad_ErrorHandling_Result_2_op_GreaterThanOrEqual_
  commentId: Overload:Lemonad.ErrorHandling.Result`2.op_GreaterThanOrEqual
  isSpec: "True"
  fullName: Lemonad.ErrorHandling.Result<T, TError>.GreaterThanOrEqual
  fullName.vb: Lemonad.ErrorHandling.Result(Of T, TError).GreaterThanOrEqual
  nameWithType: Result<T, TError>.GreaterThanOrEqual
  nameWithType.vb: Result(Of T, TError).GreaterThanOrEqual
- uid: Lemonad.ErrorHandling.Result`2.op_Implicit(`0)~Lemonad.ErrorHandling.Result{`0,`1}
  name: Implicit(T to Result<T, TError>)
  href: api/Lemonad.ErrorHandling.Result-2.html#Lemonad_ErrorHandling_Result_2_op_Implicit__0__Lemonad_ErrorHandling_Result__0__1_
  commentId: M:Lemonad.ErrorHandling.Result`2.op_Implicit(`0)~Lemonad.ErrorHandling.Result{`0,`1}
  name.vb: Widening(T to Result(Of T, TError))
  fullName: Lemonad.ErrorHandling.Result<T, TError>.Implicit(T to Lemonad.ErrorHandling.Result<T, TError>)
  fullName.vb: Lemonad.ErrorHandling.Result(Of T, TError).Widening(T to Lemonad.ErrorHandling.Result(Of T, TError))
  nameWithType: Result<T, TError>.Implicit(T to Result<T, TError>)
  nameWithType.vb: Result(Of T, TError).Widening(T to Result(Of T, TError))
- uid: Lemonad.ErrorHandling.Result`2.op_Implicit(`1)~Lemonad.ErrorHandling.Result{`0,`1}
  name: Implicit(TError to Result<T, TError>)
  href: api/Lemonad.ErrorHandling.Result-2.html#Lemonad_ErrorHandling_Result_2_op_Implicit__1__Lemonad_ErrorHandling_Result__0__1_
  commentId: M:Lemonad.ErrorHandling.Result`2.op_Implicit(`1)~Lemonad.ErrorHandling.Result{`0,`1}
  name.vb: Widening(TError to Result(Of T, TError))
  fullName: Lemonad.ErrorHandling.Result<T, TError>.Implicit(TError to Lemonad.ErrorHandling.Result<T, TError>)
  fullName.vb: Lemonad.ErrorHandling.Result(Of T, TError).Widening(TError to Lemonad.ErrorHandling.Result(Of T, TError))
  nameWithType: Result<T, TError>.Implicit(TError to Result<T, TError>)
  nameWithType.vb: Result(Of T, TError).Widening(TError to Result(Of T, TError))
- uid: Lemonad.ErrorHandling.Result`2.op_Implicit*
  name: Implicit
  href: api/Lemonad.ErrorHandling.Result-2.html#Lemonad_ErrorHandling_Result_2_op_Implicit_
  commentId: Overload:Lemonad.ErrorHandling.Result`2.op_Implicit
  isSpec: "True"
  name.vb: Widening
  fullName: Lemonad.ErrorHandling.Result<T, TError>.Implicit
  fullName.vb: Lemonad.ErrorHandling.Result(Of T, TError).Widening
  nameWithType: Result<T, TError>.Implicit
  nameWithType.vb: Result(Of T, TError).Widening
- uid: Lemonad.ErrorHandling.Result`2.op_Inequality(Lemonad.ErrorHandling.Result{`0,`1},Lemonad.ErrorHandling.Result{`0,`1})
  name: Inequality(Result<T, TError>, Result<T, TError>)
  href: api/Lemonad.ErrorHandling.Result-2.html#Lemonad_ErrorHandling_Result_2_op_Inequality_Lemonad_ErrorHandling_Result__0__1__Lemonad_ErrorHandling_Result__0__1__
  commentId: M:Lemonad.ErrorHandling.Result`2.op_Inequality(Lemonad.ErrorHandling.Result{`0,`1},Lemonad.ErrorHandling.Result{`0,`1})
  name.vb: Inequality(Result(Of T, TError), Result(Of T, TError))
  fullName: Lemonad.ErrorHandling.Result<T, TError>.Inequality(Lemonad.ErrorHandling.Result<T, TError>, Lemonad.ErrorHandling.Result<T, TError>)
  fullName.vb: Lemonad.ErrorHandling.Result(Of T, TError).Inequality(Lemonad.ErrorHandling.Result(Of T, TError), Lemonad.ErrorHandling.Result(Of T, TError))
  nameWithType: Result<T, TError>.Inequality(Result<T, TError>, Result<T, TError>)
  nameWithType.vb: Result(Of T, TError).Inequality(Result(Of T, TError), Result(Of T, TError))
- uid: Lemonad.ErrorHandling.Result`2.op_Inequality*
  name: Inequality
  href: api/Lemonad.ErrorHandling.Result-2.html#Lemonad_ErrorHandling_Result_2_op_Inequality_
  commentId: Overload:Lemonad.ErrorHandling.Result`2.op_Inequality
  isSpec: "True"
  fullName: Lemonad.ErrorHandling.Result<T, TError>.Inequality
  fullName.vb: Lemonad.ErrorHandling.Result(Of T, TError).Inequality
  nameWithType: Result<T, TError>.Inequality
  nameWithType.vb: Result(Of T, TError).Inequality
- uid: Lemonad.ErrorHandling.Result`2.op_LessThan(Lemonad.ErrorHandling.Result{`0,`1},Lemonad.ErrorHandling.Result{`0,`1})
  name: LessThan(Result<T, TError>, Result<T, TError>)
  href: api/Lemonad.ErrorHandling.Result-2.html#Lemonad_ErrorHandling_Result_2_op_LessThan_Lemonad_ErrorHandling_Result__0__1__Lemonad_ErrorHandling_Result__0__1__
  commentId: M:Lemonad.ErrorHandling.Result`2.op_LessThan(Lemonad.ErrorHandling.Result{`0,`1},Lemonad.ErrorHandling.Result{`0,`1})
  name.vb: LessThan(Result(Of T, TError), Result(Of T, TError))
  fullName: Lemonad.ErrorHandling.Result<T, TError>.LessThan(Lemonad.ErrorHandling.Result<T, TError>, Lemonad.ErrorHandling.Result<T, TError>)
  fullName.vb: Lemonad.ErrorHandling.Result(Of T, TError).LessThan(Lemonad.ErrorHandling.Result(Of T, TError), Lemonad.ErrorHandling.Result(Of T, TError))
  nameWithType: Result<T, TError>.LessThan(Result<T, TError>, Result<T, TError>)
  nameWithType.vb: Result(Of T, TError).LessThan(Result(Of T, TError), Result(Of T, TError))
- uid: Lemonad.ErrorHandling.Result`2.op_LessThan*
  name: LessThan
  href: api/Lemonad.ErrorHandling.Result-2.html#Lemonad_ErrorHandling_Result_2_op_LessThan_
  commentId: Overload:Lemonad.ErrorHandling.Result`2.op_LessThan
  isSpec: "True"
  fullName: Lemonad.ErrorHandling.Result<T, TError>.LessThan
  fullName.vb: Lemonad.ErrorHandling.Result(Of T, TError).LessThan
  nameWithType: Result<T, TError>.LessThan
  nameWithType.vb: Result(Of T, TError).LessThan
- uid: Lemonad.ErrorHandling.Result`2.op_LessThanOrEqual(Lemonad.ErrorHandling.Result{`0,`1},Lemonad.ErrorHandling.Result{`0,`1})
  name: LessThanOrEqual(Result<T, TError>, Result<T, TError>)
  href: api/Lemonad.ErrorHandling.Result-2.html#Lemonad_ErrorHandling_Result_2_op_LessThanOrEqual_Lemonad_ErrorHandling_Result__0__1__Lemonad_ErrorHandling_Result__0__1__
  commentId: M:Lemonad.ErrorHandling.Result`2.op_LessThanOrEqual(Lemonad.ErrorHandling.Result{`0,`1},Lemonad.ErrorHandling.Result{`0,`1})
  name.vb: LessThanOrEqual(Result(Of T, TError), Result(Of T, TError))
  fullName: Lemonad.ErrorHandling.Result<T, TError>.LessThanOrEqual(Lemonad.ErrorHandling.Result<T, TError>, Lemonad.ErrorHandling.Result<T, TError>)
  fullName.vb: Lemonad.ErrorHandling.Result(Of T, TError).LessThanOrEqual(Lemonad.ErrorHandling.Result(Of T, TError), Lemonad.ErrorHandling.Result(Of T, TError))
  nameWithType: Result<T, TError>.LessThanOrEqual(Result<T, TError>, Result<T, TError>)
  nameWithType.vb: Result(Of T, TError).LessThanOrEqual(Result(Of T, TError), Result(Of T, TError))
- uid: Lemonad.ErrorHandling.Result`2.op_LessThanOrEqual*
  name: LessThanOrEqual
  href: api/Lemonad.ErrorHandling.Result-2.html#Lemonad_ErrorHandling_Result_2_op_LessThanOrEqual_
  commentId: Overload:Lemonad.ErrorHandling.Result`2.op_LessThanOrEqual
  isSpec: "True"
  fullName: Lemonad.ErrorHandling.Result<T, TError>.LessThanOrEqual
  fullName.vb: Lemonad.ErrorHandling.Result(Of T, TError).LessThanOrEqual
  nameWithType: Result<T, TError>.LessThanOrEqual
  nameWithType.vb: Result(Of T, TError).LessThanOrEqual
- uid: Lemonad.ErrorHandling.Result`2.SafeCast*
  name: SafeCast
  href: api/Lemonad.ErrorHandling.Result-2.html#Lemonad_ErrorHandling_Result_2_SafeCast_
  commentId: Overload:Lemonad.ErrorHandling.Result`2.SafeCast
  isSpec: "True"
  fullName: Lemonad.ErrorHandling.Result<T, TError>.SafeCast
  fullName.vb: Lemonad.ErrorHandling.Result(Of T, TError).SafeCast
  nameWithType: Result<T, TError>.SafeCast
  nameWithType.vb: Result(Of T, TError).SafeCast
- uid: Lemonad.ErrorHandling.Result`2.SafeCast``1(System.Func{`1})
  name: SafeCast<TResult>(Func<TError>)
  href: api/Lemonad.ErrorHandling.Result-2.html#Lemonad_ErrorHandling_Result_2_SafeCast__1_System_Func__1__
  commentId: M:Lemonad.ErrorHandling.Result`2.SafeCast``1(System.Func{`1})
  name.vb: SafeCast(Of TResult)(Func(Of TError))
  fullName: Lemonad.ErrorHandling.Result<T, TError>.SafeCast<TResult>(System.Func<TError>)
  fullName.vb: Lemonad.ErrorHandling.Result(Of T, TError).SafeCast(Of TResult)(System.Func(Of TError))
  nameWithType: Result<T, TError>.SafeCast<TResult>(Func<TError>)
  nameWithType.vb: Result(Of T, TError).SafeCast(Of TResult)(Func(Of TError))
- uid: Lemonad.ErrorHandling.Result`2.ToString
  name: ToString()
  href: api/Lemonad.ErrorHandling.Result-2.html#Lemonad_ErrorHandling_Result_2_ToString
  commentId: M:Lemonad.ErrorHandling.Result`2.ToString
  fullName: Lemonad.ErrorHandling.Result<T, TError>.ToString()
  fullName.vb: Lemonad.ErrorHandling.Result(Of T, TError).ToString()
  nameWithType: Result<T, TError>.ToString()
  nameWithType.vb: Result(Of T, TError).ToString()
- uid: Lemonad.ErrorHandling.Result`2.ToString*
  name: ToString
  href: api/Lemonad.ErrorHandling.Result-2.html#Lemonad_ErrorHandling_Result_2_ToString_
  commentId: Overload:Lemonad.ErrorHandling.Result`2.ToString
  isSpec: "True"
  fullName: Lemonad.ErrorHandling.Result<T, TError>.ToString
  fullName.vb: Lemonad.ErrorHandling.Result(Of T, TError).ToString
  nameWithType: Result<T, TError>.ToString
  nameWithType.vb: Result(Of T, TError).ToString
- uid: Lemonad.ErrorHandling.Result`2.Zip*
  name: Zip
  href: api/Lemonad.ErrorHandling.Result-2.html#Lemonad_ErrorHandling_Result_2_Zip_
  commentId: Overload:Lemonad.ErrorHandling.Result`2.Zip
  isSpec: "True"
  fullName: Lemonad.ErrorHandling.Result<T, TError>.Zip
  fullName.vb: Lemonad.ErrorHandling.Result(Of T, TError).Zip
  nameWithType: Result<T, TError>.Zip
  nameWithType.vb: Result(Of T, TError).Zip
- uid: Lemonad.ErrorHandling.Result`2.Zip``2(Lemonad.ErrorHandling.Outcome{``0,`1},System.Func{`0,``0,``1})
  name: Zip<TOther, TResult>(Outcome<TOther, TError>, Func<T, TOther, TResult>)
  href: api/Lemonad.ErrorHandling.Result-2.html#Lemonad_ErrorHandling_Result_2_Zip__2_Lemonad_ErrorHandling_Outcome___0__1__System_Func__0___0___1__
  commentId: M:Lemonad.ErrorHandling.Result`2.Zip``2(Lemonad.ErrorHandling.Outcome{``0,`1},System.Func{`0,``0,``1})
  name.vb: Zip(Of TOther, TResult)(Outcome(Of TOther, TError), Func(Of T, TOther, TResult))
  fullName: Lemonad.ErrorHandling.Result<T, TError>.Zip<TOther, TResult>(Lemonad.ErrorHandling.Outcome<TOther, TError>, System.Func<T, TOther, TResult>)
  fullName.vb: Lemonad.ErrorHandling.Result(Of T, TError).Zip(Of TOther, TResult)(Lemonad.ErrorHandling.Outcome(Of TOther, TError), System.Func(Of T, TOther, TResult))
  nameWithType: Result<T, TError>.Zip<TOther, TResult>(Outcome<TOther, TError>, Func<T, TOther, TResult>)
  nameWithType.vb: Result(Of T, TError).Zip(Of TOther, TResult)(Outcome(Of TOther, TError), Func(Of T, TOther, TResult))
- uid: Lemonad.ErrorHandling.Result`2.Zip``2(Lemonad.ErrorHandling.Result{``0,`1},System.Func{`0,``0,``1})
  name: Zip<TOther, TResult>(Result<TOther, TError>, Func<T, TOther, TResult>)
  href: api/Lemonad.ErrorHandling.Result-2.html#Lemonad_ErrorHandling_Result_2_Zip__2_Lemonad_ErrorHandling_Result___0__1__System_Func__0___0___1__
  commentId: M:Lemonad.ErrorHandling.Result`2.Zip``2(Lemonad.ErrorHandling.Result{``0,`1},System.Func{`0,``0,``1})
  name.vb: Zip(Of TOther, TResult)(Result(Of TOther, TError), Func(Of T, TOther, TResult))
  fullName: Lemonad.ErrorHandling.Result<T, TError>.Zip<TOther, TResult>(Lemonad.ErrorHandling.Result<TOther, TError>, System.Func<T, TOther, TResult>)
  fullName.vb: Lemonad.ErrorHandling.Result(Of T, TError).Zip(Of TOther, TResult)(Lemonad.ErrorHandling.Result(Of TOther, TError), System.Func(Of T, TOther, TResult))
  nameWithType: Result<T, TError>.Zip<TOther, TResult>(Result<TOther, TError>, Func<T, TOther, TResult>)
  nameWithType.vb: Result(Of T, TError).Zip(Of TOther, TResult)(Result(Of TOther, TError), Func(Of T, TOther, TResult))
- uid: Lemonad.ErrorHandling.Result`2.Zip``2(System.Threading.Tasks.Task{Lemonad.ErrorHandling.Result{``0,`1}},System.Func{`0,``0,``1})
  name: Zip<TOther, TResult>(Task<Result<TOther, TError>>, Func<T, TOther, TResult>)
  href: api/Lemonad.ErrorHandling.Result-2.html#Lemonad_ErrorHandling_Result_2_Zip__2_System_Threading_Tasks_Task_Lemonad_ErrorHandling_Result___0__1___System_Func__0___0___1__
  commentId: M:Lemonad.ErrorHandling.Result`2.Zip``2(System.Threading.Tasks.Task{Lemonad.ErrorHandling.Result{``0,`1}},System.Func{`0,``0,``1})
  name.vb: Zip(Of TOther, TResult)(Task(Of Result(Of TOther, TError)), Func(Of T, TOther, TResult))
  fullName: Lemonad.ErrorHandling.Result<T, TError>.Zip<TOther, TResult>(System.Threading.Tasks.Task<Lemonad.ErrorHandling.Result<TOther, TError>>, System.Func<T, TOther, TResult>)
  fullName.vb: Lemonad.ErrorHandling.Result(Of T, TError).Zip(Of TOther, TResult)(System.Threading.Tasks.Task(Of Lemonad.ErrorHandling.Result(Of TOther, TError)), System.Func(Of T, TOther, TResult))
  nameWithType: Result<T, TError>.Zip<TOther, TResult>(Task<Result<TOther, TError>>, Func<T, TOther, TResult>)
  nameWithType.vb: Result(Of T, TError).Zip(Of TOther, TResult)(Task(Of Result(Of TOther, TError)), Func(Of T, TOther, TResult))
